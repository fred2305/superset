(window["webpackJsonp"] = window["webpackJsonp"] || []).push([[19],{

/***/ "./node_modules/@deck.gl/layers/dist/esm/polygon-layer/polygon-layer.js":
/*!******************************************************************************!*\
  !*** ./node_modules/@deck.gl/layers/dist/esm/polygon-layer/polygon-layer.js ***!
  \******************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"default\", function() { return PolygonLayer; });\n/* harmony import */ var _babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/esm/classCallCheck */ \"./node_modules/@babel/runtime/helpers/esm/classCallCheck.js\");\n/* harmony import */ var _babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @babel/runtime/helpers/esm/createClass */ \"./node_modules/@babel/runtime/helpers/esm/createClass.js\");\n/* harmony import */ var _babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @babel/runtime/helpers/esm/possibleConstructorReturn */ \"./node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn.js\");\n/* harmony import */ var _babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @babel/runtime/helpers/esm/getPrototypeOf */ \"./node_modules/@babel/runtime/helpers/esm/getPrototypeOf.js\");\n/* harmony import */ var _babel_runtime_helpers_esm_inherits__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @babel/runtime/helpers/esm/inherits */ \"./node_modules/@babel/runtime/helpers/esm/inherits.js\");\n/* harmony import */ var _luma_gl_core__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @luma.gl/core */ \"./node_modules/@luma.gl/core/dist/esm/materials/phong-material.js\");\n/* harmony import */ var _deck_gl_core__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @deck.gl/core */ \"./node_modules/@deck.gl/core/dist/esm/utils/iterable-utils.js\");\n/* harmony import */ var _deck_gl_core__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @deck.gl/core */ \"./node_modules/@deck.gl/core/dist/esm/lib/composite-layer.js\");\n/* harmony import */ var _solid_polygon_layer_solid_polygon_layer__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../solid-polygon-layer/solid-polygon-layer */ \"./node_modules/@deck.gl/layers/dist/esm/solid-polygon-layer/solid-polygon-layer.js\");\n/* harmony import */ var _path_layer_path_layer__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../path-layer/path-layer */ \"./node_modules/@deck.gl/layers/dist/esm/path-layer/path-layer.js\");\n/* harmony import */ var _solid_polygon_layer_polygon__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ../solid-polygon-layer/polygon */ \"./node_modules/@deck.gl/layers/dist/esm/solid-polygon-layer/polygon.js\");\n\n\n\n\n\n\n\n\n\n\nvar defaultLineColor = [0, 0, 0, 255];\nvar defaultFillColor = [0, 0, 0, 255];\nvar defaultMaterial = new _luma_gl_core__WEBPACK_IMPORTED_MODULE_5__[\"default\"]();\nvar defaultProps = {\n  stroked: true,\n  filled: true,\n  extruded: false,\n  elevationScale: 1,\n  wireframe: false,\n  lineWidthUnits: 'meters',\n  lineWidthScale: 1,\n  lineWidthMinPixels: 0,\n  lineWidthMaxPixels: Number.MAX_SAFE_INTEGER,\n  lineJointRounded: false,\n  lineMiterLimit: 4,\n  lineDashJustified: false,\n  fp64: false,\n  getPolygon: {\n    type: 'accessor',\n    value: function value(f) {\n      return f.polygon;\n    }\n  },\n  getFillColor: {\n    type: 'accessor',\n    value: defaultFillColor\n  },\n  getLineColor: {\n    type: 'accessor',\n    value: defaultLineColor\n  },\n  getLineWidth: {\n    type: 'accessor',\n    value: 1\n  },\n  getLineDashArray: {\n    type: 'accessor',\n    value: [0, 0]\n  },\n  getElevation: {\n    type: 'accessor',\n    value: 1000\n  },\n  material: defaultMaterial\n};\n\nvar PolygonLayer = function (_CompositeLayer) {\n  Object(_babel_runtime_helpers_esm_inherits__WEBPACK_IMPORTED_MODULE_4__[\"default\"])(PolygonLayer, _CompositeLayer);\n\n  function PolygonLayer() {\n    Object(_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(this, PolygonLayer);\n\n    return Object(_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_2__[\"default\"])(this, Object(_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_3__[\"default\"])(PolygonLayer).apply(this, arguments));\n  }\n\n  Object(_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_1__[\"default\"])(PolygonLayer, [{\n    key: \"initializeState\",\n    value: function initializeState() {\n      this.state = {\n        paths: []\n      };\n    }\n  }, {\n    key: \"updateState\",\n    value: function updateState(_ref) {\n      var oldProps = _ref.oldProps,\n          props = _ref.props,\n          changeFlags = _ref.changeFlags;\n      var geometryChanged = changeFlags.dataChanged || changeFlags.updateTriggersChanged && (changeFlags.updateTriggersChanged.all || changeFlags.updateTriggersChanged.getPolygon);\n\n      if (geometryChanged) {\n        this.state.paths = this._getPaths(props);\n      }\n    }\n  }, {\n    key: \"getPickingInfo\",\n    value: function getPickingInfo(_ref2) {\n      var info = _ref2.info;\n      return Object.assign(info, {\n        object: info.object && info.object.object || info.object\n      });\n    }\n  }, {\n    key: \"_getPaths\",\n    value: function _getPaths(_ref3) {\n      var data = _ref3.data,\n          getPolygon = _ref3.getPolygon,\n          positionFormat = _ref3.positionFormat;\n      var paths = [];\n      var positionSize = positionFormat === 'XY' ? 2 : 3;\n\n      var _createIterable = Object(_deck_gl_core__WEBPACK_IMPORTED_MODULE_6__[\"createIterable\"])(data),\n          iterable = _createIterable.iterable,\n          objectInfo = _createIterable.objectInfo;\n\n      var _iteratorNormalCompletion = true;\n      var _didIteratorError = false;\n      var _iteratorError = undefined;\n\n      try {\n        for (var _iterator = iterable[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n          var object = _step.value;\n          objectInfo.index++;\n\n          var _Polygon$normalize = _solid_polygon_layer_polygon__WEBPACK_IMPORTED_MODULE_10__[\"normalize\"](getPolygon(object, objectInfo), positionSize),\n              positions = _Polygon$normalize.positions,\n              holeIndices = _Polygon$normalize.holeIndices;\n\n          if (holeIndices) {\n            for (var i = 0; i <= holeIndices.length; i++) {\n              var path = positions.subarray(holeIndices[i - 1] || 0, holeIndices[i] || positions.length);\n              paths.push({\n                path: path,\n                object: object\n              });\n            }\n          } else {\n            paths.push({\n              path: positions,\n              object: object\n            });\n          }\n        }\n      } catch (err) {\n        _didIteratorError = true;\n        _iteratorError = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion && _iterator.return != null) {\n            _iterator.return();\n          }\n        } finally {\n          if (_didIteratorError) {\n            throw _iteratorError;\n          }\n        }\n      }\n\n      return paths;\n    }\n  }, {\n    key: \"_getAccessor\",\n    value: function _getAccessor(accessor) {\n      if (typeof accessor === 'function') {\n        return function (x) {\n          return accessor(x.object);\n        };\n      }\n\n      return accessor;\n    }\n  }, {\n    key: \"renderLayers\",\n    value: function renderLayers() {\n      var _this$props = this.props,\n          data = _this$props.data,\n          stroked = _this$props.stroked,\n          filled = _this$props.filled,\n          extruded = _this$props.extruded,\n          wireframe = _this$props.wireframe,\n          elevationScale = _this$props.elevationScale,\n          transitions = _this$props.transitions;\n      var _this$props2 = this.props,\n          lineWidthUnits = _this$props2.lineWidthUnits,\n          lineWidthScale = _this$props2.lineWidthScale,\n          lineWidthMinPixels = _this$props2.lineWidthMinPixels,\n          lineWidthMaxPixels = _this$props2.lineWidthMaxPixels,\n          lineJointRounded = _this$props2.lineJointRounded,\n          lineMiterLimit = _this$props2.lineMiterLimit,\n          lineDashJustified = _this$props2.lineDashJustified,\n          fp64 = _this$props2.fp64;\n      var _this$props3 = this.props,\n          getFillColor = _this$props3.getFillColor,\n          getLineColor = _this$props3.getLineColor,\n          getLineWidth = _this$props3.getLineWidth,\n          getLineDashArray = _this$props3.getLineDashArray,\n          getElevation = _this$props3.getElevation,\n          getPolygon = _this$props3.getPolygon,\n          updateTriggers = _this$props3.updateTriggers,\n          material = _this$props3.material;\n      var paths = this.state.paths;\n      var FillLayer = this.getSubLayerClass('fill', _solid_polygon_layer_solid_polygon_layer__WEBPACK_IMPORTED_MODULE_8__[\"default\"]);\n      var StrokeLayer = this.getSubLayerClass('stroke', _path_layer_path_layer__WEBPACK_IMPORTED_MODULE_9__[\"default\"]);\n      var polygonLayer = this.shouldRenderSubLayer('fill', paths) && new FillLayer({\n        extruded: extruded,\n        elevationScale: elevationScale,\n        fp64: fp64,\n        filled: filled,\n        wireframe: wireframe,\n        getElevation: getElevation,\n        getFillColor: getFillColor,\n        getLineColor: getLineColor,\n        material: material,\n        transitions: transitions\n      }, this.getSubLayerProps({\n        id: 'fill',\n        updateTriggers: {\n          getPolygon: updateTriggers.getPolygon,\n          getElevation: updateTriggers.getElevation,\n          getFillColor: updateTriggers.getFillColor,\n          getLineColor: updateTriggers.getLineColor\n        }\n      }), {\n        data: data,\n        getPolygon: getPolygon\n      });\n      var polygonLineLayer = !extruded && stroked && this.shouldRenderSubLayer('stroke', paths) && new StrokeLayer({\n        fp64: fp64,\n        widthUnits: lineWidthUnits,\n        widthScale: lineWidthScale,\n        widthMinPixels: lineWidthMinPixels,\n        widthMaxPixels: lineWidthMaxPixels,\n        rounded: lineJointRounded,\n        miterLimit: lineMiterLimit,\n        dashJustified: lineDashJustified,\n        transitions: transitions && {\n          getWidth: transitions.getLineWidth,\n          getColor: transitions.getLineColor,\n          getPath: transitions.getPolygon\n        },\n        getColor: this._getAccessor(getLineColor),\n        getWidth: this._getAccessor(getLineWidth),\n        getDashArray: this._getAccessor(getLineDashArray)\n      }, this.getSubLayerProps({\n        id: 'stroke',\n        updateTriggers: {\n          getWidth: updateTriggers.getLineWidth,\n          getColor: updateTriggers.getLineColor,\n          getDashArray: updateTriggers.getLineDashArray\n        }\n      }), {\n        data: paths,\n        getPath: function getPath(x) {\n          return x.path;\n        }\n      });\n      return [!extruded && polygonLayer, polygonLineLayer, extruded && polygonLayer];\n    }\n  }]);\n\n  return PolygonLayer;\n}(_deck_gl_core__WEBPACK_IMPORTED_MODULE_7__[\"default\"]);\n\n\nPolygonLayer.layerName = 'PolygonLayer';\nPolygonLayer.defaultProps = defaultProps;\n//# sourceMappingURL=polygon-layer.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/@deck.gl/layers/dist/esm/polygon-layer/polygon-layer.js\n");

/***/ }),

/***/ "./node_modules/@superset-ui/legacy-preset-chart-deckgl/esm/layers/Polygon/Polygon.js":
/*!********************************************************************************************!*\
  !*** ./node_modules/@superset-ui/legacy-preset-chart-deckgl/esm/layers/Polygon/Polygon.js ***!
  \********************************************************************************************/
/*! exports provided: getLayer, default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"getLayer\", function() { return getLayer; });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"./node_modules/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var prop_types__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! prop-types */ \"./node_modules/prop-types/index.js\");\n/* harmony import */ var prop_types__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(prop_types__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var deck_gl__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! deck.gl */ \"./node_modules/@deck.gl/layers/dist/esm/polygon-layer/polygon-layer.js\");\n/* harmony import */ var _AnimatableDeckGLContainer__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../AnimatableDeckGLContainer */ \"./node_modules/@superset-ui/legacy-preset-chart-deckgl/esm/AnimatableDeckGLContainer.js\");\n/* harmony import */ var _components_Legend__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../components/Legend */ \"./node_modules/@superset-ui/legacy-preset-chart-deckgl/esm/components/Legend.js\");\n/* harmony import */ var _TooltipRow__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../TooltipRow */ \"./node_modules/@superset-ui/legacy-preset-chart-deckgl/esm/TooltipRow.js\");\n/* harmony import */ var _utils__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../utils */ \"./node_modules/@superset-ui/legacy-preset-chart-deckgl/esm/utils.js\");\n/* harmony import */ var _common__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../common */ \"./node_modules/@superset-ui/legacy-preset-chart-deckgl/esm/layers/common.js\");\n/* harmony import */ var _utils_time__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../../utils/time */ \"./node_modules/@superset-ui/legacy-preset-chart-deckgl/esm/utils/time.js\");\n/* harmony import */ var _utils_sandbox__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../../utils/sandbox */ \"./node_modules/@superset-ui/legacy-preset-chart-deckgl/esm/utils/sandbox.js\");\n/* harmony import */ var _utils_getPointsFromPolygon__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ../../utils/getPointsFromPolygon */ \"./node_modules/@superset-ui/legacy-preset-chart-deckgl/esm/utils/getPointsFromPolygon.js\");\n/* harmony import */ var _utils_fitViewport__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ../../utils/fitViewport */ \"./node_modules/@superset-ui/legacy-preset-chart-deckgl/esm/utils/fitViewport.js\");\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\n/* eslint-disable react/sort-prop-types */\n\n/* eslint-disable react/jsx-handler-names */\n\n/* eslint-disable react/no-access-state-in-setstate */\n\n/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\n/* eslint no-underscore-dangle: [\"error\", { \"allow\": [\"\", \"__timestamp\"] }] */\n\n\n\n\n\n\n\n\n\n // eslint-disable-next-line import/extensions\n\n // eslint-disable-next-line import/extensions\n\n\nconst DOUBLE_CLICK_TRESHOLD = 250; // milliseconds\n\nfunction _getElevation(d, colorScaler) {\n  /* in deck.gl 5.3.4 (used in Superset as of 2018-10-24), if a polygon has\n   * opacity zero it will make everything behind it have opacity zero,\n   * effectively showing the map layer no matter what other polygons are\n   * behind it.\n   */\n  return colorScaler(d)[3] === 0 ? 0 : d.elevation;\n}\n\nfunction setTooltipContent(formData) {\n  return o => {\n    const metricLabel = formData.metric.label || formData.metric;\n    return react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(\"div\", {\n      className: \"deckgl-tooltip\"\n    }, o.object.name && react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(_TooltipRow__WEBPACK_IMPORTED_MODULE_5__[\"default\"], {\n      label: \"name: \",\n      value: \"\" + o.object.name\n    }), o.object[formData.line_column] && react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(_TooltipRow__WEBPACK_IMPORTED_MODULE_5__[\"default\"], {\n      label: formData.line_column + \": \",\n      value: \"\" + o.object[formData.line_column]\n    }), formData.metric && react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(_TooltipRow__WEBPACK_IMPORTED_MODULE_5__[\"default\"], {\n      label: metricLabel + \": \",\n      value: \"\" + o.object[metricLabel]\n    }));\n  };\n}\n\nfunction getLayer(formData, payload, onAddFilter, setTooltip, selected, onSelect, filters) {\n  const fd = formData;\n  const fc = fd.fill_color_picker;\n  const sc = fd.stroke_color_picker;\n  let data = [...payload.data.features];\n\n  if (filters != null) {\n    filters.forEach(f => {\n      data = data.filter(x => f(x));\n    });\n  }\n\n  if (fd.js_data_mutator) {\n    // Applying user defined data mutator if defined\n    const jsFnMutator = Object(_utils_sandbox__WEBPACK_IMPORTED_MODULE_9__[\"default\"])(fd.js_data_mutator);\n    data = jsFnMutator(data);\n  }\n\n  const metricLabel = fd.metric ? fd.metric.label || fd.metric : null;\n\n  const accessor = d => d[metricLabel]; // base color for the polygons\n\n\n  const baseColorScaler = fd.metric === null ? () => [fc.r, fc.g, fc.b, 255 * fc.a] : Object(_utils__WEBPACK_IMPORTED_MODULE_6__[\"getBreakPointColorScaler\"])(fd, data, accessor); // when polygons are selected, reduce the opacity of non-selected polygons\n\n  const colorScaler = d => {\n    const baseColor = baseColorScaler(d);\n\n    if (selected.length > 0 && !selected.includes(d[fd.line_column])) {\n      baseColor[3] /= 2;\n    }\n\n    return baseColor;\n  };\n\n  const tooltipContentGenerator = fd.line_column && fd.metric && ['json', 'geohash', 'zipcode'].includes(fd.line_type) ? setTooltipContent(fd) : undefined;\n  return new deck_gl__WEBPACK_IMPORTED_MODULE_2__[\"default\"](_extends({\n    id: \"path-layer-\" + fd.slice_id,\n    data,\n    pickable: true,\n    filled: fd.filled,\n    stroked: fd.stroked,\n    getPolygon: _utils_getPointsFromPolygon__WEBPACK_IMPORTED_MODULE_10__[\"default\"],\n    getFillColor: colorScaler,\n    getLineColor: [sc.r, sc.g, sc.b, 255 * sc.a],\n    getLineWidth: fd.line_width,\n    extruded: fd.extruded,\n    getElevation: d => _getElevation(d, colorScaler),\n    elevationScale: fd.multiplier,\n    fp64: true\n  }, Object(_common__WEBPACK_IMPORTED_MODULE_7__[\"commonLayerProps\"])(fd, setTooltip, tooltipContentGenerator, onSelect)));\n}\nconst propTypes = {\n  formData: prop_types__WEBPACK_IMPORTED_MODULE_1___default.a.object.isRequired,\n  payload: prop_types__WEBPACK_IMPORTED_MODULE_1___default.a.object.isRequired,\n  setControlValue: prop_types__WEBPACK_IMPORTED_MODULE_1___default.a.func.isRequired,\n  viewport: prop_types__WEBPACK_IMPORTED_MODULE_1___default.a.object.isRequired,\n  onAddFilter: prop_types__WEBPACK_IMPORTED_MODULE_1___default.a.func,\n  width: prop_types__WEBPACK_IMPORTED_MODULE_1___default.a.number.isRequired,\n  height: prop_types__WEBPACK_IMPORTED_MODULE_1___default.a.number.isRequired\n};\nconst defaultProps = {\n  onAddFilter() {}\n\n};\n\nclass DeckGLPolygon extends react__WEBPACK_IMPORTED_MODULE_0___default.a.Component {\n  constructor(props) {\n    super(props);\n\n    _defineProperty(this, \"containerRef\", react__WEBPACK_IMPORTED_MODULE_0___default.a.createRef());\n\n    _defineProperty(this, \"setTooltip\", tooltip => {\n      const {\n        current\n      } = this.containerRef;\n\n      if (current) {\n        current.setTooltip(tooltip);\n      }\n    });\n\n    this.state = DeckGLPolygon.getDerivedStateFromProps(props);\n    this.getLayers = this.getLayers.bind(this);\n    this.onSelect = this.onSelect.bind(this);\n    this.onValuesChange = this.onValuesChange.bind(this);\n  }\n\n  static getDerivedStateFromProps(props, state) {\n    const {\n      width,\n      height,\n      formData,\n      payload\n    } = props; // the state is computed only from the payload; if it hasn't changed, do\n    // not recompute state since this would reset selections and/or the play\n    // slider position due to changes in form controls\n\n    if (state && payload.form_data === state.formData) {\n      return null;\n    }\n\n    const features = payload.data.features || [];\n    const timestamps = features.map(f => f.__timestamp); // the granularity has to be read from the payload form_data, not the\n    // props formData which comes from the instantaneous controls state\n\n    const granularity = payload.form_data.time_grain_sqla || payload.form_data.granularity || 'P1D';\n    const {\n      start,\n      end,\n      getStep,\n      values,\n      disabled\n    } = Object(_utils_time__WEBPACK_IMPORTED_MODULE_8__[\"getPlaySliderParams\"])(timestamps, granularity);\n    let {\n      viewport\n    } = props;\n\n    if (formData.autozoom) {\n      viewport = Object(_utils_fitViewport__WEBPACK_IMPORTED_MODULE_11__[\"default\"])(viewport, {\n        width,\n        height,\n        points: features.flatMap(_utils_getPointsFromPolygon__WEBPACK_IMPORTED_MODULE_10__[\"default\"])\n      });\n    }\n\n    return {\n      start,\n      end,\n      getStep,\n      values,\n      disabled,\n      viewport,\n      selected: [],\n      lastClick: 0,\n      formData: payload.form_data\n    };\n  }\n\n  onSelect(polygon) {\n    const {\n      formData,\n      onAddFilter\n    } = this.props;\n    const now = new Date();\n    const doubleClick = now - this.state.lastClick <= DOUBLE_CLICK_TRESHOLD; // toggle selected polygons\n\n    const selected = [...this.state.selected];\n\n    if (doubleClick) {\n      selected.splice(0, selected.length, polygon);\n    } else if (formData.toggle_polygons) {\n      const i = selected.indexOf(polygon);\n\n      if (i === -1) {\n        selected.push(polygon);\n      } else {\n        selected.splice(i, 1);\n      }\n    } else {\n      selected.splice(0, 1, polygon);\n    }\n\n    this.setState({\n      selected,\n      lastClick: now\n    });\n\n    if (formData.table_filter) {\n      onAddFilter(formData.line_column, selected, false, true);\n    }\n  }\n\n  onValuesChange(values) {\n    this.setState({\n      values: Array.isArray(values) ? values : [values, values + this.state.getStep(values)]\n    });\n  }\n\n  getLayers(values) {\n    if (this.props.payload.data.features === undefined) {\n      return [];\n    }\n\n    const filters = []; // time filter\n\n    if (values[0] === values[1] || values[1] === this.end) {\n      filters.push(d => d.__timestamp >= values[0] && d.__timestamp <= values[1]);\n    } else {\n      filters.push(d => d.__timestamp >= values[0] && d.__timestamp < values[1]);\n    }\n\n    const layer = getLayer(this.props.formData, this.props.payload, this.props.onAddFilter, this.setTooltip, this.state.selected, this.onSelect, filters);\n    return [layer];\n  }\n\n  render() {\n    const {\n      payload,\n      formData,\n      setControlValue\n    } = this.props;\n    const {\n      start,\n      end,\n      getStep,\n      values,\n      disabled,\n      viewport\n    } = this.state;\n    const fd = formData;\n    const metricLabel = fd.metric ? fd.metric.label || fd.metric : null;\n\n    const accessor = d => d[metricLabel];\n\n    const buckets = Object(_utils__WEBPACK_IMPORTED_MODULE_6__[\"getBuckets\"])(formData, payload.data.features, accessor);\n    return react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(\"div\", {\n      style: {\n        position: 'relative'\n      }\n    }, react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(_AnimatableDeckGLContainer__WEBPACK_IMPORTED_MODULE_3__[\"default\"], {\n      ref: this.containerRef,\n      aggregation: true,\n      getLayers: this.getLayers,\n      start: start,\n      end: end,\n      getStep: getStep,\n      values: values,\n      disabled: disabled,\n      viewport: viewport,\n      width: this.props.width,\n      height: this.props.height,\n      mapboxApiAccessToken: payload.data.mapboxApiKey,\n      mapStyle: formData.mapbox_style,\n      setControlValue: setControlValue,\n      onValuesChange: this.onValuesChange,\n      onViewportChange: this.onViewportChange\n    }, formData.metric !== null && react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(_components_Legend__WEBPACK_IMPORTED_MODULE_4__[\"default\"], {\n      categories: buckets,\n      position: formData.legend_position,\n      format: formData.legend_format\n    })));\n  }\n\n}\n\nDeckGLPolygon.propTypes = propTypes;\nDeckGLPolygon.defaultProps = defaultProps;\n/* harmony default export */ __webpack_exports__[\"default\"] = (DeckGLPolygon);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/@superset-ui/legacy-preset-chart-deckgl/esm/layers/Polygon/Polygon.js\n");

/***/ }),

/***/ "./node_modules/@superset-ui/legacy-preset-chart-deckgl/esm/utils.js":
/*!***************************************************************************!*\
  !*** ./node_modules/@superset-ui/legacy-preset-chart-deckgl/esm/utils.js ***!
  \***************************************************************************/
/*! exports provided: getBreakPoints, getBreakPointColorScaler, getBuckets */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"getBreakPoints\", function() { return getBreakPoints; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"getBreakPointColorScaler\", function() { return getBreakPointColorScaler; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"getBuckets\", function() { return getBuckets; });\n/* harmony import */ var d3_array__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! d3-array */ \"./node_modules/d3-array/src/index.js\");\n/* harmony import */ var d3_scale__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! d3-scale */ \"./node_modules/d3-scale/src/index.js\");\n/* harmony import */ var _superset_ui_color__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @superset-ui/color */ \"./node_modules/@superset-ui/color/esm/index.js\");\n/* harmony import */ var _superset_ui_color__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(_superset_ui_color__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var _utils_colors__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./utils/colors */ \"./node_modules/@superset-ui/legacy-preset-chart-deckgl/esm/utils/colors.js\");\n/* eslint-disable no-negated-condition */\n\n/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\n\n\n\nconst DEFAULT_NUM_BUCKETS = 10;\nfunction getBreakPoints(_ref, features, accessor) {\n  let {\n    break_points: formDataBreakPoints,\n    num_buckets: formDataNumBuckets\n  } = _ref;\n\n  if (!features) {\n    return [];\n  }\n\n  if (formDataBreakPoints === undefined || formDataBreakPoints.length === 0) {\n    // compute evenly distributed break points based on number of buckets\n    const numBuckets = formDataNumBuckets ? parseInt(formDataNumBuckets, 10) : DEFAULT_NUM_BUCKETS;\n    const [minValue, maxValue] = Object(d3_array__WEBPACK_IMPORTED_MODULE_0__[\"extent\"])(features, accessor);\n\n    if (minValue === undefined) {\n      return [];\n    }\n\n    const delta = (maxValue - minValue) / numBuckets;\n    const precision = delta === 0 ? 0 : Math.max(0, Math.ceil(Math.log10(1 / delta)));\n    const extraBucket = maxValue > maxValue.toFixed(precision) ? 1 : 0;\n    return new Array(numBuckets + 1 + extraBucket).fill().map((_, i) => (minValue + i * delta).toFixed(precision));\n  }\n\n  return formDataBreakPoints.sort((a, b) => parseFloat(a) - parseFloat(b));\n}\nfunction getBreakPointColorScaler(_ref2, features, accessor) {\n  let {\n    break_points: formDataBreakPoints,\n    num_buckets: formDataNumBuckets,\n    linear_color_scheme: linearColorScheme,\n    opacity\n  } = _ref2;\n  const breakPoints = formDataBreakPoints || formDataNumBuckets ? getBreakPoints({\n    break_points: formDataBreakPoints,\n    num_buckets: formDataNumBuckets\n  }, features, accessor) : null;\n  const colorScheme = Array.isArray(linearColorScheme) ? new _superset_ui_color__WEBPACK_IMPORTED_MODULE_2__[\"SequentialScheme\"]({\n    colors: linearColorScheme,\n    id: 'custom'\n  }) : Object(_superset_ui_color__WEBPACK_IMPORTED_MODULE_2__[\"getSequentialSchemeRegistry\"])().get(linearColorScheme);\n  let scaler;\n  let maskPoint;\n\n  if (breakPoints !== null) {\n    // bucket colors into discrete colors\n    const n = breakPoints.length - 1;\n    const bucketedColors = n > 1 ? colorScheme.getColors(n) : [colorScheme.colors[colorScheme.colors.length - 1]]; // repeat ends\n\n    const first = bucketedColors[0];\n    const last = bucketedColors[bucketedColors.length - 1];\n    bucketedColors.unshift(first);\n    bucketedColors.push(last);\n    const points = breakPoints.map(p => parseFloat(p));\n    scaler = Object(d3_scale__WEBPACK_IMPORTED_MODULE_1__[\"scaleThreshold\"])().domain(points).range(bucketedColors);\n\n    maskPoint = value => value > breakPoints[n] || value < breakPoints[0];\n  } else {\n    // interpolate colors linearly\n    scaler = colorScheme.createLinearScale(Object(d3_array__WEBPACK_IMPORTED_MODULE_0__[\"extent\"])(features, accessor));\n\n    maskPoint = () => false;\n  }\n\n  return d => {\n    const v = accessor(d);\n    const c = Object(_utils_colors__WEBPACK_IMPORTED_MODULE_3__[\"hexToRGB\"])(scaler(v));\n\n    if (maskPoint(v)) {\n      c[3] = 0;\n    } else {\n      c[3] = opacity / 100 * 255;\n    }\n\n    return c;\n  };\n}\nfunction getBuckets(fd, features, accessor) {\n  const breakPoints = getBreakPoints(fd, features, accessor);\n  const colorScaler = getBreakPointColorScaler(fd, features, accessor);\n  const buckets = {};\n  breakPoints.slice(1).forEach((value, i) => {\n    const range = breakPoints[i] + \" - \" + breakPoints[i + 1];\n    const mid = 0.5 * (parseFloat(breakPoints[i]) + parseFloat(breakPoints[i + 1])); // fix polygon doesn't show\n\n    const metricLabel = fd.metric ? fd.metric.label || fd.metric : null;\n    buckets[range] = {\n      color: colorScaler({\n        [metricLabel || fd.metric]: mid\n      }),\n      enabled: true\n    };\n  });\n  return buckets;\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHN1cGVyc2V0LXVpL2xlZ2FjeS1wcmVzZXQtY2hhcnQtZGVja2dsL2VzbS91dGlscy5qcy5qcyIsInNvdXJjZXMiOlsid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9Ac3VwZXJzZXQtdWkvbGVnYWN5LXByZXNldC1jaGFydC1kZWNrZ2wvZXNtL3V0aWxzLmpzP2RlNTQiXSwic291cmNlc0NvbnRlbnQiOlsiLyogZXNsaW50LWRpc2FibGUgbm8tbmVnYXRlZC1jb25kaXRpb24gKi9cblxuLyoqXG4gKiBMaWNlbnNlZCB0byB0aGUgQXBhY2hlIFNvZnR3YXJlIEZvdW5kYXRpb24gKEFTRikgdW5kZXIgb25lXG4gKiBvciBtb3JlIGNvbnRyaWJ1dG9yIGxpY2Vuc2UgYWdyZWVtZW50cy4gIFNlZSB0aGUgTk9USUNFIGZpbGVcbiAqIGRpc3RyaWJ1dGVkIHdpdGggdGhpcyB3b3JrIGZvciBhZGRpdGlvbmFsIGluZm9ybWF0aW9uXG4gKiByZWdhcmRpbmcgY29weXJpZ2h0IG93bmVyc2hpcC4gIFRoZSBBU0YgbGljZW5zZXMgdGhpcyBmaWxlXG4gKiB0byB5b3UgdW5kZXIgdGhlIEFwYWNoZSBMaWNlbnNlLCBWZXJzaW9uIDIuMCAodGhlXG4gKiBcIkxpY2Vuc2VcIik7IHlvdSBtYXkgbm90IHVzZSB0aGlzIGZpbGUgZXhjZXB0IGluIGNvbXBsaWFuY2VcbiAqIHdpdGggdGhlIExpY2Vuc2UuICBZb3UgbWF5IG9idGFpbiBhIGNvcHkgb2YgdGhlIExpY2Vuc2UgYXRcbiAqXG4gKiAgIGh0dHA6Ly93d3cuYXBhY2hlLm9yZy9saWNlbnNlcy9MSUNFTlNFLTIuMFxuICpcbiAqIFVubGVzcyByZXF1aXJlZCBieSBhcHBsaWNhYmxlIGxhdyBvciBhZ3JlZWQgdG8gaW4gd3JpdGluZyxcbiAqIHNvZnR3YXJlIGRpc3RyaWJ1dGVkIHVuZGVyIHRoZSBMaWNlbnNlIGlzIGRpc3RyaWJ1dGVkIG9uIGFuXG4gKiBcIkFTIElTXCIgQkFTSVMsIFdJVEhPVVQgV0FSUkFOVElFUyBPUiBDT05ESVRJT05TIE9GIEFOWVxuICogS0lORCwgZWl0aGVyIGV4cHJlc3Mgb3IgaW1wbGllZC4gIFNlZSB0aGUgTGljZW5zZSBmb3IgdGhlXG4gKiBzcGVjaWZpYyBsYW5ndWFnZSBnb3Zlcm5pbmcgcGVybWlzc2lvbnMgYW5kIGxpbWl0YXRpb25zXG4gKiB1bmRlciB0aGUgTGljZW5zZS5cbiAqL1xuaW1wb3J0IHsgZXh0ZW50IH0gZnJvbSAnZDMtYXJyYXknO1xuaW1wb3J0IHsgc2NhbGVUaHJlc2hvbGQgfSBmcm9tICdkMy1zY2FsZSc7XG5pbXBvcnQgeyBnZXRTZXF1ZW50aWFsU2NoZW1lUmVnaXN0cnksIFNlcXVlbnRpYWxTY2hlbWUgfSBmcm9tICdAc3VwZXJzZXQtdWkvY29sb3InO1xuaW1wb3J0IHsgaGV4VG9SR0IgfSBmcm9tICcuL3V0aWxzL2NvbG9ycyc7XG5jb25zdCBERUZBVUxUX05VTV9CVUNLRVRTID0gMTA7XG5leHBvcnQgZnVuY3Rpb24gZ2V0QnJlYWtQb2ludHMoX3JlZiwgZmVhdHVyZXMsIGFjY2Vzc29yKSB7XG4gIGxldCB7XG4gICAgYnJlYWtfcG9pbnRzOiBmb3JtRGF0YUJyZWFrUG9pbnRzLFxuICAgIG51bV9idWNrZXRzOiBmb3JtRGF0YU51bUJ1Y2tldHNcbiAgfSA9IF9yZWY7XG5cbiAgaWYgKCFmZWF0dXJlcykge1xuICAgIHJldHVybiBbXTtcbiAgfVxuXG4gIGlmIChmb3JtRGF0YUJyZWFrUG9pbnRzID09PSB1bmRlZmluZWQgfHwgZm9ybURhdGFCcmVha1BvaW50cy5sZW5ndGggPT09IDApIHtcbiAgICAvLyBjb21wdXRlIGV2ZW5seSBkaXN0cmlidXRlZCBicmVhayBwb2ludHMgYmFzZWQgb24gbnVtYmVyIG9mIGJ1Y2tldHNcbiAgICBjb25zdCBudW1CdWNrZXRzID0gZm9ybURhdGFOdW1CdWNrZXRzID8gcGFyc2VJbnQoZm9ybURhdGFOdW1CdWNrZXRzLCAxMCkgOiBERUZBVUxUX05VTV9CVUNLRVRTO1xuICAgIGNvbnN0IFttaW5WYWx1ZSwgbWF4VmFsdWVdID0gZXh0ZW50KGZlYXR1cmVzLCBhY2Nlc3Nvcik7XG5cbiAgICBpZiAobWluVmFsdWUgPT09IHVuZGVmaW5lZCkge1xuICAgICAgcmV0dXJuIFtdO1xuICAgIH1cblxuICAgIGNvbnN0IGRlbHRhID0gKG1heFZhbHVlIC0gbWluVmFsdWUpIC8gbnVtQnVja2V0cztcbiAgICBjb25zdCBwcmVjaXNpb24gPSBkZWx0YSA9PT0gMCA/IDAgOiBNYXRoLm1heCgwLCBNYXRoLmNlaWwoTWF0aC5sb2cxMCgxIC8gZGVsdGEpKSk7XG4gICAgY29uc3QgZXh0cmFCdWNrZXQgPSBtYXhWYWx1ZSA+IG1heFZhbHVlLnRvRml4ZWQocHJlY2lzaW9uKSA/IDEgOiAwO1xuICAgIHJldHVybiBuZXcgQXJyYXkobnVtQnVja2V0cyArIDEgKyBleHRyYUJ1Y2tldCkuZmlsbCgpLm1hcCgoXywgaSkgPT4gKG1pblZhbHVlICsgaSAqIGRlbHRhKS50b0ZpeGVkKHByZWNpc2lvbikpO1xuICB9XG5cbiAgcmV0dXJuIGZvcm1EYXRhQnJlYWtQb2ludHMuc29ydCgoYSwgYikgPT4gcGFyc2VGbG9hdChhKSAtIHBhcnNlRmxvYXQoYikpO1xufVxuZXhwb3J0IGZ1bmN0aW9uIGdldEJyZWFrUG9pbnRDb2xvclNjYWxlcihfcmVmMiwgZmVhdHVyZXMsIGFjY2Vzc29yKSB7XG4gIGxldCB7XG4gICAgYnJlYWtfcG9pbnRzOiBmb3JtRGF0YUJyZWFrUG9pbnRzLFxuICAgIG51bV9idWNrZXRzOiBmb3JtRGF0YU51bUJ1Y2tldHMsXG4gICAgbGluZWFyX2NvbG9yX3NjaGVtZTogbGluZWFyQ29sb3JTY2hlbWUsXG4gICAgb3BhY2l0eVxuICB9ID0gX3JlZjI7XG4gIGNvbnN0IGJyZWFrUG9pbnRzID0gZm9ybURhdGFCcmVha1BvaW50cyB8fCBmb3JtRGF0YU51bUJ1Y2tldHMgPyBnZXRCcmVha1BvaW50cyh7XG4gICAgYnJlYWtfcG9pbnRzOiBmb3JtRGF0YUJyZWFrUG9pbnRzLFxuICAgIG51bV9idWNrZXRzOiBmb3JtRGF0YU51bUJ1Y2tldHNcbiAgfSwgZmVhdHVyZXMsIGFjY2Vzc29yKSA6IG51bGw7XG4gIGNvbnN0IGNvbG9yU2NoZW1lID0gQXJyYXkuaXNBcnJheShsaW5lYXJDb2xvclNjaGVtZSkgPyBuZXcgU2VxdWVudGlhbFNjaGVtZSh7XG4gICAgY29sb3JzOiBsaW5lYXJDb2xvclNjaGVtZSxcbiAgICBpZDogJ2N1c3RvbSdcbiAgfSkgOiBnZXRTZXF1ZW50aWFsU2NoZW1lUmVnaXN0cnkoKS5nZXQobGluZWFyQ29sb3JTY2hlbWUpO1xuICBsZXQgc2NhbGVyO1xuICBsZXQgbWFza1BvaW50O1xuXG4gIGlmIChicmVha1BvaW50cyAhPT0gbnVsbCkge1xuICAgIC8vIGJ1Y2tldCBjb2xvcnMgaW50byBkaXNjcmV0ZSBjb2xvcnNcbiAgICBjb25zdCBuID0gYnJlYWtQb2ludHMubGVuZ3RoIC0gMTtcbiAgICBjb25zdCBidWNrZXRlZENvbG9ycyA9IG4gPiAxID8gY29sb3JTY2hlbWUuZ2V0Q29sb3JzKG4pIDogW2NvbG9yU2NoZW1lLmNvbG9yc1tjb2xvclNjaGVtZS5jb2xvcnMubGVuZ3RoIC0gMV1dOyAvLyByZXBlYXQgZW5kc1xuXG4gICAgY29uc3QgZmlyc3QgPSBidWNrZXRlZENvbG9yc1swXTtcbiAgICBjb25zdCBsYXN0ID0gYnVja2V0ZWRDb2xvcnNbYnVja2V0ZWRDb2xvcnMubGVuZ3RoIC0gMV07XG4gICAgYnVja2V0ZWRDb2xvcnMudW5zaGlmdChmaXJzdCk7XG4gICAgYnVja2V0ZWRDb2xvcnMucHVzaChsYXN0KTtcbiAgICBjb25zdCBwb2ludHMgPSBicmVha1BvaW50cy5tYXAocCA9PiBwYXJzZUZsb2F0KHApKTtcbiAgICBzY2FsZXIgPSBzY2FsZVRocmVzaG9sZCgpLmRvbWFpbihwb2ludHMpLnJhbmdlKGJ1Y2tldGVkQ29sb3JzKTtcblxuICAgIG1hc2tQb2ludCA9IHZhbHVlID0+IHZhbHVlID4gYnJlYWtQb2ludHNbbl0gfHwgdmFsdWUgPCBicmVha1BvaW50c1swXTtcbiAgfSBlbHNlIHtcbiAgICAvLyBpbnRlcnBvbGF0ZSBjb2xvcnMgbGluZWFybHlcbiAgICBzY2FsZXIgPSBjb2xvclNjaGVtZS5jcmVhdGVMaW5lYXJTY2FsZShleHRlbnQoZmVhdHVyZXMsIGFjY2Vzc29yKSk7XG5cbiAgICBtYXNrUG9pbnQgPSAoKSA9PiBmYWxzZTtcbiAgfVxuXG4gIHJldHVybiBkID0+IHtcbiAgICBjb25zdCB2ID0gYWNjZXNzb3IoZCk7XG4gICAgY29uc3QgYyA9IGhleFRvUkdCKHNjYWxlcih2KSk7XG5cbiAgICBpZiAobWFza1BvaW50KHYpKSB7XG4gICAgICBjWzNdID0gMDtcbiAgICB9IGVsc2Uge1xuICAgICAgY1szXSA9IG9wYWNpdHkgLyAxMDAgKiAyNTU7XG4gICAgfVxuXG4gICAgcmV0dXJuIGM7XG4gIH07XG59XG5leHBvcnQgZnVuY3Rpb24gZ2V0QnVja2V0cyhmZCwgZmVhdHVyZXMsIGFjY2Vzc29yKSB7XG4gIGNvbnN0IGJyZWFrUG9pbnRzID0gZ2V0QnJlYWtQb2ludHMoZmQsIGZlYXR1cmVzLCBhY2Nlc3Nvcik7XG4gIGNvbnN0IGNvbG9yU2NhbGVyID0gZ2V0QnJlYWtQb2ludENvbG9yU2NhbGVyKGZkLCBmZWF0dXJlcywgYWNjZXNzb3IpO1xuICBjb25zdCBidWNrZXRzID0ge307XG4gIGJyZWFrUG9pbnRzLnNsaWNlKDEpLmZvckVhY2goKHZhbHVlLCBpKSA9PiB7XG4gICAgY29uc3QgcmFuZ2UgPSBicmVha1BvaW50c1tpXSArIFwiIC0gXCIgKyBicmVha1BvaW50c1tpICsgMV07XG4gICAgY29uc3QgbWlkID0gMC41ICogKHBhcnNlRmxvYXQoYnJlYWtQb2ludHNbaV0pICsgcGFyc2VGbG9hdChicmVha1BvaW50c1tpICsgMV0pKTsgLy8gZml4IHBvbHlnb24gZG9lc24ndCBzaG93XG5cbiAgICBjb25zdCBtZXRyaWNMYWJlbCA9IGZkLm1ldHJpYyA/IGZkLm1ldHJpYy5sYWJlbCB8fCBmZC5tZXRyaWMgOiBudWxsO1xuICAgIGJ1Y2tldHNbcmFuZ2VdID0ge1xuICAgICAgY29sb3I6IGNvbG9yU2NhbGVyKHtcbiAgICAgICAgW21ldHJpY0xhYmVsIHx8IGZkLm1ldHJpY106IG1pZFxuICAgICAgfSksXG4gICAgICBlbmFibGVkOiB0cnVlXG4gICAgfTtcbiAgfSk7XG4gIHJldHVybiBidWNrZXRzO1xufSJdLCJtYXBwaW5ncyI6IkFBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/@superset-ui/legacy-preset-chart-deckgl/esm/utils.js\n");

/***/ }),

/***/ "./node_modules/@superset-ui/legacy-preset-chart-deckgl/esm/utils/getPointsFromPolygon.js":
/*!************************************************************************************************!*\
  !*** ./node_modules/@superset-ui/legacy-preset-chart-deckgl/esm/utils/getPointsFromPolygon.js ***!
  \************************************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"default\", function() { return getPointsFromPolygon; });\n/** Format originally used by the Polygon plugin */\n\n/**\n * Format that is geojson standard\n * https://geojson.org/geojson-spec.html\n */\nfunction getPointsFromPolygon(feature) {\n  return 'geometry' in feature.polygon ? feature.polygon.geometry.coordinates[0] : feature.polygon;\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHN1cGVyc2V0LXVpL2xlZ2FjeS1wcmVzZXQtY2hhcnQtZGVja2dsL2VzbS91dGlscy9nZXRQb2ludHNGcm9tUG9seWdvbi5qcy5qcyIsInNvdXJjZXMiOlsid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9Ac3VwZXJzZXQtdWkvbGVnYWN5LXByZXNldC1jaGFydC1kZWNrZ2wvZXNtL3V0aWxzL2dldFBvaW50c0Zyb21Qb2x5Z29uLmpzP2ZhM2UiXSwic291cmNlc0NvbnRlbnQiOlsiLyoqIEZvcm1hdCBvcmlnaW5hbGx5IHVzZWQgYnkgdGhlIFBvbHlnb24gcGx1Z2luICovXG5cbi8qKlxuICogRm9ybWF0IHRoYXQgaXMgZ2VvanNvbiBzdGFuZGFyZFxuICogaHR0cHM6Ly9nZW9qc29uLm9yZy9nZW9qc29uLXNwZWMuaHRtbFxuICovXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBnZXRQb2ludHNGcm9tUG9seWdvbihmZWF0dXJlKSB7XG4gIHJldHVybiAnZ2VvbWV0cnknIGluIGZlYXR1cmUucG9seWdvbiA/IGZlYXR1cmUucG9seWdvbi5nZW9tZXRyeS5jb29yZGluYXRlc1swXSA6IGZlYXR1cmUucG9seWdvbjtcbn0iXSwibWFwcGluZ3MiOiJBQUFBO0FBQUE7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/@superset-ui/legacy-preset-chart-deckgl/esm/utils/getPointsFromPolygon.js\n");

/***/ })

}]);