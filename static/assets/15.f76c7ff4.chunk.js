(window["webpackJsonp"] = window["webpackJsonp"] || []).push([[15],{

/***/ "./node_modules/@deck.gl/aggregation-layers/dist/esm/cpu-grid-layer/cpu-grid-layer.js":
/*!********************************************************************************************!*\
  !*** ./node_modules/@deck.gl/aggregation-layers/dist/esm/cpu-grid-layer/cpu-grid-layer.js ***!
  \********************************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"default\", function() { return CPUGridLayer; });\n/* harmony import */ var _babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/esm/classCallCheck */ \"./node_modules/@babel/runtime/helpers/esm/classCallCheck.js\");\n/* harmony import */ var _babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @babel/runtime/helpers/esm/createClass */ \"./node_modules/@babel/runtime/helpers/esm/createClass.js\");\n/* harmony import */ var _babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @babel/runtime/helpers/esm/possibleConstructorReturn */ \"./node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn.js\");\n/* harmony import */ var _babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @babel/runtime/helpers/esm/getPrototypeOf */ \"./node_modules/@babel/runtime/helpers/esm/getPrototypeOf.js\");\n/* harmony import */ var _babel_runtime_helpers_esm_inherits__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @babel/runtime/helpers/esm/inherits */ \"./node_modules/@babel/runtime/helpers/esm/inherits.js\");\n/* harmony import */ var _luma_gl_core__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @luma.gl/core */ \"./node_modules/@luma.gl/core/dist/esm/materials/phong-material.js\");\n/* harmony import */ var _deck_gl_core__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @deck.gl/core */ \"./node_modules/@deck.gl/core/dist/esm/lib/composite-layer.js\");\n/* harmony import */ var _deck_gl_layers__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @deck.gl/layers */ \"./node_modules/@deck.gl/layers/dist/esm/column-layer/grid-cell-layer.js\");\n/* harmony import */ var _utils_bin_sorter__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../utils/bin-sorter */ \"./node_modules/@deck.gl/aggregation-layers/dist/esm/utils/bin-sorter.js\");\n/* harmony import */ var _utils_color_utils__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../utils/color-utils */ \"./node_modules/@deck.gl/aggregation-layers/dist/esm/utils/color-utils.js\");\n/* harmony import */ var _utils_scale_utils__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ../utils/scale-utils */ \"./node_modules/@deck.gl/aggregation-layers/dist/esm/utils/scale-utils.js\");\n/* harmony import */ var _grid_aggregator__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./grid-aggregator */ \"./node_modules/@deck.gl/aggregation-layers/dist/esm/cpu-grid-layer/grid-aggregator.js\");\n/* harmony import */ var _utils_aggregation_operation_utils__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ../utils/aggregation-operation-utils */ \"./node_modules/@deck.gl/aggregation-layers/dist/esm/utils/aggregation-operation-utils.js\");\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nfunction nop() {}\n\nvar defaultMaterial = new _luma_gl_core__WEBPACK_IMPORTED_MODULE_5__[\"default\"]();\nvar defaultProps = {\n  colorDomain: null,\n  colorRange: _utils_color_utils__WEBPACK_IMPORTED_MODULE_9__[\"defaultColorRange\"],\n  getColorValue: {\n    type: 'accessor',\n    value: null\n  },\n  getColorWeight: {\n    type: 'accessor',\n    value: function value(x) {\n      return 1;\n    }\n  },\n  colorAggregation: 'SUM',\n  lowerPercentile: {\n    type: 'number',\n    min: 0,\n    max: 100,\n    value: 0\n  },\n  upperPercentile: {\n    type: 'number',\n    min: 0,\n    max: 100,\n    value: 100\n  },\n  onSetColorDomain: nop,\n  elevationDomain: null,\n  elevationRange: [0, 1000],\n  getElevationValue: {\n    type: 'accessor',\n    value: null\n  },\n  getElevationWeight: {\n    type: 'accessor',\n    value: function value(x) {\n      return 1;\n    }\n  },\n  elevationAggregation: 'SUM',\n  elevationLowerPercentile: {\n    type: 'number',\n    min: 0,\n    max: 100,\n    value: 0\n  },\n  elevationUpperPercentile: {\n    type: 'number',\n    min: 0,\n    max: 100,\n    value: 100\n  },\n  elevationScale: 1,\n  onSetElevationDomain: nop,\n  cellSize: {\n    type: 'number',\n    min: 0,\n    max: 1000,\n    value: 1000\n  },\n  coverage: {\n    type: 'number',\n    min: 0,\n    max: 1,\n    value: 1\n  },\n  getPosition: {\n    type: 'accessor',\n    value: function value(x) {\n      return x.position;\n    }\n  },\n  extruded: false,\n  fp64: false,\n  material: defaultMaterial\n};\nvar COLOR_PROPS = ['getColorValue', 'colorAggregation', 'getColorWeight'];\nvar ELEVATION_PROPS = ['getElevationValue', 'elevationAggregation', 'getElevationWeight'];\n\nvar CPUGridLayer = function (_CompositeLayer) {\n  Object(_babel_runtime_helpers_esm_inherits__WEBPACK_IMPORTED_MODULE_4__[\"default\"])(CPUGridLayer, _CompositeLayer);\n\n  function CPUGridLayer() {\n    Object(_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(this, CPUGridLayer);\n\n    return Object(_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_2__[\"default\"])(this, Object(_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_3__[\"default\"])(CPUGridLayer).apply(this, arguments));\n  }\n\n  Object(_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_1__[\"default\"])(CPUGridLayer, [{\n    key: \"initializeState\",\n    value: function initializeState() {\n      this.state = {\n        layerData: [],\n        sortedColorBins: null,\n        sortedElevationBins: null,\n        colorValueDomain: null,\n        elevationValueDomain: null,\n        colorScaleFunc: nop,\n        elevationScaleFunc: nop,\n        dimensionUpdaters: this.getDimensionUpdaters()\n      };\n    }\n  }, {\n    key: \"updateState\",\n    value: function updateState(_ref) {\n      var _this = this;\n\n      var oldProps = _ref.oldProps,\n          props = _ref.props,\n          changeFlags = _ref.changeFlags;\n      this.updateGetValueFuncs(oldProps, props);\n      var reprojectNeeded = this.needsReProjectPoints(oldProps, props, changeFlags);\n\n      if (changeFlags.dataChanged || reprojectNeeded) {\n        this.getLayerData();\n      } else {\n        var dimensionChanges = this.getDimensionChanges(oldProps, props) || [];\n        dimensionChanges.forEach(function (f) {\n          return typeof f === 'function' && f.apply(_this);\n        });\n      }\n    }\n  }, {\n    key: \"colorElevationPropsChanged\",\n    value: function colorElevationPropsChanged(oldProps, props) {\n      var colorChanged = false;\n      var elevationChanged = false;\n\n      for (var _i = 0; _i < COLOR_PROPS.length; _i++) {\n        var p = COLOR_PROPS[_i];\n\n        if (oldProps[p] !== props[p]) {\n          colorChanged = true;\n        }\n      }\n\n      for (var _i2 = 0; _i2 < ELEVATION_PROPS.length; _i2++) {\n        var _p = ELEVATION_PROPS[_i2];\n\n        if (oldProps[_p] !== props[_p]) {\n          elevationChanged = true;\n        }\n      }\n\n      return {\n        colorChanged: colorChanged,\n        elevationChanged: elevationChanged\n      };\n    }\n  }, {\n    key: \"updateGetValueFuncs\",\n    value: function updateGetValueFuncs(oldProps, props) {\n      var getColorValue = props.getColorValue,\n          getElevationValue = props.getElevationValue;\n      var _this$props = this.props,\n          colorAggregation = _this$props.colorAggregation,\n          getColorWeight = _this$props.getColorWeight,\n          elevationAggregation = _this$props.elevationAggregation,\n          getElevationWeight = _this$props.getElevationWeight;\n\n      var _this$colorElevationP = this.colorElevationPropsChanged(oldProps, props),\n          colorChanged = _this$colorElevationP.colorChanged,\n          elevationChanged = _this$colorElevationP.elevationChanged;\n\n      if (colorChanged && getColorValue === null) {\n        getColorValue = Object(_utils_aggregation_operation_utils__WEBPACK_IMPORTED_MODULE_12__[\"getValueFunc\"])(colorAggregation, getColorWeight);\n      }\n\n      if (elevationChanged && getElevationValue === null) {\n        getElevationValue = Object(_utils_aggregation_operation_utils__WEBPACK_IMPORTED_MODULE_12__[\"getValueFunc\"])(elevationAggregation, getElevationWeight);\n      }\n\n      if (getColorValue) {\n        this.setState({\n          getColorValue: getColorValue\n        });\n      }\n\n      if (getElevationValue) {\n        this.setState({\n          getElevationValue: getElevationValue\n        });\n      }\n    }\n  }, {\n    key: \"needsReProjectPoints\",\n    value: function needsReProjectPoints(oldProps, props, changeFlags) {\n      return oldProps.cellSize !== props.cellSize || changeFlags.updateTriggersChanged && (changeFlags.updateTriggersChanged.all || changeFlags.updateTriggersChanged.getPosition);\n    }\n  }, {\n    key: \"getDimensionUpdaters\",\n    value: function getDimensionUpdaters() {\n      return {\n        getFillColor: [{\n          id: 'value',\n          triggers: ['getColorValue', 'getColorWeight', 'colorAggregation'],\n          updater: this.getSortedColorBins\n        }, {\n          id: 'domain',\n          triggers: ['lowerPercentile', 'upperPercentile'],\n          updater: this.getColorValueDomain\n        }, {\n          id: 'scaleFunc',\n          triggers: ['colorDomain', 'colorRange'],\n          updater: this.getColorScale\n        }],\n        getElevation: [{\n          id: 'value',\n          triggers: ['getElevationValue', 'getElevationWeight', 'elevationAggregation'],\n          updater: this.getSortedElevationBins\n        }, {\n          id: 'domain',\n          triggers: ['elevationLowerPercentile', 'elevationUpperPercentile'],\n          updater: this.getElevationValueDomain\n        }, {\n          id: 'scaleFunc',\n          triggers: ['elevationDomain', 'elevationRange'],\n          updater: this.getElevationScale\n        }]\n      };\n    }\n  }, {\n    key: \"getDimensionChanges\",\n    value: function getDimensionChanges(oldProps, props) {\n      var dimensionUpdaters = this.state.dimensionUpdaters;\n      var updaters = [];\n\n      for (var dimensionKey in dimensionUpdaters) {\n        var needUpdate = dimensionUpdaters[dimensionKey].find(function (item) {\n          return item.triggers.some(function (t) {\n            return oldProps[t] !== props[t];\n          });\n        });\n\n        if (needUpdate) {\n          updaters.push(needUpdate.updater);\n        }\n      }\n\n      return updaters.length ? updaters : null;\n    }\n  }, {\n    key: \"getPickingInfo\",\n    value: function getPickingInfo(_ref2) {\n      var info = _ref2.info;\n      var _this$state = this.state,\n          sortedColorBins = _this$state.sortedColorBins,\n          sortedElevationBins = _this$state.sortedElevationBins;\n      var isPicked = info.picked && info.index > -1;\n      var object = null;\n\n      if (isPicked) {\n        var cell = this.state.layerData[info.index];\n        var colorValue = sortedColorBins.binMap[cell.index] && sortedColorBins.binMap[cell.index].value;\n        var elevationValue = sortedElevationBins.binMap[cell.index] && sortedElevationBins.binMap[cell.index].value;\n        object = Object.assign({\n          colorValue: colorValue,\n          elevationValue: elevationValue\n        }, cell);\n      }\n\n      return Object.assign(info, {\n        picked: Boolean(object),\n        object: object\n      });\n    }\n  }, {\n    key: \"getUpdateTriggers\",\n    value: function getUpdateTriggers() {\n      var _this2 = this;\n\n      var dimensionUpdaters = this.state.dimensionUpdaters;\n      var updateTriggers = {};\n\n      var _loop = function _loop(dimensionKey) {\n        updateTriggers[dimensionKey] = {};\n        var _iteratorNormalCompletion = true;\n        var _didIteratorError = false;\n        var _iteratorError = undefined;\n\n        try {\n          for (var _iterator = dimensionUpdaters[dimensionKey][Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n            var step = _step.value;\n            step.triggers.forEach(function (prop) {\n              updateTriggers[dimensionKey][prop] = _this2.props[prop];\n            });\n          }\n        } catch (err) {\n          _didIteratorError = true;\n          _iteratorError = err;\n        } finally {\n          try {\n            if (!_iteratorNormalCompletion && _iterator.return != null) {\n              _iterator.return();\n            }\n          } finally {\n            if (_didIteratorError) {\n              throw _iteratorError;\n            }\n          }\n        }\n      };\n\n      for (var dimensionKey in dimensionUpdaters) {\n        _loop(dimensionKey);\n      }\n\n      return updateTriggers;\n    }\n  }, {\n    key: \"getLayerData\",\n    value: function getLayerData() {\n      var _this$props2 = this.props,\n          data = _this$props2.data,\n          cellSize = _this$props2.cellSize,\n          getPosition = _this$props2.getPosition;\n\n      var _pointToDensityGridDa = Object(_grid_aggregator__WEBPACK_IMPORTED_MODULE_11__[\"pointToDensityGridDataCPU\"])(data, cellSize, getPosition),\n          layerData = _pointToDensityGridDa.layerData;\n\n      this.setState({\n        layerData: layerData\n      });\n      this.getSortedBins();\n    }\n  }, {\n    key: \"getValueDomain\",\n    value: function getValueDomain() {\n      this.getColorValueDomain();\n      this.getElevationValueDomain();\n    }\n  }, {\n    key: \"getSortedBins\",\n    value: function getSortedBins() {\n      this.getSortedColorBins();\n      this.getSortedElevationBins();\n    }\n  }, {\n    key: \"getSortedColorBins\",\n    value: function getSortedColorBins() {\n      var getColorValue = this.state.getColorValue;\n      var sortedColorBins = new _utils_bin_sorter__WEBPACK_IMPORTED_MODULE_8__[\"default\"](this.state.layerData || [], getColorValue);\n      this.setState({\n        sortedColorBins: sortedColorBins\n      });\n      this.getColorValueDomain();\n    }\n  }, {\n    key: \"getSortedElevationBins\",\n    value: function getSortedElevationBins() {\n      var getElevationValue = this.state.getElevationValue;\n      var sortedElevationBins = new _utils_bin_sorter__WEBPACK_IMPORTED_MODULE_8__[\"default\"](this.state.layerData || [], getElevationValue);\n      this.setState({\n        sortedElevationBins: sortedElevationBins\n      });\n      this.getElevationValueDomain();\n    }\n  }, {\n    key: \"getColorValueDomain\",\n    value: function getColorValueDomain() {\n      var _this$props3 = this.props,\n          lowerPercentile = _this$props3.lowerPercentile,\n          upperPercentile = _this$props3.upperPercentile,\n          onSetColorDomain = _this$props3.onSetColorDomain;\n      this.state.colorValueDomain = this.state.sortedColorBins.getValueRange([lowerPercentile, upperPercentile]);\n\n      if (typeof onSetColorDomain === 'function') {\n        onSetColorDomain(this.state.colorValueDomain);\n      }\n\n      this.getColorScale();\n    }\n  }, {\n    key: \"getElevationValueDomain\",\n    value: function getElevationValueDomain() {\n      var _this$props4 = this.props,\n          elevationLowerPercentile = _this$props4.elevationLowerPercentile,\n          elevationUpperPercentile = _this$props4.elevationUpperPercentile,\n          onSetElevationDomain = _this$props4.onSetElevationDomain;\n      this.state.elevationValueDomain = this.state.sortedElevationBins.getValueRange([elevationLowerPercentile, elevationUpperPercentile]);\n\n      if (typeof onSetElevationDomain === 'function') {\n        onSetElevationDomain(this.state.elevationValueDomain);\n      }\n\n      this.getElevationScale();\n    }\n  }, {\n    key: \"getColorScale\",\n    value: function getColorScale() {\n      var colorRange = this.props.colorRange;\n      var colorDomain = this.props.colorDomain || this.state.colorValueDomain;\n      this.state.colorScaleFunc = Object(_utils_scale_utils__WEBPACK_IMPORTED_MODULE_10__[\"getQuantizeScale\"])(colorDomain, colorRange);\n    }\n  }, {\n    key: \"getElevationScale\",\n    value: function getElevationScale() {\n      var elevationRange = this.props.elevationRange;\n      var elevationDomain = this.props.elevationDomain || this.state.elevationValueDomain;\n      this.state.elevationScaleFunc = Object(_utils_scale_utils__WEBPACK_IMPORTED_MODULE_10__[\"getLinearScale\"])(elevationDomain, elevationRange);\n    }\n  }, {\n    key: \"_onGetSublayerColor\",\n    value: function _onGetSublayerColor(cell) {\n      var _this$state2 = this.state,\n          sortedColorBins = _this$state2.sortedColorBins,\n          colorScaleFunc = _this$state2.colorScaleFunc,\n          colorValueDomain = _this$state2.colorValueDomain;\n      var cv = sortedColorBins.binMap[cell.index] && sortedColorBins.binMap[cell.index].value;\n      var colorDomain = this.props.colorDomain || colorValueDomain;\n      var isColorValueInDomain = cv >= colorDomain[0] && cv <= colorDomain[colorDomain.length - 1];\n      var color = isColorValueInDomain ? colorScaleFunc(cv) : [0, 0, 0, 0];\n      color[3] = Number.isFinite(color[3]) ? color[3] : 255;\n      return color;\n    }\n  }, {\n    key: \"_onGetSublayerElevation\",\n    value: function _onGetSublayerElevation(cell) {\n      var _this$state3 = this.state,\n          sortedElevationBins = _this$state3.sortedElevationBins,\n          elevationScaleFunc = _this$state3.elevationScaleFunc,\n          elevationValueDomain = _this$state3.elevationValueDomain;\n      var ev = sortedElevationBins.binMap[cell.index] && sortedElevationBins.binMap[cell.index].value;\n      var elevationDomain = this.props.elevationDomain || elevationValueDomain;\n      var isElevationValueInDomain = ev >= elevationDomain[0] && ev <= elevationDomain[elevationDomain.length - 1];\n      return isElevationValueInDomain ? elevationScaleFunc(ev) : -1;\n    }\n  }, {\n    key: \"renderLayers\",\n    value: function renderLayers() {\n      var _this$props5 = this.props,\n          elevationScale = _this$props5.elevationScale,\n          fp64 = _this$props5.fp64,\n          extruded = _this$props5.extruded,\n          cellSize = _this$props5.cellSize,\n          coverage = _this$props5.coverage,\n          material = _this$props5.material,\n          transitions = _this$props5.transitions;\n      var SubLayerClass = this.getSubLayerClass('grid-cell', _deck_gl_layers__WEBPACK_IMPORTED_MODULE_7__[\"default\"]);\n      return new SubLayerClass({\n        fp64: fp64,\n        cellSize: cellSize,\n        coverage: coverage,\n        material: material,\n        elevationScale: elevationScale,\n        extruded: extruded,\n        getFillColor: this._onGetSublayerColor.bind(this),\n        getElevation: this._onGetSublayerElevation.bind(this),\n        transitions: transitions && {\n          getFillColor: transitions.getColorValue || transitions.getColorWeight,\n          getElevation: transitions.getElevationValue || transitions.getElevationWeight\n        }\n      }, this.getSubLayerProps({\n        id: 'grid-cell',\n        updateTriggers: this.getUpdateTriggers()\n      }), {\n        data: this.state.layerData\n      });\n    }\n  }]);\n\n  return CPUGridLayer;\n}(_deck_gl_core__WEBPACK_IMPORTED_MODULE_6__[\"default\"]);\n\n\nCPUGridLayer.layerName = 'CPUGridLayer';\nCPUGridLayer.defaultProps = defaultProps;\n//# sourceMappingURL=cpu-grid-layer.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQGRlY2suZ2wvYWdncmVnYXRpb24tbGF5ZXJzL2Rpc3QvZXNtL2NwdS1ncmlkLWxheWVyL2NwdS1ncmlkLWxheWVyLmpzLmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL0BkZWNrLmdsL2FnZ3JlZ2F0aW9uLWxheWVycy9kaXN0L2VzbS9jcHUtZ3JpZC1sYXllci9jcHUtZ3JpZC1sYXllci5qcz82ZGE1Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBfY2xhc3NDYWxsQ2hlY2sgZnJvbSBcIkBiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL2NsYXNzQ2FsbENoZWNrXCI7XG5pbXBvcnQgX2NyZWF0ZUNsYXNzIGZyb20gXCJAYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9jcmVhdGVDbGFzc1wiO1xuaW1wb3J0IF9wb3NzaWJsZUNvbnN0cnVjdG9yUmV0dXJuIGZyb20gXCJAYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9wb3NzaWJsZUNvbnN0cnVjdG9yUmV0dXJuXCI7XG5pbXBvcnQgX2dldFByb3RvdHlwZU9mIGZyb20gXCJAYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9nZXRQcm90b3R5cGVPZlwiO1xuaW1wb3J0IF9pbmhlcml0cyBmcm9tIFwiQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vaW5oZXJpdHNcIjtcbmltcG9ydCB7IFBob25nTWF0ZXJpYWwgfSBmcm9tICdAbHVtYS5nbC9jb3JlJztcbmltcG9ydCB7IENvbXBvc2l0ZUxheWVyIH0gZnJvbSAnQGRlY2suZ2wvY29yZSc7XG5pbXBvcnQgeyBHcmlkQ2VsbExheWVyIH0gZnJvbSAnQGRlY2suZ2wvbGF5ZXJzJztcbmltcG9ydCBCaW5Tb3J0ZXIgZnJvbSAnLi4vdXRpbHMvYmluLXNvcnRlcic7XG5pbXBvcnQgeyBkZWZhdWx0Q29sb3JSYW5nZSB9IGZyb20gJy4uL3V0aWxzL2NvbG9yLXV0aWxzJztcbmltcG9ydCB7IGdldFF1YW50aXplU2NhbGUsIGdldExpbmVhclNjYWxlIH0gZnJvbSAnLi4vdXRpbHMvc2NhbGUtdXRpbHMnO1xuaW1wb3J0IHsgcG9pbnRUb0RlbnNpdHlHcmlkRGF0YUNQVSB9IGZyb20gJy4vZ3JpZC1hZ2dyZWdhdG9yJztcbmltcG9ydCB7IGdldFZhbHVlRnVuYyB9IGZyb20gJy4uL3V0aWxzL2FnZ3JlZ2F0aW9uLW9wZXJhdGlvbi11dGlscyc7XG5cbmZ1bmN0aW9uIG5vcCgpIHt9XG5cbnZhciBkZWZhdWx0TWF0ZXJpYWwgPSBuZXcgUGhvbmdNYXRlcmlhbCgpO1xudmFyIGRlZmF1bHRQcm9wcyA9IHtcbiAgY29sb3JEb21haW46IG51bGwsXG4gIGNvbG9yUmFuZ2U6IGRlZmF1bHRDb2xvclJhbmdlLFxuICBnZXRDb2xvclZhbHVlOiB7XG4gICAgdHlwZTogJ2FjY2Vzc29yJyxcbiAgICB2YWx1ZTogbnVsbFxuICB9LFxuICBnZXRDb2xvcldlaWdodDoge1xuICAgIHR5cGU6ICdhY2Nlc3NvcicsXG4gICAgdmFsdWU6IGZ1bmN0aW9uIHZhbHVlKHgpIHtcbiAgICAgIHJldHVybiAxO1xuICAgIH1cbiAgfSxcbiAgY29sb3JBZ2dyZWdhdGlvbjogJ1NVTScsXG4gIGxvd2VyUGVyY2VudGlsZToge1xuICAgIHR5cGU6ICdudW1iZXInLFxuICAgIG1pbjogMCxcbiAgICBtYXg6IDEwMCxcbiAgICB2YWx1ZTogMFxuICB9LFxuICB1cHBlclBlcmNlbnRpbGU6IHtcbiAgICB0eXBlOiAnbnVtYmVyJyxcbiAgICBtaW46IDAsXG4gICAgbWF4OiAxMDAsXG4gICAgdmFsdWU6IDEwMFxuICB9LFxuICBvblNldENvbG9yRG9tYWluOiBub3AsXG4gIGVsZXZhdGlvbkRvbWFpbjogbnVsbCxcbiAgZWxldmF0aW9uUmFuZ2U6IFswLCAxMDAwXSxcbiAgZ2V0RWxldmF0aW9uVmFsdWU6IHtcbiAgICB0eXBlOiAnYWNjZXNzb3InLFxuICAgIHZhbHVlOiBudWxsXG4gIH0sXG4gIGdldEVsZXZhdGlvbldlaWdodDoge1xuICAgIHR5cGU6ICdhY2Nlc3NvcicsXG4gICAgdmFsdWU6IGZ1bmN0aW9uIHZhbHVlKHgpIHtcbiAgICAgIHJldHVybiAxO1xuICAgIH1cbiAgfSxcbiAgZWxldmF0aW9uQWdncmVnYXRpb246ICdTVU0nLFxuICBlbGV2YXRpb25Mb3dlclBlcmNlbnRpbGU6IHtcbiAgICB0eXBlOiAnbnVtYmVyJyxcbiAgICBtaW46IDAsXG4gICAgbWF4OiAxMDAsXG4gICAgdmFsdWU6IDBcbiAgfSxcbiAgZWxldmF0aW9uVXBwZXJQZXJjZW50aWxlOiB7XG4gICAgdHlwZTogJ251bWJlcicsXG4gICAgbWluOiAwLFxuICAgIG1heDogMTAwLFxuICAgIHZhbHVlOiAxMDBcbiAgfSxcbiAgZWxldmF0aW9uU2NhbGU6IDEsXG4gIG9uU2V0RWxldmF0aW9uRG9tYWluOiBub3AsXG4gIGNlbGxTaXplOiB7XG4gICAgdHlwZTogJ251bWJlcicsXG4gICAgbWluOiAwLFxuICAgIG1heDogMTAwMCxcbiAgICB2YWx1ZTogMTAwMFxuICB9LFxuICBjb3ZlcmFnZToge1xuICAgIHR5cGU6ICdudW1iZXInLFxuICAgIG1pbjogMCxcbiAgICBtYXg6IDEsXG4gICAgdmFsdWU6IDFcbiAgfSxcbiAgZ2V0UG9zaXRpb246IHtcbiAgICB0eXBlOiAnYWNjZXNzb3InLFxuICAgIHZhbHVlOiBmdW5jdGlvbiB2YWx1ZSh4KSB7XG4gICAgICByZXR1cm4geC5wb3NpdGlvbjtcbiAgICB9XG4gIH0sXG4gIGV4dHJ1ZGVkOiBmYWxzZSxcbiAgZnA2NDogZmFsc2UsXG4gIG1hdGVyaWFsOiBkZWZhdWx0TWF0ZXJpYWxcbn07XG52YXIgQ09MT1JfUFJPUFMgPSBbJ2dldENvbG9yVmFsdWUnLCAnY29sb3JBZ2dyZWdhdGlvbicsICdnZXRDb2xvcldlaWdodCddO1xudmFyIEVMRVZBVElPTl9QUk9QUyA9IFsnZ2V0RWxldmF0aW9uVmFsdWUnLCAnZWxldmF0aW9uQWdncmVnYXRpb24nLCAnZ2V0RWxldmF0aW9uV2VpZ2h0J107XG5cbnZhciBDUFVHcmlkTGF5ZXIgPSBmdW5jdGlvbiAoX0NvbXBvc2l0ZUxheWVyKSB7XG4gIF9pbmhlcml0cyhDUFVHcmlkTGF5ZXIsIF9Db21wb3NpdGVMYXllcik7XG5cbiAgZnVuY3Rpb24gQ1BVR3JpZExheWVyKCkge1xuICAgIF9jbGFzc0NhbGxDaGVjayh0aGlzLCBDUFVHcmlkTGF5ZXIpO1xuXG4gICAgcmV0dXJuIF9wb3NzaWJsZUNvbnN0cnVjdG9yUmV0dXJuKHRoaXMsIF9nZXRQcm90b3R5cGVPZihDUFVHcmlkTGF5ZXIpLmFwcGx5KHRoaXMsIGFyZ3VtZW50cykpO1xuICB9XG5cbiAgX2NyZWF0ZUNsYXNzKENQVUdyaWRMYXllciwgW3tcbiAgICBrZXk6IFwiaW5pdGlhbGl6ZVN0YXRlXCIsXG4gICAgdmFsdWU6IGZ1bmN0aW9uIGluaXRpYWxpemVTdGF0ZSgpIHtcbiAgICAgIHRoaXMuc3RhdGUgPSB7XG4gICAgICAgIGxheWVyRGF0YTogW10sXG4gICAgICAgIHNvcnRlZENvbG9yQmluczogbnVsbCxcbiAgICAgICAgc29ydGVkRWxldmF0aW9uQmluczogbnVsbCxcbiAgICAgICAgY29sb3JWYWx1ZURvbWFpbjogbnVsbCxcbiAgICAgICAgZWxldmF0aW9uVmFsdWVEb21haW46IG51bGwsXG4gICAgICAgIGNvbG9yU2NhbGVGdW5jOiBub3AsXG4gICAgICAgIGVsZXZhdGlvblNjYWxlRnVuYzogbm9wLFxuICAgICAgICBkaW1lbnNpb25VcGRhdGVyczogdGhpcy5nZXREaW1lbnNpb25VcGRhdGVycygpXG4gICAgICB9O1xuICAgIH1cbiAgfSwge1xuICAgIGtleTogXCJ1cGRhdGVTdGF0ZVwiLFxuICAgIHZhbHVlOiBmdW5jdGlvbiB1cGRhdGVTdGF0ZShfcmVmKSB7XG4gICAgICB2YXIgX3RoaXMgPSB0aGlzO1xuXG4gICAgICB2YXIgb2xkUHJvcHMgPSBfcmVmLm9sZFByb3BzLFxuICAgICAgICAgIHByb3BzID0gX3JlZi5wcm9wcyxcbiAgICAgICAgICBjaGFuZ2VGbGFncyA9IF9yZWYuY2hhbmdlRmxhZ3M7XG4gICAgICB0aGlzLnVwZGF0ZUdldFZhbHVlRnVuY3Mob2xkUHJvcHMsIHByb3BzKTtcbiAgICAgIHZhciByZXByb2plY3ROZWVkZWQgPSB0aGlzLm5lZWRzUmVQcm9qZWN0UG9pbnRzKG9sZFByb3BzLCBwcm9wcywgY2hhbmdlRmxhZ3MpO1xuXG4gICAgICBpZiAoY2hhbmdlRmxhZ3MuZGF0YUNoYW5nZWQgfHwgcmVwcm9qZWN0TmVlZGVkKSB7XG4gICAgICAgIHRoaXMuZ2V0TGF5ZXJEYXRhKCk7XG4gICAgICB9IGVsc2Uge1xuICAgICAgICB2YXIgZGltZW5zaW9uQ2hhbmdlcyA9IHRoaXMuZ2V0RGltZW5zaW9uQ2hhbmdlcyhvbGRQcm9wcywgcHJvcHMpIHx8IFtdO1xuICAgICAgICBkaW1lbnNpb25DaGFuZ2VzLmZvckVhY2goZnVuY3Rpb24gKGYpIHtcbiAgICAgICAgICByZXR1cm4gdHlwZW9mIGYgPT09ICdmdW5jdGlvbicgJiYgZi5hcHBseShfdGhpcyk7XG4gICAgICAgIH0pO1xuICAgICAgfVxuICAgIH1cbiAgfSwge1xuICAgIGtleTogXCJjb2xvckVsZXZhdGlvblByb3BzQ2hhbmdlZFwiLFxuICAgIHZhbHVlOiBmdW5jdGlvbiBjb2xvckVsZXZhdGlvblByb3BzQ2hhbmdlZChvbGRQcm9wcywgcHJvcHMpIHtcbiAgICAgIHZhciBjb2xvckNoYW5nZWQgPSBmYWxzZTtcbiAgICAgIHZhciBlbGV2YXRpb25DaGFuZ2VkID0gZmFsc2U7XG5cbiAgICAgIGZvciAodmFyIF9pID0gMDsgX2kgPCBDT0xPUl9QUk9QUy5sZW5ndGg7IF9pKyspIHtcbiAgICAgICAgdmFyIHAgPSBDT0xPUl9QUk9QU1tfaV07XG5cbiAgICAgICAgaWYgKG9sZFByb3BzW3BdICE9PSBwcm9wc1twXSkge1xuICAgICAgICAgIGNvbG9yQ2hhbmdlZCA9IHRydWU7XG4gICAgICAgIH1cbiAgICAgIH1cblxuICAgICAgZm9yICh2YXIgX2kyID0gMDsgX2kyIDwgRUxFVkFUSU9OX1BST1BTLmxlbmd0aDsgX2kyKyspIHtcbiAgICAgICAgdmFyIF9wID0gRUxFVkFUSU9OX1BST1BTW19pMl07XG5cbiAgICAgICAgaWYgKG9sZFByb3BzW19wXSAhPT0gcHJvcHNbX3BdKSB7XG4gICAgICAgICAgZWxldmF0aW9uQ2hhbmdlZCA9IHRydWU7XG4gICAgICAgIH1cbiAgICAgIH1cblxuICAgICAgcmV0dXJuIHtcbiAgICAgICAgY29sb3JDaGFuZ2VkOiBjb2xvckNoYW5nZWQsXG4gICAgICAgIGVsZXZhdGlvbkNoYW5nZWQ6IGVsZXZhdGlvbkNoYW5nZWRcbiAgICAgIH07XG4gICAgfVxuICB9LCB7XG4gICAga2V5OiBcInVwZGF0ZUdldFZhbHVlRnVuY3NcIixcbiAgICB2YWx1ZTogZnVuY3Rpb24gdXBkYXRlR2V0VmFsdWVGdW5jcyhvbGRQcm9wcywgcHJvcHMpIHtcbiAgICAgIHZhciBnZXRDb2xvclZhbHVlID0gcHJvcHMuZ2V0Q29sb3JWYWx1ZSxcbiAgICAgICAgICBnZXRFbGV2YXRpb25WYWx1ZSA9IHByb3BzLmdldEVsZXZhdGlvblZhbHVlO1xuICAgICAgdmFyIF90aGlzJHByb3BzID0gdGhpcy5wcm9wcyxcbiAgICAgICAgICBjb2xvckFnZ3JlZ2F0aW9uID0gX3RoaXMkcHJvcHMuY29sb3JBZ2dyZWdhdGlvbixcbiAgICAgICAgICBnZXRDb2xvcldlaWdodCA9IF90aGlzJHByb3BzLmdldENvbG9yV2VpZ2h0LFxuICAgICAgICAgIGVsZXZhdGlvbkFnZ3JlZ2F0aW9uID0gX3RoaXMkcHJvcHMuZWxldmF0aW9uQWdncmVnYXRpb24sXG4gICAgICAgICAgZ2V0RWxldmF0aW9uV2VpZ2h0ID0gX3RoaXMkcHJvcHMuZ2V0RWxldmF0aW9uV2VpZ2h0O1xuXG4gICAgICB2YXIgX3RoaXMkY29sb3JFbGV2YXRpb25QID0gdGhpcy5jb2xvckVsZXZhdGlvblByb3BzQ2hhbmdlZChvbGRQcm9wcywgcHJvcHMpLFxuICAgICAgICAgIGNvbG9yQ2hhbmdlZCA9IF90aGlzJGNvbG9yRWxldmF0aW9uUC5jb2xvckNoYW5nZWQsXG4gICAgICAgICAgZWxldmF0aW9uQ2hhbmdlZCA9IF90aGlzJGNvbG9yRWxldmF0aW9uUC5lbGV2YXRpb25DaGFuZ2VkO1xuXG4gICAgICBpZiAoY29sb3JDaGFuZ2VkICYmIGdldENvbG9yVmFsdWUgPT09IG51bGwpIHtcbiAgICAgICAgZ2V0Q29sb3JWYWx1ZSA9IGdldFZhbHVlRnVuYyhjb2xvckFnZ3JlZ2F0aW9uLCBnZXRDb2xvcldlaWdodCk7XG4gICAgICB9XG5cbiAgICAgIGlmIChlbGV2YXRpb25DaGFuZ2VkICYmIGdldEVsZXZhdGlvblZhbHVlID09PSBudWxsKSB7XG4gICAgICAgIGdldEVsZXZhdGlvblZhbHVlID0gZ2V0VmFsdWVGdW5jKGVsZXZhdGlvbkFnZ3JlZ2F0aW9uLCBnZXRFbGV2YXRpb25XZWlnaHQpO1xuICAgICAgfVxuXG4gICAgICBpZiAoZ2V0Q29sb3JWYWx1ZSkge1xuICAgICAgICB0aGlzLnNldFN0YXRlKHtcbiAgICAgICAgICBnZXRDb2xvclZhbHVlOiBnZXRDb2xvclZhbHVlXG4gICAgICAgIH0pO1xuICAgICAgfVxuXG4gICAgICBpZiAoZ2V0RWxldmF0aW9uVmFsdWUpIHtcbiAgICAgICAgdGhpcy5zZXRTdGF0ZSh7XG4gICAgICAgICAgZ2V0RWxldmF0aW9uVmFsdWU6IGdldEVsZXZhdGlvblZhbHVlXG4gICAgICAgIH0pO1xuICAgICAgfVxuICAgIH1cbiAgfSwge1xuICAgIGtleTogXCJuZWVkc1JlUHJvamVjdFBvaW50c1wiLFxuICAgIHZhbHVlOiBmdW5jdGlvbiBuZWVkc1JlUHJvamVjdFBvaW50cyhvbGRQcm9wcywgcHJvcHMsIGNoYW5nZUZsYWdzKSB7XG4gICAgICByZXR1cm4gb2xkUHJvcHMuY2VsbFNpemUgIT09IHByb3BzLmNlbGxTaXplIHx8IGNoYW5nZUZsYWdzLnVwZGF0ZVRyaWdnZXJzQ2hhbmdlZCAmJiAoY2hhbmdlRmxhZ3MudXBkYXRlVHJpZ2dlcnNDaGFuZ2VkLmFsbCB8fCBjaGFuZ2VGbGFncy51cGRhdGVUcmlnZ2Vyc0NoYW5nZWQuZ2V0UG9zaXRpb24pO1xuICAgIH1cbiAgfSwge1xuICAgIGtleTogXCJnZXREaW1lbnNpb25VcGRhdGVyc1wiLFxuICAgIHZhbHVlOiBmdW5jdGlvbiBnZXREaW1lbnNpb25VcGRhdGVycygpIHtcbiAgICAgIHJldHVybiB7XG4gICAgICAgIGdldEZpbGxDb2xvcjogW3tcbiAgICAgICAgICBpZDogJ3ZhbHVlJyxcbiAgICAgICAgICB0cmlnZ2VyczogWydnZXRDb2xvclZhbHVlJywgJ2dldENvbG9yV2VpZ2h0JywgJ2NvbG9yQWdncmVnYXRpb24nXSxcbiAgICAgICAgICB1cGRhdGVyOiB0aGlzLmdldFNvcnRlZENvbG9yQmluc1xuICAgICAgICB9LCB7XG4gICAgICAgICAgaWQ6ICdkb21haW4nLFxuICAgICAgICAgIHRyaWdnZXJzOiBbJ2xvd2VyUGVyY2VudGlsZScsICd1cHBlclBlcmNlbnRpbGUnXSxcbiAgICAgICAgICB1cGRhdGVyOiB0aGlzLmdldENvbG9yVmFsdWVEb21haW5cbiAgICAgICAgfSwge1xuICAgICAgICAgIGlkOiAnc2NhbGVGdW5jJyxcbiAgICAgICAgICB0cmlnZ2VyczogWydjb2xvckRvbWFpbicsICdjb2xvclJhbmdlJ10sXG4gICAgICAgICAgdXBkYXRlcjogdGhpcy5nZXRDb2xvclNjYWxlXG4gICAgICAgIH1dLFxuICAgICAgICBnZXRFbGV2YXRpb246IFt7XG4gICAgICAgICAgaWQ6ICd2YWx1ZScsXG4gICAgICAgICAgdHJpZ2dlcnM6IFsnZ2V0RWxldmF0aW9uVmFsdWUnLCAnZ2V0RWxldmF0aW9uV2VpZ2h0JywgJ2VsZXZhdGlvbkFnZ3JlZ2F0aW9uJ10sXG4gICAgICAgICAgdXBkYXRlcjogdGhpcy5nZXRTb3J0ZWRFbGV2YXRpb25CaW5zXG4gICAgICAgIH0sIHtcbiAgICAgICAgICBpZDogJ2RvbWFpbicsXG4gICAgICAgICAgdHJpZ2dlcnM6IFsnZWxldmF0aW9uTG93ZXJQZXJjZW50aWxlJywgJ2VsZXZhdGlvblVwcGVyUGVyY2VudGlsZSddLFxuICAgICAgICAgIHVwZGF0ZXI6IHRoaXMuZ2V0RWxldmF0aW9uVmFsdWVEb21haW5cbiAgICAgICAgfSwge1xuICAgICAgICAgIGlkOiAnc2NhbGVGdW5jJyxcbiAgICAgICAgICB0cmlnZ2VyczogWydlbGV2YXRpb25Eb21haW4nLCAnZWxldmF0aW9uUmFuZ2UnXSxcbiAgICAgICAgICB1cGRhdGVyOiB0aGlzLmdldEVsZXZhdGlvblNjYWxlXG4gICAgICAgIH1dXG4gICAgICB9O1xuICAgIH1cbiAgfSwge1xuICAgIGtleTogXCJnZXREaW1lbnNpb25DaGFuZ2VzXCIsXG4gICAgdmFsdWU6IGZ1bmN0aW9uIGdldERpbWVuc2lvbkNoYW5nZXMob2xkUHJvcHMsIHByb3BzKSB7XG4gICAgICB2YXIgZGltZW5zaW9uVXBkYXRlcnMgPSB0aGlzLnN0YXRlLmRpbWVuc2lvblVwZGF0ZXJzO1xuICAgICAgdmFyIHVwZGF0ZXJzID0gW107XG5cbiAgICAgIGZvciAodmFyIGRpbWVuc2lvbktleSBpbiBkaW1lbnNpb25VcGRhdGVycykge1xuICAgICAgICB2YXIgbmVlZFVwZGF0ZSA9IGRpbWVuc2lvblVwZGF0ZXJzW2RpbWVuc2lvbktleV0uZmluZChmdW5jdGlvbiAoaXRlbSkge1xuICAgICAgICAgIHJldHVybiBpdGVtLnRyaWdnZXJzLnNvbWUoZnVuY3Rpb24gKHQpIHtcbiAgICAgICAgICAgIHJldHVybiBvbGRQcm9wc1t0XSAhPT0gcHJvcHNbdF07XG4gICAgICAgICAgfSk7XG4gICAgICAgIH0pO1xuXG4gICAgICAgIGlmIChuZWVkVXBkYXRlKSB7XG4gICAgICAgICAgdXBkYXRlcnMucHVzaChuZWVkVXBkYXRlLnVwZGF0ZXIpO1xuICAgICAgICB9XG4gICAgICB9XG5cbiAgICAgIHJldHVybiB1cGRhdGVycy5sZW5ndGggPyB1cGRhdGVycyA6IG51bGw7XG4gICAgfVxuICB9LCB7XG4gICAga2V5OiBcImdldFBpY2tpbmdJbmZvXCIsXG4gICAgdmFsdWU6IGZ1bmN0aW9uIGdldFBpY2tpbmdJbmZvKF9yZWYyKSB7XG4gICAgICB2YXIgaW5mbyA9IF9yZWYyLmluZm87XG4gICAgICB2YXIgX3RoaXMkc3RhdGUgPSB0aGlzLnN0YXRlLFxuICAgICAgICAgIHNvcnRlZENvbG9yQmlucyA9IF90aGlzJHN0YXRlLnNvcnRlZENvbG9yQmlucyxcbiAgICAgICAgICBzb3J0ZWRFbGV2YXRpb25CaW5zID0gX3RoaXMkc3RhdGUuc29ydGVkRWxldmF0aW9uQmlucztcbiAgICAgIHZhciBpc1BpY2tlZCA9IGluZm8ucGlja2VkICYmIGluZm8uaW5kZXggPiAtMTtcbiAgICAgIHZhciBvYmplY3QgPSBudWxsO1xuXG4gICAgICBpZiAoaXNQaWNrZWQpIHtcbiAgICAgICAgdmFyIGNlbGwgPSB0aGlzLnN0YXRlLmxheWVyRGF0YVtpbmZvLmluZGV4XTtcbiAgICAgICAgdmFyIGNvbG9yVmFsdWUgPSBzb3J0ZWRDb2xvckJpbnMuYmluTWFwW2NlbGwuaW5kZXhdICYmIHNvcnRlZENvbG9yQmlucy5iaW5NYXBbY2VsbC5pbmRleF0udmFsdWU7XG4gICAgICAgIHZhciBlbGV2YXRpb25WYWx1ZSA9IHNvcnRlZEVsZXZhdGlvbkJpbnMuYmluTWFwW2NlbGwuaW5kZXhdICYmIHNvcnRlZEVsZXZhdGlvbkJpbnMuYmluTWFwW2NlbGwuaW5kZXhdLnZhbHVlO1xuICAgICAgICBvYmplY3QgPSBPYmplY3QuYXNzaWduKHtcbiAgICAgICAgICBjb2xvclZhbHVlOiBjb2xvclZhbHVlLFxuICAgICAgICAgIGVsZXZhdGlvblZhbHVlOiBlbGV2YXRpb25WYWx1ZVxuICAgICAgICB9LCBjZWxsKTtcbiAgICAgIH1cblxuICAgICAgcmV0dXJuIE9iamVjdC5hc3NpZ24oaW5mbywge1xuICAgICAgICBwaWNrZWQ6IEJvb2xlYW4ob2JqZWN0KSxcbiAgICAgICAgb2JqZWN0OiBvYmplY3RcbiAgICAgIH0pO1xuICAgIH1cbiAgfSwge1xuICAgIGtleTogXCJnZXRVcGRhdGVUcmlnZ2Vyc1wiLFxuICAgIHZhbHVlOiBmdW5jdGlvbiBnZXRVcGRhdGVUcmlnZ2VycygpIHtcbiAgICAgIHZhciBfdGhpczIgPSB0aGlzO1xuXG4gICAgICB2YXIgZGltZW5zaW9uVXBkYXRlcnMgPSB0aGlzLnN0YXRlLmRpbWVuc2lvblVwZGF0ZXJzO1xuICAgICAgdmFyIHVwZGF0ZVRyaWdnZXJzID0ge307XG5cbiAgICAgIHZhciBfbG9vcCA9IGZ1bmN0aW9uIF9sb29wKGRpbWVuc2lvbktleSkge1xuICAgICAgICB1cGRhdGVUcmlnZ2Vyc1tkaW1lbnNpb25LZXldID0ge307XG4gICAgICAgIHZhciBfaXRlcmF0b3JOb3JtYWxDb21wbGV0aW9uID0gdHJ1ZTtcbiAgICAgICAgdmFyIF9kaWRJdGVyYXRvckVycm9yID0gZmFsc2U7XG4gICAgICAgIHZhciBfaXRlcmF0b3JFcnJvciA9IHVuZGVmaW5lZDtcblxuICAgICAgICB0cnkge1xuICAgICAgICAgIGZvciAodmFyIF9pdGVyYXRvciA9IGRpbWVuc2lvblVwZGF0ZXJzW2RpbWVuc2lvbktleV1bU3ltYm9sLml0ZXJhdG9yXSgpLCBfc3RlcDsgIShfaXRlcmF0b3JOb3JtYWxDb21wbGV0aW9uID0gKF9zdGVwID0gX2l0ZXJhdG9yLm5leHQoKSkuZG9uZSk7IF9pdGVyYXRvck5vcm1hbENvbXBsZXRpb24gPSB0cnVlKSB7XG4gICAgICAgICAgICB2YXIgc3RlcCA9IF9zdGVwLnZhbHVlO1xuICAgICAgICAgICAgc3RlcC50cmlnZ2Vycy5mb3JFYWNoKGZ1bmN0aW9uIChwcm9wKSB7XG4gICAgICAgICAgICAgIHVwZGF0ZVRyaWdnZXJzW2RpbWVuc2lvbktleV1bcHJvcF0gPSBfdGhpczIucHJvcHNbcHJvcF07XG4gICAgICAgICAgICB9KTtcbiAgICAgICAgICB9XG4gICAgICAgIH0gY2F0Y2ggKGVycikge1xuICAgICAgICAgIF9kaWRJdGVyYXRvckVycm9yID0gdHJ1ZTtcbiAgICAgICAgICBfaXRlcmF0b3JFcnJvciA9IGVycjtcbiAgICAgICAgfSBmaW5hbGx5IHtcbiAgICAgICAgICB0cnkge1xuICAgICAgICAgICAgaWYgKCFfaXRlcmF0b3JOb3JtYWxDb21wbGV0aW9uICYmIF9pdGVyYXRvci5yZXR1cm4gIT0gbnVsbCkge1xuICAgICAgICAgICAgICBfaXRlcmF0b3IucmV0dXJuKCk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgfSBmaW5hbGx5IHtcbiAgICAgICAgICAgIGlmIChfZGlkSXRlcmF0b3JFcnJvcikge1xuICAgICAgICAgICAgICB0aHJvdyBfaXRlcmF0b3JFcnJvcjtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgIH07XG5cbiAgICAgIGZvciAodmFyIGRpbWVuc2lvbktleSBpbiBkaW1lbnNpb25VcGRhdGVycykge1xuICAgICAgICBfbG9vcChkaW1lbnNpb25LZXkpO1xuICAgICAgfVxuXG4gICAgICByZXR1cm4gdXBkYXRlVHJpZ2dlcnM7XG4gICAgfVxuICB9LCB7XG4gICAga2V5OiBcImdldExheWVyRGF0YVwiLFxuICAgIHZhbHVlOiBmdW5jdGlvbiBnZXRMYXllckRhdGEoKSB7XG4gICAgICB2YXIgX3RoaXMkcHJvcHMyID0gdGhpcy5wcm9wcyxcbiAgICAgICAgICBkYXRhID0gX3RoaXMkcHJvcHMyLmRhdGEsXG4gICAgICAgICAgY2VsbFNpemUgPSBfdGhpcyRwcm9wczIuY2VsbFNpemUsXG4gICAgICAgICAgZ2V0UG9zaXRpb24gPSBfdGhpcyRwcm9wczIuZ2V0UG9zaXRpb247XG5cbiAgICAgIHZhciBfcG9pbnRUb0RlbnNpdHlHcmlkRGEgPSBwb2ludFRvRGVuc2l0eUdyaWREYXRhQ1BVKGRhdGEsIGNlbGxTaXplLCBnZXRQb3NpdGlvbiksXG4gICAgICAgICAgbGF5ZXJEYXRhID0gX3BvaW50VG9EZW5zaXR5R3JpZERhLmxheWVyRGF0YTtcblxuICAgICAgdGhpcy5zZXRTdGF0ZSh7XG4gICAgICAgIGxheWVyRGF0YTogbGF5ZXJEYXRhXG4gICAgICB9KTtcbiAgICAgIHRoaXMuZ2V0U29ydGVkQmlucygpO1xuICAgIH1cbiAgfSwge1xuICAgIGtleTogXCJnZXRWYWx1ZURvbWFpblwiLFxuICAgIHZhbHVlOiBmdW5jdGlvbiBnZXRWYWx1ZURvbWFpbigpIHtcbiAgICAgIHRoaXMuZ2V0Q29sb3JWYWx1ZURvbWFpbigpO1xuICAgICAgdGhpcy5nZXRFbGV2YXRpb25WYWx1ZURvbWFpbigpO1xuICAgIH1cbiAgfSwge1xuICAgIGtleTogXCJnZXRTb3J0ZWRCaW5zXCIsXG4gICAgdmFsdWU6IGZ1bmN0aW9uIGdldFNvcnRlZEJpbnMoKSB7XG4gICAgICB0aGlzLmdldFNvcnRlZENvbG9yQmlucygpO1xuICAgICAgdGhpcy5nZXRTb3J0ZWRFbGV2YXRpb25CaW5zKCk7XG4gICAgfVxuICB9LCB7XG4gICAga2V5OiBcImdldFNvcnRlZENvbG9yQmluc1wiLFxuICAgIHZhbHVlOiBmdW5jdGlvbiBnZXRTb3J0ZWRDb2xvckJpbnMoKSB7XG4gICAgICB2YXIgZ2V0Q29sb3JWYWx1ZSA9IHRoaXMuc3RhdGUuZ2V0Q29sb3JWYWx1ZTtcbiAgICAgIHZhciBzb3J0ZWRDb2xvckJpbnMgPSBuZXcgQmluU29ydGVyKHRoaXMuc3RhdGUubGF5ZXJEYXRhIHx8IFtdLCBnZXRDb2xvclZhbHVlKTtcbiAgICAgIHRoaXMuc2V0U3RhdGUoe1xuICAgICAgICBzb3J0ZWRDb2xvckJpbnM6IHNvcnRlZENvbG9yQmluc1xuICAgICAgfSk7XG4gICAgICB0aGlzLmdldENvbG9yVmFsdWVEb21haW4oKTtcbiAgICB9XG4gIH0sIHtcbiAgICBrZXk6IFwiZ2V0U29ydGVkRWxldmF0aW9uQmluc1wiLFxuICAgIHZhbHVlOiBmdW5jdGlvbiBnZXRTb3J0ZWRFbGV2YXRpb25CaW5zKCkge1xuICAgICAgdmFyIGdldEVsZXZhdGlvblZhbHVlID0gdGhpcy5zdGF0ZS5nZXRFbGV2YXRpb25WYWx1ZTtcbiAgICAgIHZhciBzb3J0ZWRFbGV2YXRpb25CaW5zID0gbmV3IEJpblNvcnRlcih0aGlzLnN0YXRlLmxheWVyRGF0YSB8fCBbXSwgZ2V0RWxldmF0aW9uVmFsdWUpO1xuICAgICAgdGhpcy5zZXRTdGF0ZSh7XG4gICAgICAgIHNvcnRlZEVsZXZhdGlvbkJpbnM6IHNvcnRlZEVsZXZhdGlvbkJpbnNcbiAgICAgIH0pO1xuICAgICAgdGhpcy5nZXRFbGV2YXRpb25WYWx1ZURvbWFpbigpO1xuICAgIH1cbiAgfSwge1xuICAgIGtleTogXCJnZXRDb2xvclZhbHVlRG9tYWluXCIsXG4gICAgdmFsdWU6IGZ1bmN0aW9uIGdldENvbG9yVmFsdWVEb21haW4oKSB7XG4gICAgICB2YXIgX3RoaXMkcHJvcHMzID0gdGhpcy5wcm9wcyxcbiAgICAgICAgICBsb3dlclBlcmNlbnRpbGUgPSBfdGhpcyRwcm9wczMubG93ZXJQZXJjZW50aWxlLFxuICAgICAgICAgIHVwcGVyUGVyY2VudGlsZSA9IF90aGlzJHByb3BzMy51cHBlclBlcmNlbnRpbGUsXG4gICAgICAgICAgb25TZXRDb2xvckRvbWFpbiA9IF90aGlzJHByb3BzMy5vblNldENvbG9yRG9tYWluO1xuICAgICAgdGhpcy5zdGF0ZS5jb2xvclZhbHVlRG9tYWluID0gdGhpcy5zdGF0ZS5zb3J0ZWRDb2xvckJpbnMuZ2V0VmFsdWVSYW5nZShbbG93ZXJQZXJjZW50aWxlLCB1cHBlclBlcmNlbnRpbGVdKTtcblxuICAgICAgaWYgKHR5cGVvZiBvblNldENvbG9yRG9tYWluID09PSAnZnVuY3Rpb24nKSB7XG4gICAgICAgIG9uU2V0Q29sb3JEb21haW4odGhpcy5zdGF0ZS5jb2xvclZhbHVlRG9tYWluKTtcbiAgICAgIH1cblxuICAgICAgdGhpcy5nZXRDb2xvclNjYWxlKCk7XG4gICAgfVxuICB9LCB7XG4gICAga2V5OiBcImdldEVsZXZhdGlvblZhbHVlRG9tYWluXCIsXG4gICAgdmFsdWU6IGZ1bmN0aW9uIGdldEVsZXZhdGlvblZhbHVlRG9tYWluKCkge1xuICAgICAgdmFyIF90aGlzJHByb3BzNCA9IHRoaXMucHJvcHMsXG4gICAgICAgICAgZWxldmF0aW9uTG93ZXJQZXJjZW50aWxlID0gX3RoaXMkcHJvcHM0LmVsZXZhdGlvbkxvd2VyUGVyY2VudGlsZSxcbiAgICAgICAgICBlbGV2YXRpb25VcHBlclBlcmNlbnRpbGUgPSBfdGhpcyRwcm9wczQuZWxldmF0aW9uVXBwZXJQZXJjZW50aWxlLFxuICAgICAgICAgIG9uU2V0RWxldmF0aW9uRG9tYWluID0gX3RoaXMkcHJvcHM0Lm9uU2V0RWxldmF0aW9uRG9tYWluO1xuICAgICAgdGhpcy5zdGF0ZS5lbGV2YXRpb25WYWx1ZURvbWFpbiA9IHRoaXMuc3RhdGUuc29ydGVkRWxldmF0aW9uQmlucy5nZXRWYWx1ZVJhbmdlKFtlbGV2YXRpb25Mb3dlclBlcmNlbnRpbGUsIGVsZXZhdGlvblVwcGVyUGVyY2VudGlsZV0pO1xuXG4gICAgICBpZiAodHlwZW9mIG9uU2V0RWxldmF0aW9uRG9tYWluID09PSAnZnVuY3Rpb24nKSB7XG4gICAgICAgIG9uU2V0RWxldmF0aW9uRG9tYWluKHRoaXMuc3RhdGUuZWxldmF0aW9uVmFsdWVEb21haW4pO1xuICAgICAgfVxuXG4gICAgICB0aGlzLmdldEVsZXZhdGlvblNjYWxlKCk7XG4gICAgfVxuICB9LCB7XG4gICAga2V5OiBcImdldENvbG9yU2NhbGVcIixcbiAgICB2YWx1ZTogZnVuY3Rpb24gZ2V0Q29sb3JTY2FsZSgpIHtcbiAgICAgIHZhciBjb2xvclJhbmdlID0gdGhpcy5wcm9wcy5jb2xvclJhbmdlO1xuICAgICAgdmFyIGNvbG9yRG9tYWluID0gdGhpcy5wcm9wcy5jb2xvckRvbWFpbiB8fCB0aGlzLnN0YXRlLmNvbG9yVmFsdWVEb21haW47XG4gICAgICB0aGlzLnN0YXRlLmNvbG9yU2NhbGVGdW5jID0gZ2V0UXVhbnRpemVTY2FsZShjb2xvckRvbWFpbiwgY29sb3JSYW5nZSk7XG4gICAgfVxuICB9LCB7XG4gICAga2V5OiBcImdldEVsZXZhdGlvblNjYWxlXCIsXG4gICAgdmFsdWU6IGZ1bmN0aW9uIGdldEVsZXZhdGlvblNjYWxlKCkge1xuICAgICAgdmFyIGVsZXZhdGlvblJhbmdlID0gdGhpcy5wcm9wcy5lbGV2YXRpb25SYW5nZTtcbiAgICAgIHZhciBlbGV2YXRpb25Eb21haW4gPSB0aGlzLnByb3BzLmVsZXZhdGlvbkRvbWFpbiB8fCB0aGlzLnN0YXRlLmVsZXZhdGlvblZhbHVlRG9tYWluO1xuICAgICAgdGhpcy5zdGF0ZS5lbGV2YXRpb25TY2FsZUZ1bmMgPSBnZXRMaW5lYXJTY2FsZShlbGV2YXRpb25Eb21haW4sIGVsZXZhdGlvblJhbmdlKTtcbiAgICB9XG4gIH0sIHtcbiAgICBrZXk6IFwiX29uR2V0U3VibGF5ZXJDb2xvclwiLFxuICAgIHZhbHVlOiBmdW5jdGlvbiBfb25HZXRTdWJsYXllckNvbG9yKGNlbGwpIHtcbiAgICAgIHZhciBfdGhpcyRzdGF0ZTIgPSB0aGlzLnN0YXRlLFxuICAgICAgICAgIHNvcnRlZENvbG9yQmlucyA9IF90aGlzJHN0YXRlMi5zb3J0ZWRDb2xvckJpbnMsXG4gICAgICAgICAgY29sb3JTY2FsZUZ1bmMgPSBfdGhpcyRzdGF0ZTIuY29sb3JTY2FsZUZ1bmMsXG4gICAgICAgICAgY29sb3JWYWx1ZURvbWFpbiA9IF90aGlzJHN0YXRlMi5jb2xvclZhbHVlRG9tYWluO1xuICAgICAgdmFyIGN2ID0gc29ydGVkQ29sb3JCaW5zLmJpbk1hcFtjZWxsLmluZGV4XSAmJiBzb3J0ZWRDb2xvckJpbnMuYmluTWFwW2NlbGwuaW5kZXhdLnZhbHVlO1xuICAgICAgdmFyIGNvbG9yRG9tYWluID0gdGhpcy5wcm9wcy5jb2xvckRvbWFpbiB8fCBjb2xvclZhbHVlRG9tYWluO1xuICAgICAgdmFyIGlzQ29sb3JWYWx1ZUluRG9tYWluID0gY3YgPj0gY29sb3JEb21haW5bMF0gJiYgY3YgPD0gY29sb3JEb21haW5bY29sb3JEb21haW4ubGVuZ3RoIC0gMV07XG4gICAgICB2YXIgY29sb3IgPSBpc0NvbG9yVmFsdWVJbkRvbWFpbiA/IGNvbG9yU2NhbGVGdW5jKGN2KSA6IFswLCAwLCAwLCAwXTtcbiAgICAgIGNvbG9yWzNdID0gTnVtYmVyLmlzRmluaXRlKGNvbG9yWzNdKSA/IGNvbG9yWzNdIDogMjU1O1xuICAgICAgcmV0dXJuIGNvbG9yO1xuICAgIH1cbiAgfSwge1xuICAgIGtleTogXCJfb25HZXRTdWJsYXllckVsZXZhdGlvblwiLFxuICAgIHZhbHVlOiBmdW5jdGlvbiBfb25HZXRTdWJsYXllckVsZXZhdGlvbihjZWxsKSB7XG4gICAgICB2YXIgX3RoaXMkc3RhdGUzID0gdGhpcy5zdGF0ZSxcbiAgICAgICAgICBzb3J0ZWRFbGV2YXRpb25CaW5zID0gX3RoaXMkc3RhdGUzLnNvcnRlZEVsZXZhdGlvbkJpbnMsXG4gICAgICAgICAgZWxldmF0aW9uU2NhbGVGdW5jID0gX3RoaXMkc3RhdGUzLmVsZXZhdGlvblNjYWxlRnVuYyxcbiAgICAgICAgICBlbGV2YXRpb25WYWx1ZURvbWFpbiA9IF90aGlzJHN0YXRlMy5lbGV2YXRpb25WYWx1ZURvbWFpbjtcbiAgICAgIHZhciBldiA9IHNvcnRlZEVsZXZhdGlvbkJpbnMuYmluTWFwW2NlbGwuaW5kZXhdICYmIHNvcnRlZEVsZXZhdGlvbkJpbnMuYmluTWFwW2NlbGwuaW5kZXhdLnZhbHVlO1xuICAgICAgdmFyIGVsZXZhdGlvbkRvbWFpbiA9IHRoaXMucHJvcHMuZWxldmF0aW9uRG9tYWluIHx8IGVsZXZhdGlvblZhbHVlRG9tYWluO1xuICAgICAgdmFyIGlzRWxldmF0aW9uVmFsdWVJbkRvbWFpbiA9IGV2ID49IGVsZXZhdGlvbkRvbWFpblswXSAmJiBldiA8PSBlbGV2YXRpb25Eb21haW5bZWxldmF0aW9uRG9tYWluLmxlbmd0aCAtIDFdO1xuICAgICAgcmV0dXJuIGlzRWxldmF0aW9uVmFsdWVJbkRvbWFpbiA/IGVsZXZhdGlvblNjYWxlRnVuYyhldikgOiAtMTtcbiAgICB9XG4gIH0sIHtcbiAgICBrZXk6IFwicmVuZGVyTGF5ZXJzXCIsXG4gICAgdmFsdWU6IGZ1bmN0aW9uIHJlbmRlckxheWVycygpIHtcbiAgICAgIHZhciBfdGhpcyRwcm9wczUgPSB0aGlzLnByb3BzLFxuICAgICAgICAgIGVsZXZhdGlvblNjYWxlID0gX3RoaXMkcHJvcHM1LmVsZXZhdGlvblNjYWxlLFxuICAgICAgICAgIGZwNjQgPSBfdGhpcyRwcm9wczUuZnA2NCxcbiAgICAgICAgICBleHRydWRlZCA9IF90aGlzJHByb3BzNS5leHRydWRlZCxcbiAgICAgICAgICBjZWxsU2l6ZSA9IF90aGlzJHByb3BzNS5jZWxsU2l6ZSxcbiAgICAgICAgICBjb3ZlcmFnZSA9IF90aGlzJHByb3BzNS5jb3ZlcmFnZSxcbiAgICAgICAgICBtYXRlcmlhbCA9IF90aGlzJHByb3BzNS5tYXRlcmlhbCxcbiAgICAgICAgICB0cmFuc2l0aW9ucyA9IF90aGlzJHByb3BzNS50cmFuc2l0aW9ucztcbiAgICAgIHZhciBTdWJMYXllckNsYXNzID0gdGhpcy5nZXRTdWJMYXllckNsYXNzKCdncmlkLWNlbGwnLCBHcmlkQ2VsbExheWVyKTtcbiAgICAgIHJldHVybiBuZXcgU3ViTGF5ZXJDbGFzcyh7XG4gICAgICAgIGZwNjQ6IGZwNjQsXG4gICAgICAgIGNlbGxTaXplOiBjZWxsU2l6ZSxcbiAgICAgICAgY292ZXJhZ2U6IGNvdmVyYWdlLFxuICAgICAgICBtYXRlcmlhbDogbWF0ZXJpYWwsXG4gICAgICAgIGVsZXZhdGlvblNjYWxlOiBlbGV2YXRpb25TY2FsZSxcbiAgICAgICAgZXh0cnVkZWQ6IGV4dHJ1ZGVkLFxuICAgICAgICBnZXRGaWxsQ29sb3I6IHRoaXMuX29uR2V0U3VibGF5ZXJDb2xvci5iaW5kKHRoaXMpLFxuICAgICAgICBnZXRFbGV2YXRpb246IHRoaXMuX29uR2V0U3VibGF5ZXJFbGV2YXRpb24uYmluZCh0aGlzKSxcbiAgICAgICAgdHJhbnNpdGlvbnM6IHRyYW5zaXRpb25zICYmIHtcbiAgICAgICAgICBnZXRGaWxsQ29sb3I6IHRyYW5zaXRpb25zLmdldENvbG9yVmFsdWUgfHwgdHJhbnNpdGlvbnMuZ2V0Q29sb3JXZWlnaHQsXG4gICAgICAgICAgZ2V0RWxldmF0aW9uOiB0cmFuc2l0aW9ucy5nZXRFbGV2YXRpb25WYWx1ZSB8fCB0cmFuc2l0aW9ucy5nZXRFbGV2YXRpb25XZWlnaHRcbiAgICAgICAgfVxuICAgICAgfSwgdGhpcy5nZXRTdWJMYXllclByb3BzKHtcbiAgICAgICAgaWQ6ICdncmlkLWNlbGwnLFxuICAgICAgICB1cGRhdGVUcmlnZ2VyczogdGhpcy5nZXRVcGRhdGVUcmlnZ2VycygpXG4gICAgICB9KSwge1xuICAgICAgICBkYXRhOiB0aGlzLnN0YXRlLmxheWVyRGF0YVxuICAgICAgfSk7XG4gICAgfVxuICB9XSk7XG5cbiAgcmV0dXJuIENQVUdyaWRMYXllcjtcbn0oQ29tcG9zaXRlTGF5ZXIpO1xuXG5leHBvcnQgeyBDUFVHcmlkTGF5ZXIgYXMgZGVmYXVsdCB9O1xuQ1BVR3JpZExheWVyLmxheWVyTmFtZSA9ICdDUFVHcmlkTGF5ZXInO1xuQ1BVR3JpZExheWVyLmRlZmF1bHRQcm9wcyA9IGRlZmF1bHRQcm9wcztcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWNwdS1ncmlkLWxheWVyLmpzLm1hcCJdLCJtYXBwaW5ncyI6IkFBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/@deck.gl/aggregation-layers/dist/esm/cpu-grid-layer/cpu-grid-layer.js\n");

/***/ }),

/***/ "./node_modules/@deck.gl/aggregation-layers/dist/esm/cpu-grid-layer/grid-aggregator.js":
/*!*********************************************************************************************!*\
  !*** ./node_modules/@deck.gl/aggregation-layers/dist/esm/cpu-grid-layer/grid-aggregator.js ***!
  \*********************************************************************************************/
/*! exports provided: pointToDensityGridDataCPU */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"pointToDensityGridDataCPU\", function() { return pointToDensityGridDataCPU; });\n/* harmony import */ var _babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/esm/slicedToArray */ \"./node_modules/@babel/runtime/helpers/esm/slicedToArray.js\");\n/* harmony import */ var _deck_gl_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @deck.gl/core */ \"./node_modules/@deck.gl/core/dist/esm/utils/iterable-utils.js\");\n\n\nvar R_EARTH = 6378000;\nfunction pointToDensityGridDataCPU(points, cellSize, getPosition) {\n  var _pointsToGridHashing2 = _pointsToGridHashing(points, cellSize, getPosition),\n      gridHash = _pointsToGridHashing2.gridHash,\n      gridOffset = _pointsToGridHashing2.gridOffset;\n\n  var layerData = _getGridLayerDataFromGridHash(gridHash, gridOffset);\n\n  return {\n    gridHash: gridHash,\n    gridOffset: gridOffset,\n    layerData: layerData\n  };\n}\n\nfunction _pointsToGridHashing() {\n  var points = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n  var cellSize = arguments.length > 1 ? arguments[1] : undefined;\n  var getPosition = arguments.length > 2 ? arguments[2] : undefined;\n  var latMin = Infinity;\n  var latMax = -Infinity;\n  var pLat;\n\n  var _createIterable = Object(_deck_gl_core__WEBPACK_IMPORTED_MODULE_1__[\"createIterable\"])(points),\n      iterable = _createIterable.iterable,\n      objectInfo = _createIterable.objectInfo;\n\n  var _iteratorNormalCompletion = true;\n  var _didIteratorError = false;\n  var _iteratorError = undefined;\n\n  try {\n    for (var _iterator = iterable[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n      var pt = _step.value;\n      objectInfo.index++;\n      pLat = getPosition(pt, objectInfo)[1];\n\n      if (Number.isFinite(pLat)) {\n        latMin = pLat < latMin ? pLat : latMin;\n        latMax = pLat > latMax ? pLat : latMax;\n      }\n    }\n  } catch (err) {\n    _didIteratorError = true;\n    _iteratorError = err;\n  } finally {\n    try {\n      if (!_iteratorNormalCompletion && _iterator.return != null) {\n        _iterator.return();\n      }\n    } finally {\n      if (_didIteratorError) {\n        throw _iteratorError;\n      }\n    }\n  }\n\n  var centerLat = (latMin + latMax) / 2;\n\n  var gridOffset = _calculateGridLatLonOffset(cellSize, centerLat);\n\n  if (gridOffset.xOffset <= 0 || gridOffset.yOffset <= 0) {\n    return {\n      gridHash: {},\n      gridOffset: gridOffset\n    };\n  }\n\n  var gridHash = {};\n  objectInfo.index = -1;\n  var _iteratorNormalCompletion2 = true;\n  var _didIteratorError2 = false;\n  var _iteratorError2 = undefined;\n\n  try {\n    for (var _iterator2 = iterable[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {\n      var _pt = _step2.value;\n      objectInfo.index++;\n\n      var _getPosition = getPosition(_pt, objectInfo),\n          _getPosition2 = Object(_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(_getPosition, 2),\n          lng = _getPosition2[0],\n          lat = _getPosition2[1];\n\n      if (Number.isFinite(lat) && Number.isFinite(lng)) {\n        var latIdx = Math.floor((lat + 90) / gridOffset.yOffset);\n        var lonIdx = Math.floor((lng + 180) / gridOffset.xOffset);\n        var key = \"\".concat(latIdx, \"-\").concat(lonIdx);\n        gridHash[key] = gridHash[key] || {\n          count: 0,\n          points: []\n        };\n        gridHash[key].count += 1;\n        gridHash[key].points.push(_pt);\n      }\n    }\n  } catch (err) {\n    _didIteratorError2 = true;\n    _iteratorError2 = err;\n  } finally {\n    try {\n      if (!_iteratorNormalCompletion2 && _iterator2.return != null) {\n        _iterator2.return();\n      }\n    } finally {\n      if (_didIteratorError2) {\n        throw _iteratorError2;\n      }\n    }\n  }\n\n  return {\n    gridHash: gridHash,\n    gridOffset: gridOffset\n  };\n}\n\nfunction _getGridLayerDataFromGridHash(gridHash, gridOffset) {\n  return Object.keys(gridHash).reduce(function (accu, key, i) {\n    var idxs = key.split('-');\n    var latIdx = parseInt(idxs[0], 10);\n    var lonIdx = parseInt(idxs[1], 10);\n    accu.push(Object.assign({\n      index: i,\n      position: [-180 + gridOffset.xOffset * lonIdx, -90 + gridOffset.yOffset * latIdx]\n    }, gridHash[key]));\n    return accu;\n  }, []);\n}\n\nfunction _calculateGridLatLonOffset(cellSize, latitude) {\n  var yOffset = _calculateLatOffset(cellSize);\n\n  var xOffset = _calculateLonOffset(latitude, cellSize);\n\n  return {\n    yOffset: yOffset,\n    xOffset: xOffset\n  };\n}\n\nfunction _calculateLatOffset(dy) {\n  return dy / R_EARTH * (180 / Math.PI);\n}\n\nfunction _calculateLonOffset(lat, dx) {\n  return dx / R_EARTH * (180 / Math.PI) / Math.cos(lat * Math.PI / 180);\n}\n//# sourceMappingURL=grid-aggregator.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQGRlY2suZ2wvYWdncmVnYXRpb24tbGF5ZXJzL2Rpc3QvZXNtL2NwdS1ncmlkLWxheWVyL2dyaWQtYWdncmVnYXRvci5qcy5qcyIsInNvdXJjZXMiOlsid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9AZGVjay5nbC9hZ2dyZWdhdGlvbi1sYXllcnMvZGlzdC9lc20vY3B1LWdyaWQtbGF5ZXIvZ3JpZC1hZ2dyZWdhdG9yLmpzP2QyNTEiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IF9zbGljZWRUb0FycmF5IGZyb20gXCJAYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9zbGljZWRUb0FycmF5XCI7XG5pbXBvcnQgeyBjcmVhdGVJdGVyYWJsZSB9IGZyb20gJ0BkZWNrLmdsL2NvcmUnO1xudmFyIFJfRUFSVEggPSA2Mzc4MDAwO1xuZXhwb3J0IGZ1bmN0aW9uIHBvaW50VG9EZW5zaXR5R3JpZERhdGFDUFUocG9pbnRzLCBjZWxsU2l6ZSwgZ2V0UG9zaXRpb24pIHtcbiAgdmFyIF9wb2ludHNUb0dyaWRIYXNoaW5nMiA9IF9wb2ludHNUb0dyaWRIYXNoaW5nKHBvaW50cywgY2VsbFNpemUsIGdldFBvc2l0aW9uKSxcbiAgICAgIGdyaWRIYXNoID0gX3BvaW50c1RvR3JpZEhhc2hpbmcyLmdyaWRIYXNoLFxuICAgICAgZ3JpZE9mZnNldCA9IF9wb2ludHNUb0dyaWRIYXNoaW5nMi5ncmlkT2Zmc2V0O1xuXG4gIHZhciBsYXllckRhdGEgPSBfZ2V0R3JpZExheWVyRGF0YUZyb21HcmlkSGFzaChncmlkSGFzaCwgZ3JpZE9mZnNldCk7XG5cbiAgcmV0dXJuIHtcbiAgICBncmlkSGFzaDogZ3JpZEhhc2gsXG4gICAgZ3JpZE9mZnNldDogZ3JpZE9mZnNldCxcbiAgICBsYXllckRhdGE6IGxheWVyRGF0YVxuICB9O1xufVxuXG5mdW5jdGlvbiBfcG9pbnRzVG9HcmlkSGFzaGluZygpIHtcbiAgdmFyIHBvaW50cyA9IGFyZ3VtZW50cy5sZW5ndGggPiAwICYmIGFyZ3VtZW50c1swXSAhPT0gdW5kZWZpbmVkID8gYXJndW1lbnRzWzBdIDogW107XG4gIHZhciBjZWxsU2l6ZSA9IGFyZ3VtZW50cy5sZW5ndGggPiAxID8gYXJndW1lbnRzWzFdIDogdW5kZWZpbmVkO1xuICB2YXIgZ2V0UG9zaXRpb24gPSBhcmd1bWVudHMubGVuZ3RoID4gMiA/IGFyZ3VtZW50c1syXSA6IHVuZGVmaW5lZDtcbiAgdmFyIGxhdE1pbiA9IEluZmluaXR5O1xuICB2YXIgbGF0TWF4ID0gLUluZmluaXR5O1xuICB2YXIgcExhdDtcblxuICB2YXIgX2NyZWF0ZUl0ZXJhYmxlID0gY3JlYXRlSXRlcmFibGUocG9pbnRzKSxcbiAgICAgIGl0ZXJhYmxlID0gX2NyZWF0ZUl0ZXJhYmxlLml0ZXJhYmxlLFxuICAgICAgb2JqZWN0SW5mbyA9IF9jcmVhdGVJdGVyYWJsZS5vYmplY3RJbmZvO1xuXG4gIHZhciBfaXRlcmF0b3JOb3JtYWxDb21wbGV0aW9uID0gdHJ1ZTtcbiAgdmFyIF9kaWRJdGVyYXRvckVycm9yID0gZmFsc2U7XG4gIHZhciBfaXRlcmF0b3JFcnJvciA9IHVuZGVmaW5lZDtcblxuICB0cnkge1xuICAgIGZvciAodmFyIF9pdGVyYXRvciA9IGl0ZXJhYmxlW1N5bWJvbC5pdGVyYXRvcl0oKSwgX3N0ZXA7ICEoX2l0ZXJhdG9yTm9ybWFsQ29tcGxldGlvbiA9IChfc3RlcCA9IF9pdGVyYXRvci5uZXh0KCkpLmRvbmUpOyBfaXRlcmF0b3JOb3JtYWxDb21wbGV0aW9uID0gdHJ1ZSkge1xuICAgICAgdmFyIHB0ID0gX3N0ZXAudmFsdWU7XG4gICAgICBvYmplY3RJbmZvLmluZGV4Kys7XG4gICAgICBwTGF0ID0gZ2V0UG9zaXRpb24ocHQsIG9iamVjdEluZm8pWzFdO1xuXG4gICAgICBpZiAoTnVtYmVyLmlzRmluaXRlKHBMYXQpKSB7XG4gICAgICAgIGxhdE1pbiA9IHBMYXQgPCBsYXRNaW4gPyBwTGF0IDogbGF0TWluO1xuICAgICAgICBsYXRNYXggPSBwTGF0ID4gbGF0TWF4ID8gcExhdCA6IGxhdE1heDtcbiAgICAgIH1cbiAgICB9XG4gIH0gY2F0Y2ggKGVycikge1xuICAgIF9kaWRJdGVyYXRvckVycm9yID0gdHJ1ZTtcbiAgICBfaXRlcmF0b3JFcnJvciA9IGVycjtcbiAgfSBmaW5hbGx5IHtcbiAgICB0cnkge1xuICAgICAgaWYgKCFfaXRlcmF0b3JOb3JtYWxDb21wbGV0aW9uICYmIF9pdGVyYXRvci5yZXR1cm4gIT0gbnVsbCkge1xuICAgICAgICBfaXRlcmF0b3IucmV0dXJuKCk7XG4gICAgICB9XG4gICAgfSBmaW5hbGx5IHtcbiAgICAgIGlmIChfZGlkSXRlcmF0b3JFcnJvcikge1xuICAgICAgICB0aHJvdyBfaXRlcmF0b3JFcnJvcjtcbiAgICAgIH1cbiAgICB9XG4gIH1cblxuICB2YXIgY2VudGVyTGF0ID0gKGxhdE1pbiArIGxhdE1heCkgLyAyO1xuXG4gIHZhciBncmlkT2Zmc2V0ID0gX2NhbGN1bGF0ZUdyaWRMYXRMb25PZmZzZXQoY2VsbFNpemUsIGNlbnRlckxhdCk7XG5cbiAgaWYgKGdyaWRPZmZzZXQueE9mZnNldCA8PSAwIHx8IGdyaWRPZmZzZXQueU9mZnNldCA8PSAwKSB7XG4gICAgcmV0dXJuIHtcbiAgICAgIGdyaWRIYXNoOiB7fSxcbiAgICAgIGdyaWRPZmZzZXQ6IGdyaWRPZmZzZXRcbiAgICB9O1xuICB9XG5cbiAgdmFyIGdyaWRIYXNoID0ge307XG4gIG9iamVjdEluZm8uaW5kZXggPSAtMTtcbiAgdmFyIF9pdGVyYXRvck5vcm1hbENvbXBsZXRpb24yID0gdHJ1ZTtcbiAgdmFyIF9kaWRJdGVyYXRvckVycm9yMiA9IGZhbHNlO1xuICB2YXIgX2l0ZXJhdG9yRXJyb3IyID0gdW5kZWZpbmVkO1xuXG4gIHRyeSB7XG4gICAgZm9yICh2YXIgX2l0ZXJhdG9yMiA9IGl0ZXJhYmxlW1N5bWJvbC5pdGVyYXRvcl0oKSwgX3N0ZXAyOyAhKF9pdGVyYXRvck5vcm1hbENvbXBsZXRpb24yID0gKF9zdGVwMiA9IF9pdGVyYXRvcjIubmV4dCgpKS5kb25lKTsgX2l0ZXJhdG9yTm9ybWFsQ29tcGxldGlvbjIgPSB0cnVlKSB7XG4gICAgICB2YXIgX3B0ID0gX3N0ZXAyLnZhbHVlO1xuICAgICAgb2JqZWN0SW5mby5pbmRleCsrO1xuXG4gICAgICB2YXIgX2dldFBvc2l0aW9uID0gZ2V0UG9zaXRpb24oX3B0LCBvYmplY3RJbmZvKSxcbiAgICAgICAgICBfZ2V0UG9zaXRpb24yID0gX3NsaWNlZFRvQXJyYXkoX2dldFBvc2l0aW9uLCAyKSxcbiAgICAgICAgICBsbmcgPSBfZ2V0UG9zaXRpb24yWzBdLFxuICAgICAgICAgIGxhdCA9IF9nZXRQb3NpdGlvbjJbMV07XG5cbiAgICAgIGlmIChOdW1iZXIuaXNGaW5pdGUobGF0KSAmJiBOdW1iZXIuaXNGaW5pdGUobG5nKSkge1xuICAgICAgICB2YXIgbGF0SWR4ID0gTWF0aC5mbG9vcigobGF0ICsgOTApIC8gZ3JpZE9mZnNldC55T2Zmc2V0KTtcbiAgICAgICAgdmFyIGxvbklkeCA9IE1hdGguZmxvb3IoKGxuZyArIDE4MCkgLyBncmlkT2Zmc2V0LnhPZmZzZXQpO1xuICAgICAgICB2YXIga2V5ID0gXCJcIi5jb25jYXQobGF0SWR4LCBcIi1cIikuY29uY2F0KGxvbklkeCk7XG4gICAgICAgIGdyaWRIYXNoW2tleV0gPSBncmlkSGFzaFtrZXldIHx8IHtcbiAgICAgICAgICBjb3VudDogMCxcbiAgICAgICAgICBwb2ludHM6IFtdXG4gICAgICAgIH07XG4gICAgICAgIGdyaWRIYXNoW2tleV0uY291bnQgKz0gMTtcbiAgICAgICAgZ3JpZEhhc2hba2V5XS5wb2ludHMucHVzaChfcHQpO1xuICAgICAgfVxuICAgIH1cbiAgfSBjYXRjaCAoZXJyKSB7XG4gICAgX2RpZEl0ZXJhdG9yRXJyb3IyID0gdHJ1ZTtcbiAgICBfaXRlcmF0b3JFcnJvcjIgPSBlcnI7XG4gIH0gZmluYWxseSB7XG4gICAgdHJ5IHtcbiAgICAgIGlmICghX2l0ZXJhdG9yTm9ybWFsQ29tcGxldGlvbjIgJiYgX2l0ZXJhdG9yMi5yZXR1cm4gIT0gbnVsbCkge1xuICAgICAgICBfaXRlcmF0b3IyLnJldHVybigpO1xuICAgICAgfVxuICAgIH0gZmluYWxseSB7XG4gICAgICBpZiAoX2RpZEl0ZXJhdG9yRXJyb3IyKSB7XG4gICAgICAgIHRocm93IF9pdGVyYXRvckVycm9yMjtcbiAgICAgIH1cbiAgICB9XG4gIH1cblxuICByZXR1cm4ge1xuICAgIGdyaWRIYXNoOiBncmlkSGFzaCxcbiAgICBncmlkT2Zmc2V0OiBncmlkT2Zmc2V0XG4gIH07XG59XG5cbmZ1bmN0aW9uIF9nZXRHcmlkTGF5ZXJEYXRhRnJvbUdyaWRIYXNoKGdyaWRIYXNoLCBncmlkT2Zmc2V0KSB7XG4gIHJldHVybiBPYmplY3Qua2V5cyhncmlkSGFzaCkucmVkdWNlKGZ1bmN0aW9uIChhY2N1LCBrZXksIGkpIHtcbiAgICB2YXIgaWR4cyA9IGtleS5zcGxpdCgnLScpO1xuICAgIHZhciBsYXRJZHggPSBwYXJzZUludChpZHhzWzBdLCAxMCk7XG4gICAgdmFyIGxvbklkeCA9IHBhcnNlSW50KGlkeHNbMV0sIDEwKTtcbiAgICBhY2N1LnB1c2goT2JqZWN0LmFzc2lnbih7XG4gICAgICBpbmRleDogaSxcbiAgICAgIHBvc2l0aW9uOiBbLTE4MCArIGdyaWRPZmZzZXQueE9mZnNldCAqIGxvbklkeCwgLTkwICsgZ3JpZE9mZnNldC55T2Zmc2V0ICogbGF0SWR4XVxuICAgIH0sIGdyaWRIYXNoW2tleV0pKTtcbiAgICByZXR1cm4gYWNjdTtcbiAgfSwgW10pO1xufVxuXG5mdW5jdGlvbiBfY2FsY3VsYXRlR3JpZExhdExvbk9mZnNldChjZWxsU2l6ZSwgbGF0aXR1ZGUpIHtcbiAgdmFyIHlPZmZzZXQgPSBfY2FsY3VsYXRlTGF0T2Zmc2V0KGNlbGxTaXplKTtcblxuICB2YXIgeE9mZnNldCA9IF9jYWxjdWxhdGVMb25PZmZzZXQobGF0aXR1ZGUsIGNlbGxTaXplKTtcblxuICByZXR1cm4ge1xuICAgIHlPZmZzZXQ6IHlPZmZzZXQsXG4gICAgeE9mZnNldDogeE9mZnNldFxuICB9O1xufVxuXG5mdW5jdGlvbiBfY2FsY3VsYXRlTGF0T2Zmc2V0KGR5KSB7XG4gIHJldHVybiBkeSAvIFJfRUFSVEggKiAoMTgwIC8gTWF0aC5QSSk7XG59XG5cbmZ1bmN0aW9uIF9jYWxjdWxhdGVMb25PZmZzZXQobGF0LCBkeCkge1xuICByZXR1cm4gZHggLyBSX0VBUlRIICogKDE4MCAvIE1hdGguUEkpIC8gTWF0aC5jb3MobGF0ICogTWF0aC5QSSAvIDE4MCk7XG59XG4vLyMgc291cmNlTWFwcGluZ1VSTD1ncmlkLWFnZ3JlZ2F0b3IuanMubWFwIl0sIm1hcHBpbmdzIjoiQUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/@deck.gl/aggregation-layers/dist/esm/cpu-grid-layer/grid-aggregator.js\n");

/***/ }),

/***/ "./node_modules/@deck.gl/aggregation-layers/dist/esm/gpu-grid-layer/gpu-grid-cell-layer-fragment.glsl.js":
/*!***************************************************************************************************************!*\
  !*** ./node_modules/@deck.gl/aggregation-layers/dist/esm/gpu-grid-layer/gpu-grid-cell-layer-fragment.glsl.js ***!
  \***************************************************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony default export */ __webpack_exports__[\"default\"] = (\"#version 300 es\\n#define SHADER_NAME gpu-grid-cell-layer-fragment-shader\\n\\nprecision highp float;\\n\\nin vec4 vColor;\\n\\nout vec4 fragColor;\\n\\nvoid main(void) {\\n  fragColor = vColor;\\n  fragColor = picking_filterColor(fragColor);\\n}\\n\");\n//# sourceMappingURL=gpu-grid-cell-layer-fragment.glsl.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQGRlY2suZ2wvYWdncmVnYXRpb24tbGF5ZXJzL2Rpc3QvZXNtL2dwdS1ncmlkLWxheWVyL2dwdS1ncmlkLWNlbGwtbGF5ZXItZnJhZ21lbnQuZ2xzbC5qcy5qcyIsInNvdXJjZXMiOlsid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9AZGVjay5nbC9hZ2dyZWdhdGlvbi1sYXllcnMvZGlzdC9lc20vZ3B1LWdyaWQtbGF5ZXIvZ3B1LWdyaWQtY2VsbC1sYXllci1mcmFnbWVudC5nbHNsLmpzPzQ3ZjIiXSwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IGRlZmF1bHQgXCIjdmVyc2lvbiAzMDAgZXNcXG4jZGVmaW5lIFNIQURFUl9OQU1FIGdwdS1ncmlkLWNlbGwtbGF5ZXItZnJhZ21lbnQtc2hhZGVyXFxuXFxucHJlY2lzaW9uIGhpZ2hwIGZsb2F0O1xcblxcbmluIHZlYzQgdkNvbG9yO1xcblxcbm91dCB2ZWM0IGZyYWdDb2xvcjtcXG5cXG52b2lkIG1haW4odm9pZCkge1xcbiAgZnJhZ0NvbG9yID0gdkNvbG9yO1xcbiAgZnJhZ0NvbG9yID0gcGlja2luZ19maWx0ZXJDb2xvcihmcmFnQ29sb3IpO1xcbn1cXG5cIjtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWdwdS1ncmlkLWNlbGwtbGF5ZXItZnJhZ21lbnQuZ2xzbC5qcy5tYXAiXSwibWFwcGluZ3MiOiJBQUFBO0FBQUE7QUFDQSIsInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/@deck.gl/aggregation-layers/dist/esm/gpu-grid-layer/gpu-grid-cell-layer-fragment.glsl.js\n");

/***/ }),

/***/ "./node_modules/@deck.gl/aggregation-layers/dist/esm/gpu-grid-layer/gpu-grid-cell-layer-vertex.glsl.js":
/*!*************************************************************************************************************!*\
  !*** ./node_modules/@deck.gl/aggregation-layers/dist/esm/gpu-grid-layer/gpu-grid-cell-layer-vertex.glsl.js ***!
  \*************************************************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony default export */ __webpack_exports__[\"default\"] = (\"#version 300 es\\n#define SHADER_NAME gpu-grid-cell-layer-vertex-shader\\n#define RANGE_COUNT 6\\n\\nin vec3 positions;\\nin vec3 normals;\\n\\nin vec4 colors;\\nin vec4 elevations;\\nin vec3 instancePickingColors;\\nuniform vec2 offset;\\nuniform bool extruded;\\nuniform float cellSize;\\nuniform float coverage;\\nuniform float opacity;\\nuniform float elevationScale;\\n\\nuniform ivec2 gridSize;\\nuniform vec2 gridOrigin;\\nuniform vec2 gridOriginLow;\\nuniform vec2 gridOffset;\\nuniform vec2 gridOffsetLow;\\nuniform vec4 colorRange[RANGE_COUNT];\\nuniform vec2 elevationRange;\\nuniform vec2 colorDomain;\\nuniform bool colorDomainValid;\\nuniform vec2 elevationDomain;\\nuniform bool elevationDomainValid;\\n\\nlayout(std140) uniform;\\nuniform ColorData\\n{\\n  vec4 maxMinCount;\\n} colorData;\\nuniform ElevationData\\n{\\n  vec4 maxMinCount;\\n} elevationData;\\n\\n#define EPSILON 0.00001\\nout vec4 vColor;\\n\\nvec4 quantizeScale(vec2 domain, vec4 range[RANGE_COUNT], float value) {\\n  vec4 outColor = vec4(0., 0., 0., 0.);\\n  if (value >= (domain.x - EPSILON) && value <= (domain.y + EPSILON)) {\\n    float domainRange = domain.y - domain.x;\\n    if (domainRange <= 0.) {\\n      outColor = colorRange[0];\\n    } else {\\n      float rangeCount = float(RANGE_COUNT);\\n      float rangeStep = domainRange / rangeCount;\\n      float idx = floor((value - domain.x) / rangeStep);\\n      idx = clamp(idx, 0., rangeCount - 1.);\\n      int intIdx = int(idx);\\n      outColor = colorRange[intIdx];\\n    }\\n  }\\n  return outColor;\\n}\\n\\nfloat linearScale(vec2 domain, vec2 range, float value) {\\n  if (value >= (domain.x - EPSILON) && value <= (domain.y + EPSILON)) {\\n    return ((value - domain.x) / (domain.y - domain.x)) * (range.y - range.x) + range.x;\\n  }\\n  return -1.;\\n}\\n\\nvoid main(void) {\\n\\n  vec2 clrDomain = colorDomainValid ? colorDomain : vec2(colorData.maxMinCount.a, colorData.maxMinCount.r);\\n  vec4 color = quantizeScale(clrDomain, colorRange, colors.r);\\n\\n  float elevation = 0.0;\\n\\n  if (extruded) {\\n    vec2 elvDomain = elevationDomainValid ? elevationDomain : vec2(elevationData.maxMinCount.a, elevationData.maxMinCount.r);\\n    elevation = linearScale(elvDomain, elevationRange, elevations.r);\\n    elevation = elevation  * (positions.z + 1.0) / 2.0 * elevationScale;\\n  }\\n  float shouldRender = float(color.r > 0.0 && elevations.r >= 0.0);\\n  float dotRadius = cellSize / 2. * coverage * shouldRender;\\n\\n  int yIndex = (gl_InstanceID / gridSize[0]);\\n  int xIndex = gl_InstanceID - (yIndex * gridSize[0]);\\n\\n  vec2 instancePositionXFP64 = mul_fp64(vec2(gridOffset[0], gridOffsetLow[0]), vec2(float(xIndex), 0.));\\n  instancePositionXFP64 = sum_fp64(instancePositionXFP64, vec2(gridOrigin[0], gridOriginLow[0]));\\n  vec2 instancePositionYFP64 = mul_fp64(vec2(gridOffset[1], gridOffsetLow[1]), vec2(float(yIndex), 0.));\\n  instancePositionYFP64 = sum_fp64(instancePositionYFP64, vec2(gridOrigin[1], gridOriginLow[1]));\\n\\n  vec3 centroidPosition = vec3(instancePositionXFP64[0], instancePositionYFP64[0], elevation);\\n  vec2 centroidPosition64xyLow = vec2(instancePositionXFP64[1], instancePositionYFP64[1]);\\n  vec3 pos = vec3(project_size(positions.xy + offset) * dotRadius, 0.);\\n  picking_setPickingColor(instancePickingColors);\\n\\n  vec4 position_commonspace;\\n  gl_Position = project_position_to_clipspace(centroidPosition, centroidPosition64xyLow, pos, position_commonspace);\\n\\n  vec3 normals_commonspace = project_normal(normals);\\n\\n   if (extruded) {\\n    vec3 lightColor = lighting_getLightColor(color.rgb, project_uCameraPosition, position_commonspace.xyz, normals_commonspace);\\n    vColor = vec4(lightColor, color.a * opacity) / 255.;\\n  } else {\\n    vColor = vec4(color.rgb, color.a * opacity) / 255.;\\n  }\\n}\\n\");\n//# sourceMappingURL=gpu-grid-cell-layer-vertex.glsl.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQGRlY2suZ2wvYWdncmVnYXRpb24tbGF5ZXJzL2Rpc3QvZXNtL2dwdS1ncmlkLWxheWVyL2dwdS1ncmlkLWNlbGwtbGF5ZXItdmVydGV4Lmdsc2wuanMuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvQGRlY2suZ2wvYWdncmVnYXRpb24tbGF5ZXJzL2Rpc3QvZXNtL2dwdS1ncmlkLWxheWVyL2dwdS1ncmlkLWNlbGwtbGF5ZXItdmVydGV4Lmdsc2wuanM/YTIzYSJdLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgZGVmYXVsdCBcIiN2ZXJzaW9uIDMwMCBlc1xcbiNkZWZpbmUgU0hBREVSX05BTUUgZ3B1LWdyaWQtY2VsbC1sYXllci12ZXJ0ZXgtc2hhZGVyXFxuI2RlZmluZSBSQU5HRV9DT1VOVCA2XFxuXFxuaW4gdmVjMyBwb3NpdGlvbnM7XFxuaW4gdmVjMyBub3JtYWxzO1xcblxcbmluIHZlYzQgY29sb3JzO1xcbmluIHZlYzQgZWxldmF0aW9ucztcXG5pbiB2ZWMzIGluc3RhbmNlUGlja2luZ0NvbG9ycztcXG51bmlmb3JtIHZlYzIgb2Zmc2V0O1xcbnVuaWZvcm0gYm9vbCBleHRydWRlZDtcXG51bmlmb3JtIGZsb2F0IGNlbGxTaXplO1xcbnVuaWZvcm0gZmxvYXQgY292ZXJhZ2U7XFxudW5pZm9ybSBmbG9hdCBvcGFjaXR5O1xcbnVuaWZvcm0gZmxvYXQgZWxldmF0aW9uU2NhbGU7XFxuXFxudW5pZm9ybSBpdmVjMiBncmlkU2l6ZTtcXG51bmlmb3JtIHZlYzIgZ3JpZE9yaWdpbjtcXG51bmlmb3JtIHZlYzIgZ3JpZE9yaWdpbkxvdztcXG51bmlmb3JtIHZlYzIgZ3JpZE9mZnNldDtcXG51bmlmb3JtIHZlYzIgZ3JpZE9mZnNldExvdztcXG51bmlmb3JtIHZlYzQgY29sb3JSYW5nZVtSQU5HRV9DT1VOVF07XFxudW5pZm9ybSB2ZWMyIGVsZXZhdGlvblJhbmdlO1xcbnVuaWZvcm0gdmVjMiBjb2xvckRvbWFpbjtcXG51bmlmb3JtIGJvb2wgY29sb3JEb21haW5WYWxpZDtcXG51bmlmb3JtIHZlYzIgZWxldmF0aW9uRG9tYWluO1xcbnVuaWZvcm0gYm9vbCBlbGV2YXRpb25Eb21haW5WYWxpZDtcXG5cXG5sYXlvdXQoc3RkMTQwKSB1bmlmb3JtO1xcbnVuaWZvcm0gQ29sb3JEYXRhXFxue1xcbiAgdmVjNCBtYXhNaW5Db3VudDtcXG59IGNvbG9yRGF0YTtcXG51bmlmb3JtIEVsZXZhdGlvbkRhdGFcXG57XFxuICB2ZWM0IG1heE1pbkNvdW50O1xcbn0gZWxldmF0aW9uRGF0YTtcXG5cXG4jZGVmaW5lIEVQU0lMT04gMC4wMDAwMVxcbm91dCB2ZWM0IHZDb2xvcjtcXG5cXG52ZWM0IHF1YW50aXplU2NhbGUodmVjMiBkb21haW4sIHZlYzQgcmFuZ2VbUkFOR0VfQ09VTlRdLCBmbG9hdCB2YWx1ZSkge1xcbiAgdmVjNCBvdXRDb2xvciA9IHZlYzQoMC4sIDAuLCAwLiwgMC4pO1xcbiAgaWYgKHZhbHVlID49IChkb21haW4ueCAtIEVQU0lMT04pICYmIHZhbHVlIDw9IChkb21haW4ueSArIEVQU0lMT04pKSB7XFxuICAgIGZsb2F0IGRvbWFpblJhbmdlID0gZG9tYWluLnkgLSBkb21haW4ueDtcXG4gICAgaWYgKGRvbWFpblJhbmdlIDw9IDAuKSB7XFxuICAgICAgb3V0Q29sb3IgPSBjb2xvclJhbmdlWzBdO1xcbiAgICB9IGVsc2Uge1xcbiAgICAgIGZsb2F0IHJhbmdlQ291bnQgPSBmbG9hdChSQU5HRV9DT1VOVCk7XFxuICAgICAgZmxvYXQgcmFuZ2VTdGVwID0gZG9tYWluUmFuZ2UgLyByYW5nZUNvdW50O1xcbiAgICAgIGZsb2F0IGlkeCA9IGZsb29yKCh2YWx1ZSAtIGRvbWFpbi54KSAvIHJhbmdlU3RlcCk7XFxuICAgICAgaWR4ID0gY2xhbXAoaWR4LCAwLiwgcmFuZ2VDb3VudCAtIDEuKTtcXG4gICAgICBpbnQgaW50SWR4ID0gaW50KGlkeCk7XFxuICAgICAgb3V0Q29sb3IgPSBjb2xvclJhbmdlW2ludElkeF07XFxuICAgIH1cXG4gIH1cXG4gIHJldHVybiBvdXRDb2xvcjtcXG59XFxuXFxuZmxvYXQgbGluZWFyU2NhbGUodmVjMiBkb21haW4sIHZlYzIgcmFuZ2UsIGZsb2F0IHZhbHVlKSB7XFxuICBpZiAodmFsdWUgPj0gKGRvbWFpbi54IC0gRVBTSUxPTikgJiYgdmFsdWUgPD0gKGRvbWFpbi55ICsgRVBTSUxPTikpIHtcXG4gICAgcmV0dXJuICgodmFsdWUgLSBkb21haW4ueCkgLyAoZG9tYWluLnkgLSBkb21haW4ueCkpICogKHJhbmdlLnkgLSByYW5nZS54KSArIHJhbmdlLng7XFxuICB9XFxuICByZXR1cm4gLTEuO1xcbn1cXG5cXG52b2lkIG1haW4odm9pZCkge1xcblxcbiAgdmVjMiBjbHJEb21haW4gPSBjb2xvckRvbWFpblZhbGlkID8gY29sb3JEb21haW4gOiB2ZWMyKGNvbG9yRGF0YS5tYXhNaW5Db3VudC5hLCBjb2xvckRhdGEubWF4TWluQ291bnQucik7XFxuICB2ZWM0IGNvbG9yID0gcXVhbnRpemVTY2FsZShjbHJEb21haW4sIGNvbG9yUmFuZ2UsIGNvbG9ycy5yKTtcXG5cXG4gIGZsb2F0IGVsZXZhdGlvbiA9IDAuMDtcXG5cXG4gIGlmIChleHRydWRlZCkge1xcbiAgICB2ZWMyIGVsdkRvbWFpbiA9IGVsZXZhdGlvbkRvbWFpblZhbGlkID8gZWxldmF0aW9uRG9tYWluIDogdmVjMihlbGV2YXRpb25EYXRhLm1heE1pbkNvdW50LmEsIGVsZXZhdGlvbkRhdGEubWF4TWluQ291bnQucik7XFxuICAgIGVsZXZhdGlvbiA9IGxpbmVhclNjYWxlKGVsdkRvbWFpbiwgZWxldmF0aW9uUmFuZ2UsIGVsZXZhdGlvbnMucik7XFxuICAgIGVsZXZhdGlvbiA9IGVsZXZhdGlvbiAgKiAocG9zaXRpb25zLnogKyAxLjApIC8gMi4wICogZWxldmF0aW9uU2NhbGU7XFxuICB9XFxuICBmbG9hdCBzaG91bGRSZW5kZXIgPSBmbG9hdChjb2xvci5yID4gMC4wICYmIGVsZXZhdGlvbnMuciA+PSAwLjApO1xcbiAgZmxvYXQgZG90UmFkaXVzID0gY2VsbFNpemUgLyAyLiAqIGNvdmVyYWdlICogc2hvdWxkUmVuZGVyO1xcblxcbiAgaW50IHlJbmRleCA9IChnbF9JbnN0YW5jZUlEIC8gZ3JpZFNpemVbMF0pO1xcbiAgaW50IHhJbmRleCA9IGdsX0luc3RhbmNlSUQgLSAoeUluZGV4ICogZ3JpZFNpemVbMF0pO1xcblxcbiAgdmVjMiBpbnN0YW5jZVBvc2l0aW9uWEZQNjQgPSBtdWxfZnA2NCh2ZWMyKGdyaWRPZmZzZXRbMF0sIGdyaWRPZmZzZXRMb3dbMF0pLCB2ZWMyKGZsb2F0KHhJbmRleCksIDAuKSk7XFxuICBpbnN0YW5jZVBvc2l0aW9uWEZQNjQgPSBzdW1fZnA2NChpbnN0YW5jZVBvc2l0aW9uWEZQNjQsIHZlYzIoZ3JpZE9yaWdpblswXSwgZ3JpZE9yaWdpbkxvd1swXSkpO1xcbiAgdmVjMiBpbnN0YW5jZVBvc2l0aW9uWUZQNjQgPSBtdWxfZnA2NCh2ZWMyKGdyaWRPZmZzZXRbMV0sIGdyaWRPZmZzZXRMb3dbMV0pLCB2ZWMyKGZsb2F0KHlJbmRleCksIDAuKSk7XFxuICBpbnN0YW5jZVBvc2l0aW9uWUZQNjQgPSBzdW1fZnA2NChpbnN0YW5jZVBvc2l0aW9uWUZQNjQsIHZlYzIoZ3JpZE9yaWdpblsxXSwgZ3JpZE9yaWdpbkxvd1sxXSkpO1xcblxcbiAgdmVjMyBjZW50cm9pZFBvc2l0aW9uID0gdmVjMyhpbnN0YW5jZVBvc2l0aW9uWEZQNjRbMF0sIGluc3RhbmNlUG9zaXRpb25ZRlA2NFswXSwgZWxldmF0aW9uKTtcXG4gIHZlYzIgY2VudHJvaWRQb3NpdGlvbjY0eHlMb3cgPSB2ZWMyKGluc3RhbmNlUG9zaXRpb25YRlA2NFsxXSwgaW5zdGFuY2VQb3NpdGlvbllGUDY0WzFdKTtcXG4gIHZlYzMgcG9zID0gdmVjMyhwcm9qZWN0X3NpemUocG9zaXRpb25zLnh5ICsgb2Zmc2V0KSAqIGRvdFJhZGl1cywgMC4pO1xcbiAgcGlja2luZ19zZXRQaWNraW5nQ29sb3IoaW5zdGFuY2VQaWNraW5nQ29sb3JzKTtcXG5cXG4gIHZlYzQgcG9zaXRpb25fY29tbW9uc3BhY2U7XFxuICBnbF9Qb3NpdGlvbiA9IHByb2plY3RfcG9zaXRpb25fdG9fY2xpcHNwYWNlKGNlbnRyb2lkUG9zaXRpb24sIGNlbnRyb2lkUG9zaXRpb242NHh5TG93LCBwb3MsIHBvc2l0aW9uX2NvbW1vbnNwYWNlKTtcXG5cXG4gIHZlYzMgbm9ybWFsc19jb21tb25zcGFjZSA9IHByb2plY3Rfbm9ybWFsKG5vcm1hbHMpO1xcblxcbiAgIGlmIChleHRydWRlZCkge1xcbiAgICB2ZWMzIGxpZ2h0Q29sb3IgPSBsaWdodGluZ19nZXRMaWdodENvbG9yKGNvbG9yLnJnYiwgcHJvamVjdF91Q2FtZXJhUG9zaXRpb24sIHBvc2l0aW9uX2NvbW1vbnNwYWNlLnh5eiwgbm9ybWFsc19jb21tb25zcGFjZSk7XFxuICAgIHZDb2xvciA9IHZlYzQobGlnaHRDb2xvciwgY29sb3IuYSAqIG9wYWNpdHkpIC8gMjU1LjtcXG4gIH0gZWxzZSB7XFxuICAgIHZDb2xvciA9IHZlYzQoY29sb3IucmdiLCBjb2xvci5hICogb3BhY2l0eSkgLyAyNTUuO1xcbiAgfVxcbn1cXG5cIjtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWdwdS1ncmlkLWNlbGwtbGF5ZXItdmVydGV4Lmdsc2wuanMubWFwIl0sIm1hcHBpbmdzIjoiQUFBQTtBQUFBO0FBQ0EiLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/@deck.gl/aggregation-layers/dist/esm/gpu-grid-layer/gpu-grid-cell-layer-vertex.glsl.js\n");

/***/ }),

/***/ "./node_modules/@deck.gl/aggregation-layers/dist/esm/gpu-grid-layer/gpu-grid-cell-layer.js":
/*!*************************************************************************************************!*\
  !*** ./node_modules/@deck.gl/aggregation-layers/dist/esm/gpu-grid-layer/gpu-grid-cell-layer.js ***!
  \*************************************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"default\", function() { return GPUGridCellLayer; });\n/* harmony import */ var _babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/esm/classCallCheck */ \"./node_modules/@babel/runtime/helpers/esm/classCallCheck.js\");\n/* harmony import */ var _babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @babel/runtime/helpers/esm/createClass */ \"./node_modules/@babel/runtime/helpers/esm/createClass.js\");\n/* harmony import */ var _babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @babel/runtime/helpers/esm/possibleConstructorReturn */ \"./node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn.js\");\n/* harmony import */ var _babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @babel/runtime/helpers/esm/getPrototypeOf */ \"./node_modules/@babel/runtime/helpers/esm/getPrototypeOf.js\");\n/* harmony import */ var _babel_runtime_helpers_esm_inherits__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @babel/runtime/helpers/esm/inherits */ \"./node_modules/@babel/runtime/helpers/esm/inherits.js\");\n/* harmony import */ var _deck_gl_core__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @deck.gl/core */ \"./node_modules/@deck.gl/core/dist/esm/lib/layer.js\");\n/* harmony import */ var _luma_gl_core__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @luma.gl/core */ \"./node_modules/@luma.gl/shadertools/dist/esm/modules/fp64/fp64.js\");\n/* harmony import */ var _luma_gl_core__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @luma.gl/core */ \"./node_modules/@luma.gl/core/dist/esm/materials/phong-material.js\");\n/* harmony import */ var _luma_gl_core__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! @luma.gl/core */ \"./node_modules/@luma.gl/core/dist/esm/lib/model.js\");\n/* harmony import */ var _luma_gl_core__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! @luma.gl/core */ \"./node_modules/@luma.gl/core/dist/esm/geometries/cube-geometry.js\");\n/* harmony import */ var _utils_color_utils__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ../utils/color-utils */ \"./node_modules/@deck.gl/aggregation-layers/dist/esm/utils/color-utils.js\");\n/* harmony import */ var _gpu_grid_cell_layer_vertex_glsl__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./gpu-grid-cell-layer-vertex.glsl */ \"./node_modules/@deck.gl/aggregation-layers/dist/esm/gpu-grid-layer/gpu-grid-cell-layer-vertex.glsl.js\");\n/* harmony import */ var _gpu_grid_cell_layer_fragment_glsl__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ./gpu-grid-cell-layer-fragment.glsl */ \"./node_modules/@deck.gl/aggregation-layers/dist/esm/gpu-grid-layer/gpu-grid-cell-layer-fragment.glsl.js\");\n\n\n\n\n\n\n\nvar fp64LowPart = _luma_gl_core__WEBPACK_IMPORTED_MODULE_6__[\"default\"].fp64LowPart;\nvar defaultMaterial = new _luma_gl_core__WEBPACK_IMPORTED_MODULE_7__[\"default\"]();\n\n\n\nvar COLOR_DATA_UBO_INDEX = 0;\nvar ELEVATION_DATA_UBO_INDEX = 1;\nvar defaultProps = {\n  colorDomain: null,\n  colorRange: _utils_color_utils__WEBPACK_IMPORTED_MODULE_10__[\"defaultColorRange\"],\n  elevationDomain: null,\n  elevationRange: [0, 1000],\n  elevationScale: {\n    type: 'number',\n    min: 0,\n    value: 1\n  },\n  gridSize: {\n    type: 'array',\n    min: 0,\n    value: [1, 1]\n  },\n  gridOrigin: {\n    type: 'array',\n    min: 0,\n    value: [0, 0]\n  },\n  gridOffset: {\n    type: 'array',\n    min: 0,\n    value: [0, 0]\n  },\n  cellSize: {\n    type: 'number',\n    min: 0,\n    max: 1000,\n    value: 1000\n  },\n  offset: {\n    type: 'array',\n    min: 0,\n    value: [1, 1]\n  },\n  coverage: {\n    type: 'number',\n    min: 0,\n    max: 1,\n    value: 1\n  },\n  extruded: true,\n  fp64: false,\n  material: defaultMaterial\n};\n\nvar GPUGridCellLayer = function (_Layer) {\n  Object(_babel_runtime_helpers_esm_inherits__WEBPACK_IMPORTED_MODULE_4__[\"default\"])(GPUGridCellLayer, _Layer);\n\n  function GPUGridCellLayer() {\n    Object(_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(this, GPUGridCellLayer);\n\n    return Object(_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_2__[\"default\"])(this, Object(_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_3__[\"default\"])(GPUGridCellLayer).apply(this, arguments));\n  }\n\n  Object(_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_1__[\"default\"])(GPUGridCellLayer, [{\n    key: \"getShaders\",\n    value: function getShaders() {\n      return {\n        vs: _gpu_grid_cell_layer_vertex_glsl__WEBPACK_IMPORTED_MODULE_11__[\"default\"],\n        fs: _gpu_grid_cell_layer_fragment_glsl__WEBPACK_IMPORTED_MODULE_12__[\"default\"],\n        modules: ['project32', 'gouraud-lighting', 'picking', 'fp64']\n      };\n    }\n  }, {\n    key: \"initializeState\",\n    value: function initializeState() {\n      var gl = this.context.gl;\n      var attributeManager = this.getAttributeManager();\n      attributeManager.addInstanced({\n        colors: {\n          size: 4,\n          update: this.calculateColors,\n          noAlloc: true\n        },\n        elevations: {\n          size: 4,\n          update: this.calculateElevations,\n          noAlloc: true\n        }\n      });\n\n      var model = this._getModel(gl);\n\n      this._setupUniformBuffer(model);\n\n      this.setState({\n        model: model\n      });\n    }\n  }, {\n    key: \"_getModel\",\n    value: function _getModel(gl) {\n      return new _luma_gl_core__WEBPACK_IMPORTED_MODULE_8__[\"default\"](gl, Object.assign({}, this.getShaders(), {\n        id: this.props.id,\n        geometry: new _luma_gl_core__WEBPACK_IMPORTED_MODULE_9__[\"default\"](),\n        isInstanced: true,\n        shaderCache: this.context.shaderCache\n      }));\n    }\n  }, {\n    key: \"draw\",\n    value: function draw(_ref) {\n      var uniforms = _ref.uniforms;\n      var _this$props = this.props,\n          data = _this$props.data,\n          cellSize = _this$props.cellSize,\n          offset = _this$props.offset,\n          extruded = _this$props.extruded,\n          elevationScale = _this$props.elevationScale,\n          coverage = _this$props.coverage,\n          gridSize = _this$props.gridSize,\n          gridOrigin = _this$props.gridOrigin,\n          gridOffset = _this$props.gridOffset,\n          colorRange = _this$props.colorRange,\n          elevationRange = _this$props.elevationRange;\n      var gridOriginLow = [fp64LowPart(gridOrigin[0]), fp64LowPart(gridOrigin[1])];\n      var gridOffsetLow = [fp64LowPart(gridOffset[0]), fp64LowPart(gridOffset[1])];\n      var colorMaxMinBuffer = data.color.maxMinBuffer;\n      var elevationMaxMinBuffer = data.elevation.maxMinBuffer;\n      colorMaxMinBuffer.bind({\n        target: 35345,\n        index: COLOR_DATA_UBO_INDEX\n      });\n      elevationMaxMinBuffer.bind({\n        target: 35345,\n        index: ELEVATION_DATA_UBO_INDEX\n      });\n      var domainUniforms = this.getDomainUniforms();\n      this.state.model.setUniforms(Object.assign({}, uniforms, domainUniforms, {\n        cellSize: cellSize,\n        offset: offset,\n        extruded: extruded,\n        elevationScale: elevationScale,\n        coverage: coverage,\n        gridSize: gridSize,\n        gridOrigin: gridOrigin,\n        gridOriginLow: gridOriginLow,\n        gridOffset: gridOffset,\n        gridOffsetLow: gridOffsetLow,\n        colorRange: colorRange,\n        elevationRange: elevationRange\n      })).draw();\n      colorMaxMinBuffer.unbind({\n        target: 35345,\n        index: COLOR_DATA_UBO_INDEX\n      });\n      elevationMaxMinBuffer.unbind({\n        target: 35345,\n        index: ELEVATION_DATA_UBO_INDEX\n      });\n    }\n  }, {\n    key: \"calculateColors\",\n    value: function calculateColors(attribute) {\n      var data = this.props.data;\n      attribute.update({\n        buffer: data.color.aggregationBuffer\n      });\n    }\n  }, {\n    key: \"calculateElevations\",\n    value: function calculateElevations(attribute) {\n      var data = this.props.data;\n      attribute.update({\n        buffer: data.elevation.aggregationBuffer\n      });\n    }\n  }, {\n    key: \"getDomainUniforms\",\n    value: function getDomainUniforms() {\n      var _this$props2 = this.props,\n          colorDomain = _this$props2.colorDomain,\n          elevationDomain = _this$props2.elevationDomain;\n      var domainUniforms = {};\n\n      if (colorDomain !== null) {\n        domainUniforms.colorDomainValid = true;\n        domainUniforms.colorDomain = colorDomain;\n      } else {\n        domainUniforms.colorDomainValid = false;\n      }\n\n      if (elevationDomain !== null) {\n        domainUniforms.elevationDomainValid = true;\n        domainUniforms.elevationDomain = elevationDomain;\n      } else {\n        domainUniforms.elevationDomainValid = false;\n      }\n\n      return domainUniforms;\n    }\n  }, {\n    key: \"_setupUniformBuffer\",\n    value: function _setupUniformBuffer(model) {\n      var gl = this.context.gl;\n      var programHandle = model.program.handle;\n      var colorIndex = gl.getUniformBlockIndex(programHandle, 'ColorData');\n      var elevationIndex = gl.getUniformBlockIndex(programHandle, 'ElevationData');\n      gl.uniformBlockBinding(programHandle, colorIndex, COLOR_DATA_UBO_INDEX);\n      gl.uniformBlockBinding(programHandle, elevationIndex, ELEVATION_DATA_UBO_INDEX);\n    }\n  }]);\n\n  return GPUGridCellLayer;\n}(_deck_gl_core__WEBPACK_IMPORTED_MODULE_5__[\"default\"]);\n\n\nGPUGridCellLayer.layerName = 'GPUGridCellLayer';\nGPUGridCellLayer.defaultProps = defaultProps;\n//# sourceMappingURL=gpu-grid-cell-layer.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/@deck.gl/aggregation-layers/dist/esm/gpu-grid-layer/gpu-grid-cell-layer.js\n");

/***/ }),

/***/ "./node_modules/@deck.gl/aggregation-layers/dist/esm/gpu-grid-layer/gpu-grid-layer.js":
/*!********************************************************************************************!*\
  !*** ./node_modules/@deck.gl/aggregation-layers/dist/esm/gpu-grid-layer/gpu-grid-layer.js ***!
  \********************************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"default\", function() { return GPUGridLayer; });\n/* harmony import */ var _babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/esm/classCallCheck */ \"./node_modules/@babel/runtime/helpers/esm/classCallCheck.js\");\n/* harmony import */ var _babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @babel/runtime/helpers/esm/createClass */ \"./node_modules/@babel/runtime/helpers/esm/createClass.js\");\n/* harmony import */ var _babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @babel/runtime/helpers/esm/possibleConstructorReturn */ \"./node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn.js\");\n/* harmony import */ var _babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @babel/runtime/helpers/esm/getPrototypeOf */ \"./node_modules/@babel/runtime/helpers/esm/getPrototypeOf.js\");\n/* harmony import */ var _babel_runtime_helpers_esm_get__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @babel/runtime/helpers/esm/get */ \"./node_modules/@babel/runtime/helpers/esm/get.js\");\n/* harmony import */ var _babel_runtime_helpers_esm_inherits__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @babel/runtime/helpers/esm/inherits */ \"./node_modules/@babel/runtime/helpers/esm/inherits.js\");\n/* harmony import */ var _luma_gl_core__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @luma.gl/core */ \"./node_modules/@luma.gl/core/dist/esm/materials/phong-material.js\");\n/* harmony import */ var _deck_gl_core__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @deck.gl/core */ \"./node_modules/@deck.gl/core/dist/esm/utils/log.js\");\n/* harmony import */ var _deck_gl_core__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! @deck.gl/core */ \"./node_modules/@deck.gl/core/dist/esm/lib/composite-layer.js\");\n/* harmony import */ var _utils_gpu_grid_aggregation_gpu_grid_aggregator__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../utils/gpu-grid-aggregation/gpu-grid-aggregator */ \"./node_modules/@deck.gl/aggregation-layers/dist/esm/utils/gpu-grid-aggregation/gpu-grid-aggregator.js\");\n/* harmony import */ var _utils_aggregation_operation_utils__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ../utils/aggregation-operation-utils */ \"./node_modules/@deck.gl/aggregation-layers/dist/esm/utils/aggregation-operation-utils.js\");\n/* harmony import */ var _utils_gpu_grid_aggregation_grid_aggregation_utils__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ../utils/gpu-grid-aggregation/grid-aggregation-utils */ \"./node_modules/@deck.gl/aggregation-layers/dist/esm/utils/gpu-grid-aggregation/grid-aggregation-utils.js\");\n/* harmony import */ var _utils_color_utils__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ../utils/color-utils */ \"./node_modules/@deck.gl/aggregation-layers/dist/esm/utils/color-utils.js\");\n/* harmony import */ var _gpu_grid_cell_layer__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ./gpu-grid-cell-layer */ \"./node_modules/@deck.gl/aggregation-layers/dist/esm/gpu-grid-layer/gpu-grid-cell-layer.js\");\n/* harmony import */ var _cpu_grid_layer_grid_aggregator__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ./../cpu-grid-layer/grid-aggregator */ \"./node_modules/@deck.gl/aggregation-layers/dist/esm/cpu-grid-layer/grid-aggregator.js\");\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nvar defaultMaterial = new _luma_gl_core__WEBPACK_IMPORTED_MODULE_6__[\"default\"]();\nvar defaultProps = {\n  colorDomain: null,\n  colorRange: _utils_color_utils__WEBPACK_IMPORTED_MODULE_12__[\"defaultColorRange\"],\n  getColorWeight: {\n    type: 'accessor',\n    value: function value(x) {\n      return 1;\n    }\n  },\n  colorAggregation: 'SUM',\n  elevationDomain: null,\n  elevationRange: [0, 1000],\n  getElevationWeight: {\n    type: 'accessor',\n    value: function value(x) {\n      return 1;\n    }\n  },\n  elevationAggregation: 'SUM',\n  elevationScale: {\n    type: 'number',\n    min: 0,\n    value: 1\n  },\n  cellSize: {\n    type: 'number',\n    min: 0,\n    max: 1000,\n    value: 1000\n  },\n  coverage: {\n    type: 'number',\n    min: 0,\n    max: 1,\n    value: 1\n  },\n  getPosition: {\n    type: 'accessor',\n    value: function value(x) {\n      return x.position;\n    }\n  },\n  extruded: false,\n  fp64: false,\n  material: defaultMaterial,\n  gpuAggregation: true\n};\n\nvar GPUGridLayer = function (_CompositeLayer) {\n  Object(_babel_runtime_helpers_esm_inherits__WEBPACK_IMPORTED_MODULE_5__[\"default\"])(GPUGridLayer, _CompositeLayer);\n\n  function GPUGridLayer() {\n    Object(_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(this, GPUGridLayer);\n\n    return Object(_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_2__[\"default\"])(this, Object(_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_3__[\"default\"])(GPUGridLayer).apply(this, arguments));\n  }\n\n  Object(_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_1__[\"default\"])(GPUGridLayer, [{\n    key: \"initializeState\",\n    value: function initializeState() {\n      var gl = this.context.gl;\n      var isSupported = _utils_gpu_grid_aggregation_gpu_grid_aggregator__WEBPACK_IMPORTED_MODULE_9__[\"default\"].isSupported(gl);\n\n      if (!isSupported) {\n        _deck_gl_core__WEBPACK_IMPORTED_MODULE_7__[\"default\"].error('GPUGridLayer is not supported on this browser, use GridLayer instead')();\n      }\n\n      var options = {\n        id: \"\".concat(this.id, \"-gpu-aggregator\"),\n        shaderCache: this.context.shaderCache\n      };\n      this.state = {\n        gpuGridAggregator: new _utils_gpu_grid_aggregation_gpu_grid_aggregator__WEBPACK_IMPORTED_MODULE_9__[\"default\"](gl, options),\n        isSupported: isSupported\n      };\n    }\n  }, {\n    key: \"updateState\",\n    value: function updateState(opts) {\n      var aggregationFlags = this.getAggregationFlags(opts);\n\n      if (aggregationFlags) {\n        this.getLayerData(aggregationFlags);\n        this.setState({\n          gridHash: null\n        });\n      }\n    }\n  }, {\n    key: \"finalizeState\",\n    value: function finalizeState() {\n      Object(_babel_runtime_helpers_esm_get__WEBPACK_IMPORTED_MODULE_4__[\"default\"])(Object(_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_3__[\"default\"])(GPUGridLayer.prototype), \"finalizeState\", this).call(this);\n\n      this.state.gpuGridAggregator.delete();\n    }\n  }, {\n    key: \"getAggregationFlags\",\n    value: function getAggregationFlags(_ref) {\n      var oldProps = _ref.oldProps,\n          props = _ref.props,\n          changeFlags = _ref.changeFlags;\n      var aggregationFlags = null;\n\n      if (!this.state.isSupported) {\n        return false;\n      }\n\n      if (this.isDataChanged({\n        oldProps: oldProps,\n        props: props,\n        changeFlags: changeFlags\n      })) {\n        aggregationFlags = Object.assign({}, aggregationFlags, {\n          dataChanged: true\n        });\n      }\n\n      if (oldProps.cellSize !== props.cellSize) {\n        aggregationFlags = Object.assign({}, aggregationFlags, {\n          cellSizeChanged: true\n        });\n      }\n\n      return aggregationFlags;\n    }\n  }, {\n    key: \"isDataChanged\",\n    value: function isDataChanged(_ref2) {\n      var oldProps = _ref2.oldProps,\n          props = _ref2.props,\n          changeFlags = _ref2.changeFlags;\n\n      if (changeFlags.dataChanged) {\n        return true;\n      }\n\n      if (oldProps.gpuAggregation !== props.gpuAggregation) {\n        return true;\n      }\n\n      if (oldProps.colorAggregation !== props.colorAggregation || oldProps.elevationAggregation !== props.elevationAggregation) {\n        return true;\n      }\n\n      if (changeFlags.updateTriggersChanged && (changeFlags.updateTriggersChanged.all || changeFlags.updateTriggersChanged.getPosition || changeFlags.updateTriggersChanged.getColorWeight || changeFlags.updateTriggersChanged.getElevationWeight)) {\n        return true;\n      }\n\n      return false;\n    }\n  }, {\n    key: \"getHashKeyForIndex\",\n    value: function getHashKeyForIndex(index) {\n      var _this$state = this.state,\n          gridSize = _this$state.gridSize,\n          gridOrigin = _this$state.gridOrigin,\n          cellSize = _this$state.cellSize;\n      var yIndex = Math.floor(index / gridSize[0]);\n      var xIndex = index - yIndex * gridSize[0];\n      var latIdx = Math.floor((yIndex * cellSize[1] + gridOrigin[1] + 90 + cellSize[1] / 2) / cellSize[1]);\n      var lonIdx = Math.floor((xIndex * cellSize[0] + gridOrigin[0] + 180 + cellSize[0] / 2) / cellSize[0]);\n      return \"\".concat(latIdx, \"-\").concat(lonIdx);\n    }\n  }, {\n    key: \"getPositionForIndex\",\n    value: function getPositionForIndex(index) {\n      var _this$state2 = this.state,\n          gridSize = _this$state2.gridSize,\n          gridOrigin = _this$state2.gridOrigin,\n          cellSize = _this$state2.cellSize;\n      var yIndex = Math.floor(index / gridSize[0]);\n      var xIndex = index - yIndex * gridSize[0];\n      var yPos = yIndex * cellSize[1] + gridOrigin[1];\n      var xPos = xIndex * cellSize[0] + gridOrigin[0];\n      return [xPos, yPos];\n    }\n  }, {\n    key: \"getPickingInfo\",\n    value: function getPickingInfo(_ref3) {\n      var info = _ref3.info,\n          mode = _ref3.mode;\n      var index = info.index;\n      var object = null;\n\n      if (index >= 0) {\n        var gpuGridAggregator = this.state.gpuGridAggregator;\n        var position = this.getPositionForIndex(index);\n        var colorInfo = _utils_gpu_grid_aggregation_gpu_grid_aggregator__WEBPACK_IMPORTED_MODULE_9__[\"default\"].getAggregationData(Object.assign({\n          pixelIndex: index\n        }, gpuGridAggregator.getData('color')));\n        var elevationInfo = _utils_gpu_grid_aggregation_gpu_grid_aggregator__WEBPACK_IMPORTED_MODULE_9__[\"default\"].getAggregationData(Object.assign({\n          pixelIndex: index\n        }, gpuGridAggregator.getData('elevation')));\n        object = {\n          colorValue: colorInfo.cellWeight,\n          elevationValue: elevationInfo.cellWeight,\n          count: colorInfo.cellCount || elevationInfo.cellCount,\n          position: position,\n          totalCount: colorInfo.totalCount || elevationInfo.totalCount\n        };\n\n        if (mode !== 'hover') {\n          var _this$props = this.props,\n              data = _this$props.data,\n              getPosition = _this$props.getPosition;\n          var gridHash = this.state.gridHash;\n\n          if (!gridHash) {\n            var cpuAggregation = Object(_cpu_grid_layer_grid_aggregator__WEBPACK_IMPORTED_MODULE_14__[\"pointToDensityGridDataCPU\"])(data, this.props.cellSize, getPosition);\n            gridHash = cpuAggregation.gridHash;\n            this.setState({\n              gridHash: gridHash\n            });\n          }\n\n          var key = this.getHashKeyForIndex(index);\n          var cpuAggregationData = gridHash[key];\n          Object.assign(object, cpuAggregationData);\n        }\n      }\n\n      return Object.assign(info, {\n        picked: Boolean(object),\n        object: object\n      });\n    }\n  }, {\n    key: \"getLayerData\",\n    value: function getLayerData(aggregationFlags) {\n      var _this$props2 = this.props,\n          data = _this$props2.data,\n          cellSizeMeters = _this$props2.cellSize,\n          getPosition = _this$props2.getPosition,\n          gpuAggregation = _this$props2.gpuAggregation,\n          getColorWeight = _this$props2.getColorWeight,\n          colorAggregation = _this$props2.colorAggregation,\n          getElevationWeight = _this$props2.getElevationWeight,\n          elevationAggregation = _this$props2.elevationAggregation,\n          fp64 = _this$props2.fp64;\n      var weightParams = {\n        color: {\n          getWeight: getColorWeight,\n          operation: _utils_aggregation_operation_utils__WEBPACK_IMPORTED_MODULE_10__[\"AGGREGATION_OPERATION\"][colorAggregation] || _utils_aggregation_operation_utils__WEBPACK_IMPORTED_MODULE_10__[\"AGGREGATION_OPERATION\"][defaultProps.colorAggregation],\n          needMin: true,\n          needMax: true,\n          combineMaxMin: true\n        },\n        elevation: {\n          getWeight: getElevationWeight,\n          operation: _utils_aggregation_operation_utils__WEBPACK_IMPORTED_MODULE_10__[\"AGGREGATION_OPERATION\"][elevationAggregation] || _utils_aggregation_operation_utils__WEBPACK_IMPORTED_MODULE_10__[\"AGGREGATION_OPERATION\"][defaultProps.elevationAggregation],\n          needMin: true,\n          needMax: true,\n          combineMaxMin: true\n        }\n      };\n\n      var _pointToDensityGridDa = Object(_utils_gpu_grid_aggregation_grid_aggregation_utils__WEBPACK_IMPORTED_MODULE_11__[\"pointToDensityGridData\"])({\n        data: data,\n        cellSizeMeters: cellSizeMeters,\n        getPosition: getPosition,\n        weightParams: weightParams,\n        gpuAggregation: gpuAggregation,\n        gpuGridAggregator: this.state.gpuGridAggregator,\n        boundingBox: this.state.boundingBox,\n        aggregationFlags: aggregationFlags,\n        fp64: fp64\n      }),\n          weights = _pointToDensityGridDa.weights,\n          gridSize = _pointToDensityGridDa.gridSize,\n          gridOrigin = _pointToDensityGridDa.gridOrigin,\n          cellSize = _pointToDensityGridDa.cellSize,\n          boundingBox = _pointToDensityGridDa.boundingBox;\n\n      this.setState({\n        weights: weights,\n        gridSize: gridSize,\n        gridOrigin: gridOrigin,\n        cellSize: cellSize,\n        boundingBox: boundingBox\n      });\n    }\n  }, {\n    key: \"renderLayers\",\n    value: function renderLayers() {\n      if (!this.state.isSupported) {\n        return null;\n      }\n\n      var _this$props3 = this.props,\n          elevationScale = _this$props3.elevationScale,\n          fp64 = _this$props3.fp64,\n          extruded = _this$props3.extruded,\n          cellSizeMeters = _this$props3.cellSize,\n          coverage = _this$props3.coverage,\n          material = _this$props3.material,\n          elevationRange = _this$props3.elevationRange,\n          colorDomain = _this$props3.colorDomain,\n          elevationDomain = _this$props3.elevationDomain;\n      var _this$state3 = this.state,\n          weights = _this$state3.weights,\n          gridSize = _this$state3.gridSize,\n          gridOrigin = _this$state3.gridOrigin,\n          cellSize = _this$state3.cellSize;\n      var colorRange = Object(_utils_color_utils__WEBPACK_IMPORTED_MODULE_12__[\"colorRangeToFlatArray\"])(this.props.colorRange, Float32Array, 255);\n      var SubLayerClass = this.getSubLayerClass('gpu-grid-cell', _gpu_grid_cell_layer__WEBPACK_IMPORTED_MODULE_13__[\"default\"]);\n      return new SubLayerClass({\n        gridSize: gridSize,\n        gridOrigin: gridOrigin,\n        gridOffset: cellSize,\n        colorRange: colorRange,\n        elevationRange: elevationRange,\n        colorDomain: colorDomain,\n        elevationDomain: elevationDomain,\n        fp64: fp64,\n        cellSize: cellSizeMeters,\n        coverage: coverage,\n        material: material,\n        elevationScale: elevationScale,\n        extruded: extruded\n      }, this.getSubLayerProps({\n        id: 'gpu-grid-cell'\n      }), {\n        data: weights,\n        numInstances: gridSize[0] * gridSize[1]\n      });\n    }\n  }]);\n\n  return GPUGridLayer;\n}(_deck_gl_core__WEBPACK_IMPORTED_MODULE_8__[\"default\"]);\n\n\nGPUGridLayer.layerName = 'GPUGridLayer';\nGPUGridLayer.defaultProps = defaultProps;\n//# sourceMappingURL=gpu-grid-layer.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/@deck.gl/aggregation-layers/dist/esm/gpu-grid-layer/gpu-grid-layer.js\n");

/***/ }),

/***/ "./node_modules/@deck.gl/aggregation-layers/dist/esm/grid-layer/grid-layer.js":
/*!************************************************************************************!*\
  !*** ./node_modules/@deck.gl/aggregation-layers/dist/esm/grid-layer/grid-layer.js ***!
  \************************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"default\", function() { return GridLayer; });\n/* harmony import */ var _babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/esm/classCallCheck */ \"./node_modules/@babel/runtime/helpers/esm/classCallCheck.js\");\n/* harmony import */ var _babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @babel/runtime/helpers/esm/createClass */ \"./node_modules/@babel/runtime/helpers/esm/createClass.js\");\n/* harmony import */ var _babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @babel/runtime/helpers/esm/possibleConstructorReturn */ \"./node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn.js\");\n/* harmony import */ var _babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @babel/runtime/helpers/esm/getPrototypeOf */ \"./node_modules/@babel/runtime/helpers/esm/getPrototypeOf.js\");\n/* harmony import */ var _babel_runtime_helpers_esm_inherits__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @babel/runtime/helpers/esm/inherits */ \"./node_modules/@babel/runtime/helpers/esm/inherits.js\");\n/* harmony import */ var _deck_gl_core__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @deck.gl/core */ \"./node_modules/@deck.gl/core/dist/esm/lib/composite-layer.js\");\n/* harmony import */ var _utils_gpu_grid_aggregation_gpu_grid_aggregator__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../utils/gpu-grid-aggregation/gpu-grid-aggregator */ \"./node_modules/@deck.gl/aggregation-layers/dist/esm/utils/gpu-grid-aggregation/gpu-grid-aggregator.js\");\n/* harmony import */ var _gpu_grid_layer_gpu_grid_layer__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../gpu-grid-layer/gpu-grid-layer */ \"./node_modules/@deck.gl/aggregation-layers/dist/esm/gpu-grid-layer/gpu-grid-layer.js\");\n/* harmony import */ var _cpu_grid_layer_cpu_grid_layer__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../cpu-grid-layer/cpu-grid-layer */ \"./node_modules/@deck.gl/aggregation-layers/dist/esm/cpu-grid-layer/cpu-grid-layer.js\");\n\n\n\n\n\n\n\n\n\nvar defaultProps = Object.assign({}, _gpu_grid_layer_gpu_grid_layer__WEBPACK_IMPORTED_MODULE_7__[\"default\"].defaultProps, _cpu_grid_layer_cpu_grid_layer__WEBPACK_IMPORTED_MODULE_8__[\"default\"].defaultProps, {\n  gpuAggregation: false\n});\n\nvar GridLayer = function (_CompositeLayer) {\n  Object(_babel_runtime_helpers_esm_inherits__WEBPACK_IMPORTED_MODULE_4__[\"default\"])(GridLayer, _CompositeLayer);\n\n  function GridLayer() {\n    Object(_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(this, GridLayer);\n\n    return Object(_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_2__[\"default\"])(this, Object(_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_3__[\"default\"])(GridLayer).apply(this, arguments));\n  }\n\n  Object(_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_1__[\"default\"])(GridLayer, [{\n    key: \"initializeState\",\n    value: function initializeState() {\n      this.state = {\n        useGPUAggregation: true\n      };\n    }\n  }, {\n    key: \"updateState\",\n    value: function updateState(_ref) {\n      var oldProps = _ref.oldProps,\n          props = _ref.props,\n          changeFlags = _ref.changeFlags;\n      var newState = {};\n      newState.useGPUAggregation = this.canUseGPUAggregation(props);\n      this.setState(newState);\n    }\n  }, {\n    key: \"renderLayers\",\n    value: function renderLayers() {\n      var _this$props = this.props,\n          data = _this$props.data,\n          updateTriggers = _this$props.updateTriggers;\n      var id = this.state.useGPUAggregation ? 'GPU' : 'CPU';\n      var LayerType = this.state.useGPUAggregation ? this.getSubLayerClass('GPU', _gpu_grid_layer_gpu_grid_layer__WEBPACK_IMPORTED_MODULE_7__[\"default\"]) : this.getSubLayerClass('CPU', _cpu_grid_layer_cpu_grid_layer__WEBPACK_IMPORTED_MODULE_8__[\"default\"]);\n      return new LayerType(this.props, this.getSubLayerProps({\n        id: id,\n        updateTriggers: updateTriggers\n      }), {\n        data: data\n      });\n    }\n  }, {\n    key: \"canUseGPUAggregation\",\n    value: function canUseGPUAggregation(props) {\n      var gpuAggregation = props.gpuAggregation,\n          lowerPercentile = props.lowerPercentile,\n          upperPercentile = props.upperPercentile,\n          getColorValue = props.getColorValue,\n          getElevationValue = props.getElevationValue;\n\n      if (!gpuAggregation) {\n        return false;\n      }\n\n      if (!_utils_gpu_grid_aggregation_gpu_grid_aggregator__WEBPACK_IMPORTED_MODULE_6__[\"default\"].isSupported(this.context.gl)) {\n        return false;\n      }\n\n      if (lowerPercentile !== 0 || upperPercentile !== 100) {\n        return false;\n      }\n\n      if (getColorValue !== null || getElevationValue !== null) {\n        return false;\n      }\n\n      return true;\n    }\n  }]);\n\n  return GridLayer;\n}(_deck_gl_core__WEBPACK_IMPORTED_MODULE_5__[\"default\"]);\n\n\nGridLayer.layerName = 'GridLayer';\nGridLayer.defaultProps = defaultProps;\n//# sourceMappingURL=grid-layer.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQGRlY2suZ2wvYWdncmVnYXRpb24tbGF5ZXJzL2Rpc3QvZXNtL2dyaWQtbGF5ZXIvZ3JpZC1sYXllci5qcy5qcyIsInNvdXJjZXMiOlsid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9AZGVjay5nbC9hZ2dyZWdhdGlvbi1sYXllcnMvZGlzdC9lc20vZ3JpZC1sYXllci9ncmlkLWxheWVyLmpzPzVjY2EiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IF9jbGFzc0NhbGxDaGVjayBmcm9tIFwiQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vY2xhc3NDYWxsQ2hlY2tcIjtcbmltcG9ydCBfY3JlYXRlQ2xhc3MgZnJvbSBcIkBiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL2NyZWF0ZUNsYXNzXCI7XG5pbXBvcnQgX3Bvc3NpYmxlQ29uc3RydWN0b3JSZXR1cm4gZnJvbSBcIkBiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL3Bvc3NpYmxlQ29uc3RydWN0b3JSZXR1cm5cIjtcbmltcG9ydCBfZ2V0UHJvdG90eXBlT2YgZnJvbSBcIkBiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL2dldFByb3RvdHlwZU9mXCI7XG5pbXBvcnQgX2luaGVyaXRzIGZyb20gXCJAYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9pbmhlcml0c1wiO1xuaW1wb3J0IHsgQ29tcG9zaXRlTGF5ZXIgfSBmcm9tICdAZGVjay5nbC9jb3JlJztcbmltcG9ydCBHUFVHcmlkQWdncmVnYXRvciBmcm9tICcuLi91dGlscy9ncHUtZ3JpZC1hZ2dyZWdhdGlvbi9ncHUtZ3JpZC1hZ2dyZWdhdG9yJztcbmltcG9ydCBHUFVHcmlkTGF5ZXIgZnJvbSAnLi4vZ3B1LWdyaWQtbGF5ZXIvZ3B1LWdyaWQtbGF5ZXInO1xuaW1wb3J0IENQVUdyaWRMYXllciBmcm9tICcuLi9jcHUtZ3JpZC1sYXllci9jcHUtZ3JpZC1sYXllcic7XG52YXIgZGVmYXVsdFByb3BzID0gT2JqZWN0LmFzc2lnbih7fSwgR1BVR3JpZExheWVyLmRlZmF1bHRQcm9wcywgQ1BVR3JpZExheWVyLmRlZmF1bHRQcm9wcywge1xuICBncHVBZ2dyZWdhdGlvbjogZmFsc2Vcbn0pO1xuXG52YXIgR3JpZExheWVyID0gZnVuY3Rpb24gKF9Db21wb3NpdGVMYXllcikge1xuICBfaW5oZXJpdHMoR3JpZExheWVyLCBfQ29tcG9zaXRlTGF5ZXIpO1xuXG4gIGZ1bmN0aW9uIEdyaWRMYXllcigpIHtcbiAgICBfY2xhc3NDYWxsQ2hlY2sodGhpcywgR3JpZExheWVyKTtcblxuICAgIHJldHVybiBfcG9zc2libGVDb25zdHJ1Y3RvclJldHVybih0aGlzLCBfZ2V0UHJvdG90eXBlT2YoR3JpZExheWVyKS5hcHBseSh0aGlzLCBhcmd1bWVudHMpKTtcbiAgfVxuXG4gIF9jcmVhdGVDbGFzcyhHcmlkTGF5ZXIsIFt7XG4gICAga2V5OiBcImluaXRpYWxpemVTdGF0ZVwiLFxuICAgIHZhbHVlOiBmdW5jdGlvbiBpbml0aWFsaXplU3RhdGUoKSB7XG4gICAgICB0aGlzLnN0YXRlID0ge1xuICAgICAgICB1c2VHUFVBZ2dyZWdhdGlvbjogdHJ1ZVxuICAgICAgfTtcbiAgICB9XG4gIH0sIHtcbiAgICBrZXk6IFwidXBkYXRlU3RhdGVcIixcbiAgICB2YWx1ZTogZnVuY3Rpb24gdXBkYXRlU3RhdGUoX3JlZikge1xuICAgICAgdmFyIG9sZFByb3BzID0gX3JlZi5vbGRQcm9wcyxcbiAgICAgICAgICBwcm9wcyA9IF9yZWYucHJvcHMsXG4gICAgICAgICAgY2hhbmdlRmxhZ3MgPSBfcmVmLmNoYW5nZUZsYWdzO1xuICAgICAgdmFyIG5ld1N0YXRlID0ge307XG4gICAgICBuZXdTdGF0ZS51c2VHUFVBZ2dyZWdhdGlvbiA9IHRoaXMuY2FuVXNlR1BVQWdncmVnYXRpb24ocHJvcHMpO1xuICAgICAgdGhpcy5zZXRTdGF0ZShuZXdTdGF0ZSk7XG4gICAgfVxuICB9LCB7XG4gICAga2V5OiBcInJlbmRlckxheWVyc1wiLFxuICAgIHZhbHVlOiBmdW5jdGlvbiByZW5kZXJMYXllcnMoKSB7XG4gICAgICB2YXIgX3RoaXMkcHJvcHMgPSB0aGlzLnByb3BzLFxuICAgICAgICAgIGRhdGEgPSBfdGhpcyRwcm9wcy5kYXRhLFxuICAgICAgICAgIHVwZGF0ZVRyaWdnZXJzID0gX3RoaXMkcHJvcHMudXBkYXRlVHJpZ2dlcnM7XG4gICAgICB2YXIgaWQgPSB0aGlzLnN0YXRlLnVzZUdQVUFnZ3JlZ2F0aW9uID8gJ0dQVScgOiAnQ1BVJztcbiAgICAgIHZhciBMYXllclR5cGUgPSB0aGlzLnN0YXRlLnVzZUdQVUFnZ3JlZ2F0aW9uID8gdGhpcy5nZXRTdWJMYXllckNsYXNzKCdHUFUnLCBHUFVHcmlkTGF5ZXIpIDogdGhpcy5nZXRTdWJMYXllckNsYXNzKCdDUFUnLCBDUFVHcmlkTGF5ZXIpO1xuICAgICAgcmV0dXJuIG5ldyBMYXllclR5cGUodGhpcy5wcm9wcywgdGhpcy5nZXRTdWJMYXllclByb3BzKHtcbiAgICAgICAgaWQ6IGlkLFxuICAgICAgICB1cGRhdGVUcmlnZ2VyczogdXBkYXRlVHJpZ2dlcnNcbiAgICAgIH0pLCB7XG4gICAgICAgIGRhdGE6IGRhdGFcbiAgICAgIH0pO1xuICAgIH1cbiAgfSwge1xuICAgIGtleTogXCJjYW5Vc2VHUFVBZ2dyZWdhdGlvblwiLFxuICAgIHZhbHVlOiBmdW5jdGlvbiBjYW5Vc2VHUFVBZ2dyZWdhdGlvbihwcm9wcykge1xuICAgICAgdmFyIGdwdUFnZ3JlZ2F0aW9uID0gcHJvcHMuZ3B1QWdncmVnYXRpb24sXG4gICAgICAgICAgbG93ZXJQZXJjZW50aWxlID0gcHJvcHMubG93ZXJQZXJjZW50aWxlLFxuICAgICAgICAgIHVwcGVyUGVyY2VudGlsZSA9IHByb3BzLnVwcGVyUGVyY2VudGlsZSxcbiAgICAgICAgICBnZXRDb2xvclZhbHVlID0gcHJvcHMuZ2V0Q29sb3JWYWx1ZSxcbiAgICAgICAgICBnZXRFbGV2YXRpb25WYWx1ZSA9IHByb3BzLmdldEVsZXZhdGlvblZhbHVlO1xuXG4gICAgICBpZiAoIWdwdUFnZ3JlZ2F0aW9uKSB7XG4gICAgICAgIHJldHVybiBmYWxzZTtcbiAgICAgIH1cblxuICAgICAgaWYgKCFHUFVHcmlkQWdncmVnYXRvci5pc1N1cHBvcnRlZCh0aGlzLmNvbnRleHQuZ2wpKSB7XG4gICAgICAgIHJldHVybiBmYWxzZTtcbiAgICAgIH1cblxuICAgICAgaWYgKGxvd2VyUGVyY2VudGlsZSAhPT0gMCB8fCB1cHBlclBlcmNlbnRpbGUgIT09IDEwMCkge1xuICAgICAgICByZXR1cm4gZmFsc2U7XG4gICAgICB9XG5cbiAgICAgIGlmIChnZXRDb2xvclZhbHVlICE9PSBudWxsIHx8IGdldEVsZXZhdGlvblZhbHVlICE9PSBudWxsKSB7XG4gICAgICAgIHJldHVybiBmYWxzZTtcbiAgICAgIH1cblxuICAgICAgcmV0dXJuIHRydWU7XG4gICAgfVxuICB9XSk7XG5cbiAgcmV0dXJuIEdyaWRMYXllcjtcbn0oQ29tcG9zaXRlTGF5ZXIpO1xuXG5leHBvcnQgeyBHcmlkTGF5ZXIgYXMgZGVmYXVsdCB9O1xuR3JpZExheWVyLmxheWVyTmFtZSA9ICdHcmlkTGF5ZXInO1xuR3JpZExheWVyLmRlZmF1bHRQcm9wcyA9IGRlZmF1bHRQcm9wcztcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWdyaWQtbGF5ZXIuanMubWFwIl0sIm1hcHBpbmdzIjoiQUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/@deck.gl/aggregation-layers/dist/esm/grid-layer/grid-layer.js\n");

/***/ }),

/***/ "./node_modules/@deck.gl/aggregation-layers/dist/esm/utils/gpu-grid-aggregation/grid-aggregation-utils.js":
/*!****************************************************************************************************************!*\
  !*** ./node_modules/@deck.gl/aggregation-layers/dist/esm/utils/gpu-grid-aggregation/grid-aggregation-utils.js ***!
  \****************************************************************************************************************/
/*! exports provided: pointToDensityGridData, alignToCell */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"pointToDensityGridData\", function() { return pointToDensityGridData; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"alignToCell\", function() { return alignToCell; });\n/* harmony import */ var math_gl__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! math.gl */ \"./node_modules/math.gl/dist/esm/matrix4.js\");\n/* harmony import */ var _luma_gl_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @luma.gl/core */ \"./node_modules/@luma.gl/shadertools/dist/esm/modules/fp64/fp64.js\");\n/* harmony import */ var _deck_gl_core__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @deck.gl/core */ \"./node_modules/@deck.gl/core/dist/esm/index.js\");\n/* harmony import */ var _deck_gl_core__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @deck.gl/core */ \"./node_modules/@deck.gl/core/dist/esm/lib/constants.js\");\n/* harmony import */ var _deck_gl_core__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @deck.gl/core */ \"./node_modules/@deck.gl/core/dist/esm/utils/log.js\");\n/* harmony import */ var _deck_gl_core__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @deck.gl/core */ \"./node_modules/@deck.gl/core/dist/esm/utils/iterable-utils.js\");\n\n\n\nvar count = _deck_gl_core__WEBPACK_IMPORTED_MODULE_2__[\"experimental\"].count;\nvar fp64LowPart = _luma_gl_core__WEBPACK_IMPORTED_MODULE_1__[\"default\"].fp64LowPart;\nvar R_EARTH = 6378000;\n\nfunction toFinite(n) {\n  return Number.isFinite(n) ? n : 0;\n}\n\nfunction pointToDensityGridData(_ref) {\n  var data = _ref.data,\n      getPosition = _ref.getPosition,\n      cellSizeMeters = _ref.cellSizeMeters,\n      gpuGridAggregator = _ref.gpuGridAggregator,\n      gpuAggregation = _ref.gpuAggregation,\n      aggregationFlags = _ref.aggregationFlags,\n      weightParams = _ref.weightParams,\n      _ref$fp = _ref.fp64,\n      fp64 = _ref$fp === void 0 ? false : _ref$fp,\n      _ref$coordinateSystem = _ref.coordinateSystem,\n      coordinateSystem = _ref$coordinateSystem === void 0 ? _deck_gl_core__WEBPACK_IMPORTED_MODULE_3__[\"COORDINATE_SYSTEM\"].LNGLAT : _ref$coordinateSystem,\n      _ref$viewport = _ref.viewport,\n      viewport = _ref$viewport === void 0 ? null : _ref$viewport,\n      _ref$boundingBox = _ref.boundingBox,\n      boundingBox = _ref$boundingBox === void 0 ? null : _ref$boundingBox;\n  var gridData = {};\n\n  if (aggregationFlags.dataChanged) {\n    gridData = parseGridData(data, getPosition, weightParams);\n    boundingBox = gridData.boundingBox;\n  }\n\n  var cellSize = [cellSizeMeters, cellSizeMeters];\n  var worldOrigin = [0, 0];\n  _deck_gl_core__WEBPACK_IMPORTED_MODULE_4__[\"default\"].assert(coordinateSystem === _deck_gl_core__WEBPACK_IMPORTED_MODULE_3__[\"COORDINATE_SYSTEM\"].LNGLAT || coordinateSystem === _deck_gl_core__WEBPACK_IMPORTED_MODULE_3__[\"COORDINATE_SYSTEM\"].IDENTITY);\n\n  switch (coordinateSystem) {\n    case _deck_gl_core__WEBPACK_IMPORTED_MODULE_3__[\"COORDINATE_SYSTEM\"].LNGLAT:\n    case _deck_gl_core__WEBPACK_IMPORTED_MODULE_3__[\"COORDINATE_SYSTEM\"].LNGLAT_DEPRECATED:\n      var gridOffset = getGridOffset(boundingBox, cellSizeMeters);\n      cellSize = [gridOffset.xOffset, gridOffset.yOffset];\n      worldOrigin = [-180, -90];\n      break;\n\n    case _deck_gl_core__WEBPACK_IMPORTED_MODULE_3__[\"COORDINATE_SYSTEM\"].IDENTITY:\n      var width = viewport.width,\n          height = viewport.height;\n      worldOrigin = [-width / 2, -height / 2];\n      break;\n\n    default:\n      _deck_gl_core__WEBPACK_IMPORTED_MODULE_4__[\"default\"].assert(false);\n  }\n\n  var opts = getGPUAggregationParams({\n    boundingBox: boundingBox,\n    cellSize: cellSize,\n    worldOrigin: worldOrigin\n  });\n  var aggregatedData = gpuGridAggregator.run({\n    positions: gridData.positions,\n    positions64xyLow: gridData.positions64xyLow,\n    weights: gridData.weights,\n    cellSize: cellSize,\n    width: opts.width,\n    height: opts.height,\n    gridTransformMatrix: opts.gridTransformMatrix,\n    useGPU: gpuAggregation,\n    changeFlags: aggregationFlags,\n    fp64: fp64\n  });\n  return {\n    weights: aggregatedData,\n    gridSize: opts.gridSize,\n    gridOrigin: opts.gridOrigin,\n    cellSize: cellSize,\n    boundingBox: boundingBox\n  };\n}\n\nfunction parseGridData(data, getPosition, weightParams) {\n  var pointCount = count(data);\n  var positions = new Float64Array(pointCount * 2);\n  var positions64xyLow = new Float32Array(pointCount * 2);\n  var yMin = Infinity;\n  var yMax = -Infinity;\n  var xMin = Infinity;\n  var xMax = -Infinity;\n  var y;\n  var x;\n  var weights = {};\n\n  for (var name in weightParams) {\n    weights[name] = Object.assign({}, weightParams[name], {\n      values: new Float32Array(pointCount * 3)\n    });\n  }\n\n  var _createIterable = Object(_deck_gl_core__WEBPACK_IMPORTED_MODULE_5__[\"createIterable\"])(data),\n      iterable = _createIterable.iterable,\n      objectInfo = _createIterable.objectInfo;\n\n  var _iteratorNormalCompletion = true;\n  var _didIteratorError = false;\n  var _iteratorError = undefined;\n\n  try {\n    for (var _iterator = iterable[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n      var object = _step.value;\n      objectInfo.index++;\n      var position = getPosition(object, objectInfo);\n      var index = objectInfo.index;\n      x = position[0];\n      y = position[1];\n      positions[index * 2] = x;\n      positions[index * 2 + 1] = y;\n      positions64xyLow[index * 2] = fp64LowPart(x);\n      positions64xyLow[index * 2 + 1] = fp64LowPart(y);\n\n      for (var _name in weightParams) {\n        var weight = weightParams[_name].getWeight(object);\n\n        if (Array.isArray(weight)) {\n          weights[_name].values[index * 3] = weight[0];\n          weights[_name].values[index * 3 + 1] = weight[1];\n          weights[_name].values[index * 3 + 2] = weight[2];\n        } else {\n          weights[_name].values[index * 3] = weight;\n        }\n      }\n\n      if (Number.isFinite(y) && Number.isFinite(x)) {\n        yMin = y < yMin ? y : yMin;\n        yMax = y > yMax ? y : yMax;\n        xMin = x < xMin ? x : xMin;\n        xMax = x > xMax ? x : xMax;\n      }\n    }\n  } catch (err) {\n    _didIteratorError = true;\n    _iteratorError = err;\n  } finally {\n    try {\n      if (!_iteratorNormalCompletion && _iterator.return != null) {\n        _iterator.return();\n      }\n    } finally {\n      if (_didIteratorError) {\n        throw _iteratorError;\n      }\n    }\n  }\n\n  var boundingBox = {\n    xMin: toFinite(xMin),\n    xMax: toFinite(xMax),\n    yMin: toFinite(yMin),\n    yMax: toFinite(yMax)\n  };\n  return {\n    positions: positions,\n    positions64xyLow: positions64xyLow,\n    weights: weights,\n    boundingBox: boundingBox\n  };\n}\n\nfunction getGridOffset(boundingBox, cellSize) {\n  var yMin = boundingBox.yMin,\n      yMax = boundingBox.yMax;\n  var latMin = yMin;\n  var latMax = yMax;\n  var centerLat = (latMin + latMax) / 2;\n  return calculateGridLatLonOffset(cellSize, centerLat);\n}\n\nfunction calculateGridLatLonOffset(cellSize, latitude) {\n  var yOffset = calculateLatOffset(cellSize);\n  var xOffset = calculateLonOffset(latitude, cellSize);\n  return {\n    yOffset: yOffset,\n    xOffset: xOffset\n  };\n}\n\nfunction calculateLatOffset(dy) {\n  return dy / R_EARTH * (180 / Math.PI);\n}\n\nfunction calculateLonOffset(lat, dx) {\n  return dx / R_EARTH * (180 / Math.PI) / Math.cos(lat * Math.PI / 180);\n}\n\nfunction alignToCell(inValue, cellSize) {\n  var sign = inValue < 0 ? -1 : 1;\n  var value = sign < 0 ? Math.abs(inValue) + cellSize : Math.abs(inValue);\n  value = Math.floor(value / cellSize) * cellSize;\n  return value * sign;\n}\n\nfunction getGPUAggregationParams(_ref2) {\n  var boundingBox = _ref2.boundingBox,\n      cellSize = _ref2.cellSize,\n      worldOrigin = _ref2.worldOrigin;\n  var yMin = boundingBox.yMin,\n      yMax = boundingBox.yMax,\n      xMin = boundingBox.xMin,\n      xMax = boundingBox.xMax;\n  var originX = alignToCell(xMin - worldOrigin[0], cellSize[0]) + worldOrigin[0];\n  var originY = alignToCell(yMin - worldOrigin[1], cellSize[1]) + worldOrigin[1];\n  var gridTransformMatrix = new math_gl__WEBPACK_IMPORTED_MODULE_0__[\"default\"]().translate([-1 * originX, -1 * originY, 0]);\n  var gridOrigin = [originX, originY];\n  var width = xMax - xMin + cellSize[0];\n  var height = yMax - yMin + cellSize[1];\n  var gridSize = [Math.ceil(width / cellSize[0]), Math.ceil(height / cellSize[1])];\n  return {\n    gridOrigin: gridOrigin,\n    gridSize: gridSize,\n    width: width,\n    height: height,\n    gridTransformMatrix: gridTransformMatrix\n  };\n}\n//# sourceMappingURL=grid-aggregation-utils.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/@deck.gl/aggregation-layers/dist/esm/utils/gpu-grid-aggregation/grid-aggregation-utils.js\n");

/***/ }),

/***/ "./node_modules/@deck.gl/layers/dist/esm/column-layer/grid-cell-layer.js":
/*!*******************************************************************************!*\
  !*** ./node_modules/@deck.gl/layers/dist/esm/column-layer/grid-cell-layer.js ***!
  \*******************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"default\", function() { return GridCellLayer; });\n/* harmony import */ var _babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/esm/classCallCheck */ \"./node_modules/@babel/runtime/helpers/esm/classCallCheck.js\");\n/* harmony import */ var _babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @babel/runtime/helpers/esm/createClass */ \"./node_modules/@babel/runtime/helpers/esm/createClass.js\");\n/* harmony import */ var _babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @babel/runtime/helpers/esm/possibleConstructorReturn */ \"./node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn.js\");\n/* harmony import */ var _babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @babel/runtime/helpers/esm/getPrototypeOf */ \"./node_modules/@babel/runtime/helpers/esm/getPrototypeOf.js\");\n/* harmony import */ var _babel_runtime_helpers_esm_inherits__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @babel/runtime/helpers/esm/inherits */ \"./node_modules/@babel/runtime/helpers/esm/inherits.js\");\n/* harmony import */ var _luma_gl_core__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @luma.gl/core */ \"./node_modules/@luma.gl/core/dist/esm/geometries/cube-geometry.js\");\n/* harmony import */ var _column_layer__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./column-layer */ \"./node_modules/@deck.gl/layers/dist/esm/column-layer/column-layer.js\");\n\n\n\n\n\n\n\nvar defaultProps = {\n  cellSize: {\n    type: 'number',\n    min: 0,\n    value: 1000\n  },\n  offset: {\n    type: 'array',\n    min: 0,\n    value: [1, 1]\n  }\n};\n\nvar GridCellLayer = function (_ColumnLayer) {\n  Object(_babel_runtime_helpers_esm_inherits__WEBPACK_IMPORTED_MODULE_4__[\"default\"])(GridCellLayer, _ColumnLayer);\n\n  function GridCellLayer() {\n    Object(_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(this, GridCellLayer);\n\n    return Object(_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_2__[\"default\"])(this, Object(_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_3__[\"default\"])(GridCellLayer).apply(this, arguments));\n  }\n\n  Object(_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_1__[\"default\"])(GridCellLayer, [{\n    key: \"getGeometry\",\n    value: function getGeometry(diskResolution) {\n      return new _luma_gl_core__WEBPACK_IMPORTED_MODULE_5__[\"default\"]();\n    }\n  }, {\n    key: \"draw\",\n    value: function draw(_ref) {\n      var uniforms = _ref.uniforms;\n      var _this$props = this.props,\n          elevationScale = _this$props.elevationScale,\n          extruded = _this$props.extruded,\n          offset = _this$props.offset,\n          coverage = _this$props.coverage,\n          cellSize = _this$props.cellSize,\n          angle = _this$props.angle;\n      this.state.model.setUniforms(Object.assign({}, uniforms, {\n        radius: cellSize / 2,\n        angle: angle,\n        offset: offset,\n        extruded: extruded,\n        coverage: coverage,\n        elevationScale: elevationScale,\n        edgeDistance: 1,\n        isWireframe: false\n      })).draw();\n    }\n  }]);\n\n  return GridCellLayer;\n}(_column_layer__WEBPACK_IMPORTED_MODULE_6__[\"default\"]);\n\n\nGridCellLayer.layerName = 'GridCellLayer';\nGridCellLayer.defaultProps = defaultProps;\n//# sourceMappingURL=grid-cell-layer.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQGRlY2suZ2wvbGF5ZXJzL2Rpc3QvZXNtL2NvbHVtbi1sYXllci9ncmlkLWNlbGwtbGF5ZXIuanMuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvQGRlY2suZ2wvbGF5ZXJzL2Rpc3QvZXNtL2NvbHVtbi1sYXllci9ncmlkLWNlbGwtbGF5ZXIuanM/ZTcxNyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgX2NsYXNzQ2FsbENoZWNrIGZyb20gXCJAYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9jbGFzc0NhbGxDaGVja1wiO1xuaW1wb3J0IF9jcmVhdGVDbGFzcyBmcm9tIFwiQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vY3JlYXRlQ2xhc3NcIjtcbmltcG9ydCBfcG9zc2libGVDb25zdHJ1Y3RvclJldHVybiBmcm9tIFwiQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vcG9zc2libGVDb25zdHJ1Y3RvclJldHVyblwiO1xuaW1wb3J0IF9nZXRQcm90b3R5cGVPZiBmcm9tIFwiQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vZ2V0UHJvdG90eXBlT2ZcIjtcbmltcG9ydCBfaW5oZXJpdHMgZnJvbSBcIkBiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL2luaGVyaXRzXCI7XG5pbXBvcnQgeyBDdWJlR2VvbWV0cnkgfSBmcm9tICdAbHVtYS5nbC9jb3JlJztcbmltcG9ydCBDb2x1bW5MYXllciBmcm9tICcuL2NvbHVtbi1sYXllcic7XG52YXIgZGVmYXVsdFByb3BzID0ge1xuICBjZWxsU2l6ZToge1xuICAgIHR5cGU6ICdudW1iZXInLFxuICAgIG1pbjogMCxcbiAgICB2YWx1ZTogMTAwMFxuICB9LFxuICBvZmZzZXQ6IHtcbiAgICB0eXBlOiAnYXJyYXknLFxuICAgIG1pbjogMCxcbiAgICB2YWx1ZTogWzEsIDFdXG4gIH1cbn07XG5cbnZhciBHcmlkQ2VsbExheWVyID0gZnVuY3Rpb24gKF9Db2x1bW5MYXllcikge1xuICBfaW5oZXJpdHMoR3JpZENlbGxMYXllciwgX0NvbHVtbkxheWVyKTtcblxuICBmdW5jdGlvbiBHcmlkQ2VsbExheWVyKCkge1xuICAgIF9jbGFzc0NhbGxDaGVjayh0aGlzLCBHcmlkQ2VsbExheWVyKTtcblxuICAgIHJldHVybiBfcG9zc2libGVDb25zdHJ1Y3RvclJldHVybih0aGlzLCBfZ2V0UHJvdG90eXBlT2YoR3JpZENlbGxMYXllcikuYXBwbHkodGhpcywgYXJndW1lbnRzKSk7XG4gIH1cblxuICBfY3JlYXRlQ2xhc3MoR3JpZENlbGxMYXllciwgW3tcbiAgICBrZXk6IFwiZ2V0R2VvbWV0cnlcIixcbiAgICB2YWx1ZTogZnVuY3Rpb24gZ2V0R2VvbWV0cnkoZGlza1Jlc29sdXRpb24pIHtcbiAgICAgIHJldHVybiBuZXcgQ3ViZUdlb21ldHJ5KCk7XG4gICAgfVxuICB9LCB7XG4gICAga2V5OiBcImRyYXdcIixcbiAgICB2YWx1ZTogZnVuY3Rpb24gZHJhdyhfcmVmKSB7XG4gICAgICB2YXIgdW5pZm9ybXMgPSBfcmVmLnVuaWZvcm1zO1xuICAgICAgdmFyIF90aGlzJHByb3BzID0gdGhpcy5wcm9wcyxcbiAgICAgICAgICBlbGV2YXRpb25TY2FsZSA9IF90aGlzJHByb3BzLmVsZXZhdGlvblNjYWxlLFxuICAgICAgICAgIGV4dHJ1ZGVkID0gX3RoaXMkcHJvcHMuZXh0cnVkZWQsXG4gICAgICAgICAgb2Zmc2V0ID0gX3RoaXMkcHJvcHMub2Zmc2V0LFxuICAgICAgICAgIGNvdmVyYWdlID0gX3RoaXMkcHJvcHMuY292ZXJhZ2UsXG4gICAgICAgICAgY2VsbFNpemUgPSBfdGhpcyRwcm9wcy5jZWxsU2l6ZSxcbiAgICAgICAgICBhbmdsZSA9IF90aGlzJHByb3BzLmFuZ2xlO1xuICAgICAgdGhpcy5zdGF0ZS5tb2RlbC5zZXRVbmlmb3JtcyhPYmplY3QuYXNzaWduKHt9LCB1bmlmb3Jtcywge1xuICAgICAgICByYWRpdXM6IGNlbGxTaXplIC8gMixcbiAgICAgICAgYW5nbGU6IGFuZ2xlLFxuICAgICAgICBvZmZzZXQ6IG9mZnNldCxcbiAgICAgICAgZXh0cnVkZWQ6IGV4dHJ1ZGVkLFxuICAgICAgICBjb3ZlcmFnZTogY292ZXJhZ2UsXG4gICAgICAgIGVsZXZhdGlvblNjYWxlOiBlbGV2YXRpb25TY2FsZSxcbiAgICAgICAgZWRnZURpc3RhbmNlOiAxLFxuICAgICAgICBpc1dpcmVmcmFtZTogZmFsc2VcbiAgICAgIH0pKS5kcmF3KCk7XG4gICAgfVxuICB9XSk7XG5cbiAgcmV0dXJuIEdyaWRDZWxsTGF5ZXI7XG59KENvbHVtbkxheWVyKTtcblxuZXhwb3J0IHsgR3JpZENlbGxMYXllciBhcyBkZWZhdWx0IH07XG5HcmlkQ2VsbExheWVyLmxheWVyTmFtZSA9ICdHcmlkQ2VsbExheWVyJztcbkdyaWRDZWxsTGF5ZXIuZGVmYXVsdFByb3BzID0gZGVmYXVsdFByb3BzO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9Z3JpZC1jZWxsLWxheWVyLmpzLm1hcCJdLCJtYXBwaW5ncyI6IkFBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/@deck.gl/layers/dist/esm/column-layer/grid-cell-layer.js\n");

/***/ }),

/***/ "./node_modules/@luma.gl/core/dist/esm/geometries/cube-geometry.js":
/*!*************************************************************************!*\
  !*** ./node_modules/@luma.gl/core/dist/esm/geometries/cube-geometry.js ***!
  \*************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"default\", function() { return CubeGeometry; });\n/* harmony import */ var _babel_runtime_helpers_esm_objectSpread__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/esm/objectSpread */ \"./node_modules/@babel/runtime/helpers/esm/objectSpread.js\");\n/* harmony import */ var _babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @babel/runtime/helpers/esm/classCallCheck */ \"./node_modules/@babel/runtime/helpers/esm/classCallCheck.js\");\n/* harmony import */ var _babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @babel/runtime/helpers/esm/possibleConstructorReturn */ \"./node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn.js\");\n/* harmony import */ var _babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @babel/runtime/helpers/esm/getPrototypeOf */ \"./node_modules/@babel/runtime/helpers/esm/getPrototypeOf.js\");\n/* harmony import */ var _babel_runtime_helpers_esm_inherits__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @babel/runtime/helpers/esm/inherits */ \"./node_modules/@babel/runtime/helpers/esm/inherits.js\");\n/* harmony import */ var _geometry_geometry__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../geometry/geometry */ \"./node_modules/@luma.gl/core/dist/esm/geometry/geometry.js\");\n/* harmony import */ var _utils__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../utils */ \"./node_modules/@luma.gl/webgl/dist/esm/utils/utils.js\");\n\n\n\n\n\n\n\nvar CUBE_INDICES = new Uint16Array([0, 1, 2, 0, 2, 3, 4, 5, 6, 4, 6, 7, 8, 9, 10, 8, 10, 11, 12, 13, 14, 12, 14, 15, 16, 17, 18, 16, 18, 19, 20, 21, 22, 20, 22, 23]);\nvar CUBE_POSITIONS = new Float32Array([-1, -1, 1, 1, -1, 1, 1, 1, 1, -1, 1, 1, -1, -1, -1, -1, 1, -1, 1, 1, -1, 1, -1, -1, -1, 1, -1, -1, 1, 1, 1, 1, 1, 1, 1, -1, -1, -1, -1, 1, -1, -1, 1, -1, 1, -1, -1, 1, 1, -1, -1, 1, 1, -1, 1, 1, 1, 1, -1, 1, -1, -1, -1, -1, -1, 1, -1, 1, 1, -1, 1, -1]);\nvar CUBE_NORMALS = new Float32Array([0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, -1, 0, 0, -1, 0, 0, -1, 0, 0, -1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, -1, 0, 0, -1, 0, 0, -1, 0, 0, -1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, -1, 0, 0, -1, 0, 0, -1, 0, 0, -1, 0, 0]);\nvar CUBE_TEX_COORDS = new Float32Array([0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1]);\nvar ATTRIBUTES = {\n  POSITION: {\n    size: 3,\n    value: new Float32Array(CUBE_POSITIONS)\n  },\n  NORMAL: {\n    size: 3,\n    value: new Float32Array(CUBE_NORMALS)\n  },\n  TEXCOORD_0: {\n    size: 2,\n    value: new Float32Array(CUBE_TEX_COORDS)\n  }\n};\n\nvar CubeGeometry = function (_Geometry) {\n  Object(_babel_runtime_helpers_esm_inherits__WEBPACK_IMPORTED_MODULE_4__[\"default\"])(CubeGeometry, _Geometry);\n\n  function CubeGeometry() {\n    var props = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n    Object(_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_1__[\"default\"])(this, CubeGeometry);\n\n    var _props$id = props.id,\n        id = _props$id === void 0 ? Object(_utils__WEBPACK_IMPORTED_MODULE_6__[\"uid\"])('cube-geometry') : _props$id;\n    return Object(_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_2__[\"default\"])(this, Object(_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_3__[\"default\"])(CubeGeometry).call(this, Object(_babel_runtime_helpers_esm_objectSpread__WEBPACK_IMPORTED_MODULE_0__[\"default\"])({}, props, {\n      id: id,\n      indices: {\n        size: 1,\n        value: new Uint16Array(CUBE_INDICES)\n      },\n      attributes: Object(_babel_runtime_helpers_esm_objectSpread__WEBPACK_IMPORTED_MODULE_0__[\"default\"])({}, ATTRIBUTES, props.attributes)\n    })));\n  }\n\n  return CubeGeometry;\n}(_geometry_geometry__WEBPACK_IMPORTED_MODULE_5__[\"default\"]);\n\n\n//# sourceMappingURL=cube-geometry.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQGx1bWEuZ2wvY29yZS9kaXN0L2VzbS9nZW9tZXRyaWVzL2N1YmUtZ2VvbWV0cnkuanMuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvQGx1bWEuZ2wvY29yZS9kaXN0L2VzbS9nZW9tZXRyaWVzL2N1YmUtZ2VvbWV0cnkuanM/ZjkzMCJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgX29iamVjdFNwcmVhZCBmcm9tIFwiQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vb2JqZWN0U3ByZWFkXCI7XG5pbXBvcnQgX2NsYXNzQ2FsbENoZWNrIGZyb20gXCJAYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9jbGFzc0NhbGxDaGVja1wiO1xuaW1wb3J0IF9wb3NzaWJsZUNvbnN0cnVjdG9yUmV0dXJuIGZyb20gXCJAYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9wb3NzaWJsZUNvbnN0cnVjdG9yUmV0dXJuXCI7XG5pbXBvcnQgX2dldFByb3RvdHlwZU9mIGZyb20gXCJAYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9nZXRQcm90b3R5cGVPZlwiO1xuaW1wb3J0IF9pbmhlcml0cyBmcm9tIFwiQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vaW5oZXJpdHNcIjtcbmltcG9ydCBHZW9tZXRyeSBmcm9tICcuLi9nZW9tZXRyeS9nZW9tZXRyeSc7XG5pbXBvcnQgeyB1aWQgfSBmcm9tICcuLi91dGlscyc7XG52YXIgQ1VCRV9JTkRJQ0VTID0gbmV3IFVpbnQxNkFycmF5KFswLCAxLCAyLCAwLCAyLCAzLCA0LCA1LCA2LCA0LCA2LCA3LCA4LCA5LCAxMCwgOCwgMTAsIDExLCAxMiwgMTMsIDE0LCAxMiwgMTQsIDE1LCAxNiwgMTcsIDE4LCAxNiwgMTgsIDE5LCAyMCwgMjEsIDIyLCAyMCwgMjIsIDIzXSk7XG52YXIgQ1VCRV9QT1NJVElPTlMgPSBuZXcgRmxvYXQzMkFycmF5KFstMSwgLTEsIDEsIDEsIC0xLCAxLCAxLCAxLCAxLCAtMSwgMSwgMSwgLTEsIC0xLCAtMSwgLTEsIDEsIC0xLCAxLCAxLCAtMSwgMSwgLTEsIC0xLCAtMSwgMSwgLTEsIC0xLCAxLCAxLCAxLCAxLCAxLCAxLCAxLCAtMSwgLTEsIC0xLCAtMSwgMSwgLTEsIC0xLCAxLCAtMSwgMSwgLTEsIC0xLCAxLCAxLCAtMSwgLTEsIDEsIDEsIC0xLCAxLCAxLCAxLCAxLCAtMSwgMSwgLTEsIC0xLCAtMSwgLTEsIC0xLCAxLCAtMSwgMSwgMSwgLTEsIDEsIC0xXSk7XG52YXIgQ1VCRV9OT1JNQUxTID0gbmV3IEZsb2F0MzJBcnJheShbMCwgMCwgMSwgMCwgMCwgMSwgMCwgMCwgMSwgMCwgMCwgMSwgMCwgMCwgLTEsIDAsIDAsIC0xLCAwLCAwLCAtMSwgMCwgMCwgLTEsIDAsIDEsIDAsIDAsIDEsIDAsIDAsIDEsIDAsIDAsIDEsIDAsIDAsIC0xLCAwLCAwLCAtMSwgMCwgMCwgLTEsIDAsIDAsIC0xLCAwLCAxLCAwLCAwLCAxLCAwLCAwLCAxLCAwLCAwLCAxLCAwLCAwLCAtMSwgMCwgMCwgLTEsIDAsIDAsIC0xLCAwLCAwLCAtMSwgMCwgMF0pO1xudmFyIENVQkVfVEVYX0NPT1JEUyA9IG5ldyBGbG9hdDMyQXJyYXkoWzAsIDAsIDEsIDAsIDEsIDEsIDAsIDEsIDEsIDAsIDEsIDEsIDAsIDEsIDAsIDAsIDAsIDEsIDAsIDAsIDEsIDAsIDEsIDEsIDEsIDEsIDAsIDEsIDAsIDAsIDEsIDAsIDEsIDAsIDEsIDEsIDAsIDEsIDAsIDAsIDAsIDAsIDEsIDAsIDEsIDEsIDAsIDFdKTtcbnZhciBBVFRSSUJVVEVTID0ge1xuICBQT1NJVElPTjoge1xuICAgIHNpemU6IDMsXG4gICAgdmFsdWU6IG5ldyBGbG9hdDMyQXJyYXkoQ1VCRV9QT1NJVElPTlMpXG4gIH0sXG4gIE5PUk1BTDoge1xuICAgIHNpemU6IDMsXG4gICAgdmFsdWU6IG5ldyBGbG9hdDMyQXJyYXkoQ1VCRV9OT1JNQUxTKVxuICB9LFxuICBURVhDT09SRF8wOiB7XG4gICAgc2l6ZTogMixcbiAgICB2YWx1ZTogbmV3IEZsb2F0MzJBcnJheShDVUJFX1RFWF9DT09SRFMpXG4gIH1cbn07XG5cbnZhciBDdWJlR2VvbWV0cnkgPSBmdW5jdGlvbiAoX0dlb21ldHJ5KSB7XG4gIF9pbmhlcml0cyhDdWJlR2VvbWV0cnksIF9HZW9tZXRyeSk7XG5cbiAgZnVuY3Rpb24gQ3ViZUdlb21ldHJ5KCkge1xuICAgIHZhciBwcm9wcyA9IGFyZ3VtZW50cy5sZW5ndGggPiAwICYmIGFyZ3VtZW50c1swXSAhPT0gdW5kZWZpbmVkID8gYXJndW1lbnRzWzBdIDoge307XG5cbiAgICBfY2xhc3NDYWxsQ2hlY2sodGhpcywgQ3ViZUdlb21ldHJ5KTtcblxuICAgIHZhciBfcHJvcHMkaWQgPSBwcm9wcy5pZCxcbiAgICAgICAgaWQgPSBfcHJvcHMkaWQgPT09IHZvaWQgMCA/IHVpZCgnY3ViZS1nZW9tZXRyeScpIDogX3Byb3BzJGlkO1xuICAgIHJldHVybiBfcG9zc2libGVDb25zdHJ1Y3RvclJldHVybih0aGlzLCBfZ2V0UHJvdG90eXBlT2YoQ3ViZUdlb21ldHJ5KS5jYWxsKHRoaXMsIF9vYmplY3RTcHJlYWQoe30sIHByb3BzLCB7XG4gICAgICBpZDogaWQsXG4gICAgICBpbmRpY2VzOiB7XG4gICAgICAgIHNpemU6IDEsXG4gICAgICAgIHZhbHVlOiBuZXcgVWludDE2QXJyYXkoQ1VCRV9JTkRJQ0VTKVxuICAgICAgfSxcbiAgICAgIGF0dHJpYnV0ZXM6IF9vYmplY3RTcHJlYWQoe30sIEFUVFJJQlVURVMsIHByb3BzLmF0dHJpYnV0ZXMpXG4gICAgfSkpKTtcbiAgfVxuXG4gIHJldHVybiBDdWJlR2VvbWV0cnk7XG59KEdlb21ldHJ5KTtcblxuZXhwb3J0IHsgQ3ViZUdlb21ldHJ5IGFzIGRlZmF1bHQgfTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWN1YmUtZ2VvbWV0cnkuanMubWFwIl0sIm1hcHBpbmdzIjoiQUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/@luma.gl/core/dist/esm/geometries/cube-geometry.js\n");

/***/ }),

/***/ "./node_modules/@superset-ui/legacy-preset-chart-deckgl/esm/layers/Grid/Grid.js":
/*!**************************************************************************************!*\
  !*** ./node_modules/@superset-ui/legacy-preset-chart-deckgl/esm/layers/Grid/Grid.js ***!
  \**************************************************************************************/
/*! exports provided: getLayer, default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"getLayer\", function() { return getLayer; });\n/* harmony import */ var deck_gl__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! deck.gl */ \"./node_modules/@deck.gl/aggregation-layers/dist/esm/grid-layer/grid-layer.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"./node_modules/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _superset_ui_translation__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @superset-ui/translation */ \"./node_modules/@superset-ui/translation/esm/index.js\");\n/* harmony import */ var _superset_ui_translation__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(_superset_ui_translation__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var _common__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../common */ \"./node_modules/@superset-ui/legacy-preset-chart-deckgl/esm/layers/common.js\");\n/* harmony import */ var _utils_sandbox__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../utils/sandbox */ \"./node_modules/@superset-ui/legacy-preset-chart-deckgl/esm/utils/sandbox.js\");\n/* harmony import */ var _factory__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../factory */ \"./node_modules/@superset-ui/legacy-preset-chart-deckgl/esm/factory.js\");\n/* harmony import */ var _TooltipRow__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../TooltipRow */ \"./node_modules/@superset-ui/legacy-preset-chart-deckgl/esm/TooltipRow.js\");\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\n/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\n\n\n\n\n\n\n\nfunction setTooltipContent(o) {\n  return react__WEBPACK_IMPORTED_MODULE_1___default.a.createElement(\"div\", {\n    className: \"deckgl-tooltip\"\n  }, react__WEBPACK_IMPORTED_MODULE_1___default.a.createElement(_TooltipRow__WEBPACK_IMPORTED_MODULE_6__[\"default\"], {\n    label: Object(_superset_ui_translation__WEBPACK_IMPORTED_MODULE_2__[\"t\"])('Longitude and Latitude') + \": \",\n    value: o.coordinate[0] + \", \" + o.coordinate[1]\n  }), react__WEBPACK_IMPORTED_MODULE_1___default.a.createElement(_TooltipRow__WEBPACK_IMPORTED_MODULE_6__[\"default\"], {\n    label: Object(_superset_ui_translation__WEBPACK_IMPORTED_MODULE_2__[\"t\"])('Height') + \": \",\n    value: \"\" + o.object.elevationValue\n  }));\n}\n\nfunction getLayer(formData, payload, onAddFilter, setTooltip) {\n  const fd = formData;\n  const c = fd.color_picker;\n  let data = payload.data.features.map(d => _extends({}, d, {\n    color: [c.r, c.g, c.b, 255 * c.a]\n  }));\n\n  if (fd.js_data_mutator) {\n    // Applying user defined data mutator if defined\n    const jsFnMutator = Object(_utils_sandbox__WEBPACK_IMPORTED_MODULE_4__[\"default\"])(fd.js_data_mutator);\n    data = jsFnMutator(data);\n  }\n\n  const aggFunc = Object(_common__WEBPACK_IMPORTED_MODULE_3__[\"getAggFunc\"])(fd.js_agg_function, p => p.weight);\n  return new deck_gl__WEBPACK_IMPORTED_MODULE_0__[\"default\"](_extends({\n    id: \"grid-layer-\" + fd.slice_id,\n    data,\n    pickable: true,\n    cellSize: fd.grid_size,\n    minColor: [0, 0, 0, 0],\n    extruded: fd.extruded,\n    maxColor: [c.r, c.g, c.b, 255 * c.a],\n    outline: false,\n    getElevationValue: aggFunc,\n    getColorValue: aggFunc\n  }, Object(_common__WEBPACK_IMPORTED_MODULE_3__[\"commonLayerProps\"])(fd, setTooltip, setTooltipContent)));\n}\n\nfunction getPoints(data) {\n  return data.map(d => d.position);\n}\n\n/* harmony default export */ __webpack_exports__[\"default\"] = (Object(_factory__WEBPACK_IMPORTED_MODULE_5__[\"createDeckGLComponent\"])(getLayer, getPoints));//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHN1cGVyc2V0LXVpL2xlZ2FjeS1wcmVzZXQtY2hhcnQtZGVja2dsL2VzbS9sYXllcnMvR3JpZC9HcmlkLmpzLmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL0BzdXBlcnNldC11aS9sZWdhY3ktcHJlc2V0LWNoYXJ0LWRlY2tnbC9lc20vbGF5ZXJzL0dyaWQvR3JpZC5qcz83Nzg1Il0sInNvdXJjZXNDb250ZW50IjpbImZ1bmN0aW9uIF9leHRlbmRzKCkgeyBfZXh0ZW5kcyA9IE9iamVjdC5hc3NpZ24gfHwgZnVuY3Rpb24gKHRhcmdldCkgeyBmb3IgKHZhciBpID0gMTsgaSA8IGFyZ3VtZW50cy5sZW5ndGg7IGkrKykgeyB2YXIgc291cmNlID0gYXJndW1lbnRzW2ldOyBmb3IgKHZhciBrZXkgaW4gc291cmNlKSB7IGlmIChPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwoc291cmNlLCBrZXkpKSB7IHRhcmdldFtrZXldID0gc291cmNlW2tleV07IH0gfSB9IHJldHVybiB0YXJnZXQ7IH07IHJldHVybiBfZXh0ZW5kcy5hcHBseSh0aGlzLCBhcmd1bWVudHMpOyB9XG5cbi8qKlxuICogTGljZW5zZWQgdG8gdGhlIEFwYWNoZSBTb2Z0d2FyZSBGb3VuZGF0aW9uIChBU0YpIHVuZGVyIG9uZVxuICogb3IgbW9yZSBjb250cmlidXRvciBsaWNlbnNlIGFncmVlbWVudHMuICBTZWUgdGhlIE5PVElDRSBmaWxlXG4gKiBkaXN0cmlidXRlZCB3aXRoIHRoaXMgd29yayBmb3IgYWRkaXRpb25hbCBpbmZvcm1hdGlvblxuICogcmVnYXJkaW5nIGNvcHlyaWdodCBvd25lcnNoaXAuICBUaGUgQVNGIGxpY2Vuc2VzIHRoaXMgZmlsZVxuICogdG8geW91IHVuZGVyIHRoZSBBcGFjaGUgTGljZW5zZSwgVmVyc2lvbiAyLjAgKHRoZVxuICogXCJMaWNlbnNlXCIpOyB5b3UgbWF5IG5vdCB1c2UgdGhpcyBmaWxlIGV4Y2VwdCBpbiBjb21wbGlhbmNlXG4gKiB3aXRoIHRoZSBMaWNlbnNlLiAgWW91IG1heSBvYnRhaW4gYSBjb3B5IG9mIHRoZSBMaWNlbnNlIGF0XG4gKlxuICogICBodHRwOi8vd3d3LmFwYWNoZS5vcmcvbGljZW5zZXMvTElDRU5TRS0yLjBcbiAqXG4gKiBVbmxlc3MgcmVxdWlyZWQgYnkgYXBwbGljYWJsZSBsYXcgb3IgYWdyZWVkIHRvIGluIHdyaXRpbmcsXG4gKiBzb2Z0d2FyZSBkaXN0cmlidXRlZCB1bmRlciB0aGUgTGljZW5zZSBpcyBkaXN0cmlidXRlZCBvbiBhblxuICogXCJBUyBJU1wiIEJBU0lTLCBXSVRIT1VUIFdBUlJBTlRJRVMgT1IgQ09ORElUSU9OUyBPRiBBTllcbiAqIEtJTkQsIGVpdGhlciBleHByZXNzIG9yIGltcGxpZWQuICBTZWUgdGhlIExpY2Vuc2UgZm9yIHRoZVxuICogc3BlY2lmaWMgbGFuZ3VhZ2UgZ292ZXJuaW5nIHBlcm1pc3Npb25zIGFuZCBsaW1pdGF0aW9uc1xuICogdW5kZXIgdGhlIExpY2Vuc2UuXG4gKi9cbmltcG9ydCB7IEdyaWRMYXllciB9IGZyb20gJ2RlY2suZ2wnO1xuaW1wb3J0IFJlYWN0IGZyb20gJ3JlYWN0JztcbmltcG9ydCB7IHQgfSBmcm9tICdAc3VwZXJzZXQtdWkvdHJhbnNsYXRpb24nO1xuaW1wb3J0IHsgY29tbW9uTGF5ZXJQcm9wcywgZ2V0QWdnRnVuYyB9IGZyb20gJy4uL2NvbW1vbic7XG5pbXBvcnQgc2FuZGJveGVkRXZhbCBmcm9tICcuLi8uLi91dGlscy9zYW5kYm94JztcbmltcG9ydCB7IGNyZWF0ZURlY2tHTENvbXBvbmVudCB9IGZyb20gJy4uLy4uL2ZhY3RvcnknO1xuaW1wb3J0IFRvb2x0aXBSb3cgZnJvbSAnLi4vLi4vVG9vbHRpcFJvdyc7XG5cbmZ1bmN0aW9uIHNldFRvb2x0aXBDb250ZW50KG8pIHtcbiAgcmV0dXJuIFJlYWN0LmNyZWF0ZUVsZW1lbnQoXCJkaXZcIiwge1xuICAgIGNsYXNzTmFtZTogXCJkZWNrZ2wtdG9vbHRpcFwiXG4gIH0sIFJlYWN0LmNyZWF0ZUVsZW1lbnQoVG9vbHRpcFJvdywge1xuICAgIGxhYmVsOiB0KCdMb25naXR1ZGUgYW5kIExhdGl0dWRlJykgKyBcIjogXCIsXG4gICAgdmFsdWU6IG8uY29vcmRpbmF0ZVswXSArIFwiLCBcIiArIG8uY29vcmRpbmF0ZVsxXVxuICB9KSwgUmVhY3QuY3JlYXRlRWxlbWVudChUb29sdGlwUm93LCB7XG4gICAgbGFiZWw6IHQoJ0hlaWdodCcpICsgXCI6IFwiLFxuICAgIHZhbHVlOiBcIlwiICsgby5vYmplY3QuZWxldmF0aW9uVmFsdWVcbiAgfSkpO1xufVxuXG5leHBvcnQgZnVuY3Rpb24gZ2V0TGF5ZXIoZm9ybURhdGEsIHBheWxvYWQsIG9uQWRkRmlsdGVyLCBzZXRUb29sdGlwKSB7XG4gIGNvbnN0IGZkID0gZm9ybURhdGE7XG4gIGNvbnN0IGMgPSBmZC5jb2xvcl9waWNrZXI7XG4gIGxldCBkYXRhID0gcGF5bG9hZC5kYXRhLmZlYXR1cmVzLm1hcChkID0+IF9leHRlbmRzKHt9LCBkLCB7XG4gICAgY29sb3I6IFtjLnIsIGMuZywgYy5iLCAyNTUgKiBjLmFdXG4gIH0pKTtcblxuICBpZiAoZmQuanNfZGF0YV9tdXRhdG9yKSB7XG4gICAgLy8gQXBwbHlpbmcgdXNlciBkZWZpbmVkIGRhdGEgbXV0YXRvciBpZiBkZWZpbmVkXG4gICAgY29uc3QganNGbk11dGF0b3IgPSBzYW5kYm94ZWRFdmFsKGZkLmpzX2RhdGFfbXV0YXRvcik7XG4gICAgZGF0YSA9IGpzRm5NdXRhdG9yKGRhdGEpO1xuICB9XG5cbiAgY29uc3QgYWdnRnVuYyA9IGdldEFnZ0Z1bmMoZmQuanNfYWdnX2Z1bmN0aW9uLCBwID0+IHAud2VpZ2h0KTtcbiAgcmV0dXJuIG5ldyBHcmlkTGF5ZXIoX2V4dGVuZHMoe1xuICAgIGlkOiBcImdyaWQtbGF5ZXItXCIgKyBmZC5zbGljZV9pZCxcbiAgICBkYXRhLFxuICAgIHBpY2thYmxlOiB0cnVlLFxuICAgIGNlbGxTaXplOiBmZC5ncmlkX3NpemUsXG4gICAgbWluQ29sb3I6IFswLCAwLCAwLCAwXSxcbiAgICBleHRydWRlZDogZmQuZXh0cnVkZWQsXG4gICAgbWF4Q29sb3I6IFtjLnIsIGMuZywgYy5iLCAyNTUgKiBjLmFdLFxuICAgIG91dGxpbmU6IGZhbHNlLFxuICAgIGdldEVsZXZhdGlvblZhbHVlOiBhZ2dGdW5jLFxuICAgIGdldENvbG9yVmFsdWU6IGFnZ0Z1bmNcbiAgfSwgY29tbW9uTGF5ZXJQcm9wcyhmZCwgc2V0VG9vbHRpcCwgc2V0VG9vbHRpcENvbnRlbnQpKSk7XG59XG5cbmZ1bmN0aW9uIGdldFBvaW50cyhkYXRhKSB7XG4gIHJldHVybiBkYXRhLm1hcChkID0+IGQucG9zaXRpb24pO1xufVxuXG5leHBvcnQgZGVmYXVsdCBjcmVhdGVEZWNrR0xDb21wb25lbnQoZ2V0TGF5ZXIsIGdldFBvaW50cyk7Il0sIm1hcHBpbmdzIjoiQUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/@superset-ui/legacy-preset-chart-deckgl/esm/layers/Grid/Grid.js\n");

/***/ })

}]);