(window["webpackJsonp"] = window["webpackJsonp"] || []).push([[16],{

/***/ "./node_modules/@deck.gl/aggregation-layers/dist/esm/screen-grid-layer/screen-grid-layer-fragment-webgl1.glsl.js":
/*!***********************************************************************************************************************!*\
  !*** ./node_modules/@deck.gl/aggregation-layers/dist/esm/screen-grid-layer/screen-grid-layer-fragment-webgl1.glsl.js ***!
  \***********************************************************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony default export */ __webpack_exports__[\"default\"] = (\"#define SHADER_NAME screen-grid-layer-fragment-shader-webgl1\\n\\nprecision highp float;\\n\\nvarying vec4 vColor;\\nvarying float vSampleCount;\\n\\nvoid main(void) {\\n  if (vSampleCount <= 0.0) {\\n    discard;\\n  }\\n  gl_FragColor = vColor;\\n\\n  gl_FragColor = picking_filterColor(gl_FragColor);\\n}\\n\");\n//# sourceMappingURL=screen-grid-layer-fragment-webgl1.glsl.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQGRlY2suZ2wvYWdncmVnYXRpb24tbGF5ZXJzL2Rpc3QvZXNtL3NjcmVlbi1ncmlkLWxheWVyL3NjcmVlbi1ncmlkLWxheWVyLWZyYWdtZW50LXdlYmdsMS5nbHNsLmpzLmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL0BkZWNrLmdsL2FnZ3JlZ2F0aW9uLWxheWVycy9kaXN0L2VzbS9zY3JlZW4tZ3JpZC1sYXllci9zY3JlZW4tZ3JpZC1sYXllci1mcmFnbWVudC13ZWJnbDEuZ2xzbC5qcz8zZmNkIl0sInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCBkZWZhdWx0IFwiI2RlZmluZSBTSEFERVJfTkFNRSBzY3JlZW4tZ3JpZC1sYXllci1mcmFnbWVudC1zaGFkZXItd2ViZ2wxXFxuXFxucHJlY2lzaW9uIGhpZ2hwIGZsb2F0O1xcblxcbnZhcnlpbmcgdmVjNCB2Q29sb3I7XFxudmFyeWluZyBmbG9hdCB2U2FtcGxlQ291bnQ7XFxuXFxudm9pZCBtYWluKHZvaWQpIHtcXG4gIGlmICh2U2FtcGxlQ291bnQgPD0gMC4wKSB7XFxuICAgIGRpc2NhcmQ7XFxuICB9XFxuICBnbF9GcmFnQ29sb3IgPSB2Q29sb3I7XFxuXFxuICBnbF9GcmFnQ29sb3IgPSBwaWNraW5nX2ZpbHRlckNvbG9yKGdsX0ZyYWdDb2xvcik7XFxufVxcblwiO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9c2NyZWVuLWdyaWQtbGF5ZXItZnJhZ21lbnQtd2ViZ2wxLmdsc2wuanMubWFwIl0sIm1hcHBpbmdzIjoiQUFBQTtBQUFBO0FBQ0EiLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/@deck.gl/aggregation-layers/dist/esm/screen-grid-layer/screen-grid-layer-fragment-webgl1.glsl.js\n");

/***/ }),

/***/ "./node_modules/@deck.gl/aggregation-layers/dist/esm/screen-grid-layer/screen-grid-layer-fragment.glsl.js":
/*!****************************************************************************************************************!*\
  !*** ./node_modules/@deck.gl/aggregation-layers/dist/esm/screen-grid-layer/screen-grid-layer-fragment.glsl.js ***!
  \****************************************************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony default export */ __webpack_exports__[\"default\"] = (\"#version 300 es\\n#define SHADER_NAME screen-grid-layer-fragment-shader\\n\\nprecision highp float;\\n\\nin vec4 vColor;\\nin float vSampleCount;\\nout vec4 fragColor;\\n\\nvoid main(void) {\\n  if (vSampleCount <= 0.0) {\\n    discard;\\n  }\\n  fragColor = vColor;\\n\\n  fragColor = picking_filterColor(fragColor);\\n}\\n\");\n//# sourceMappingURL=screen-grid-layer-fragment.glsl.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQGRlY2suZ2wvYWdncmVnYXRpb24tbGF5ZXJzL2Rpc3QvZXNtL3NjcmVlbi1ncmlkLWxheWVyL3NjcmVlbi1ncmlkLWxheWVyLWZyYWdtZW50Lmdsc2wuanMuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvQGRlY2suZ2wvYWdncmVnYXRpb24tbGF5ZXJzL2Rpc3QvZXNtL3NjcmVlbi1ncmlkLWxheWVyL3NjcmVlbi1ncmlkLWxheWVyLWZyYWdtZW50Lmdsc2wuanM/YWNlNyJdLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgZGVmYXVsdCBcIiN2ZXJzaW9uIDMwMCBlc1xcbiNkZWZpbmUgU0hBREVSX05BTUUgc2NyZWVuLWdyaWQtbGF5ZXItZnJhZ21lbnQtc2hhZGVyXFxuXFxucHJlY2lzaW9uIGhpZ2hwIGZsb2F0O1xcblxcbmluIHZlYzQgdkNvbG9yO1xcbmluIGZsb2F0IHZTYW1wbGVDb3VudDtcXG5vdXQgdmVjNCBmcmFnQ29sb3I7XFxuXFxudm9pZCBtYWluKHZvaWQpIHtcXG4gIGlmICh2U2FtcGxlQ291bnQgPD0gMC4wKSB7XFxuICAgIGRpc2NhcmQ7XFxuICB9XFxuICBmcmFnQ29sb3IgPSB2Q29sb3I7XFxuXFxuICBmcmFnQ29sb3IgPSBwaWNraW5nX2ZpbHRlckNvbG9yKGZyYWdDb2xvcik7XFxufVxcblwiO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9c2NyZWVuLWdyaWQtbGF5ZXItZnJhZ21lbnQuZ2xzbC5qcy5tYXAiXSwibWFwcGluZ3MiOiJBQUFBO0FBQUE7QUFDQSIsInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/@deck.gl/aggregation-layers/dist/esm/screen-grid-layer/screen-grid-layer-fragment.glsl.js\n");

/***/ }),

/***/ "./node_modules/@deck.gl/aggregation-layers/dist/esm/screen-grid-layer/screen-grid-layer-vertex-webgl1.glsl.js":
/*!*********************************************************************************************************************!*\
  !*** ./node_modules/@deck.gl/aggregation-layers/dist/esm/screen-grid-layer/screen-grid-layer-vertex-webgl1.glsl.js ***!
  \*********************************************************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony default export */ __webpack_exports__[\"default\"] = (\"#define SHADER_NAME screen-grid-layer-vertex-shader-webgl1\\n#define RANGE_COUNT 6\\n\\nattribute vec3 positions;\\nattribute vec3 instancePositions;\\nattribute vec4 instanceCounts;\\nattribute vec3 instancePickingColors;\\n\\nuniform float opacity;\\nuniform vec3 cellScale;\\nuniform vec4 minColor;\\nuniform vec4 maxColor;\\nuniform float maxWeight;\\nuniform vec4 colorRange[RANGE_COUNT];\\nuniform vec2 colorDomain;\\nuniform bool shouldUseMinMax;\\n\\nvarying vec4 vColor;\\nvarying float vSampleCount;\\n\\nvec4 quantizeScale(vec2 domain, vec4 range[RANGE_COUNT], float value) {\\n  vec4 outColor = vec4(0., 0., 0., 0.);\\n  if (value >= domain.x && value <= domain.y) {\\n    float domainRange = domain.y - domain.x;\\n    if (domainRange <= 0.) {\\n      outColor = colorRange[0];\\n    } else {\\n      float rangeCount = float(RANGE_COUNT);\\n      float rangeStep = domainRange / rangeCount;\\n      float idx = floor((value - domain.x) / rangeStep);\\n      idx = clamp(idx, 0., rangeCount - 1.);\\n      int intIdx = int(idx);\\n      outColor = colorRange[intIdx];\\n    }\\n  }\\n  outColor = outColor / 255.;\\n  return outColor;\\n}\\n\\nvoid main(void) {\\n  vSampleCount = instanceCounts.a;\\n\\n  float weight = instanceCounts.r;\\n  float step = weight / maxWeight;\\n  vec4 minMaxColor = mix(minColor, maxColor, step) / 255.;\\n\\n  vec2 domain = colorDomain;\\n  float domainMaxValid = float(colorDomain.y != 0.);\\n  domain.y = mix(maxWeight, colorDomain.y, domainMaxValid);\\n  vec4 rangeColor = quantizeScale(domain, colorRange, weight);\\n\\n  float rangeMinMax = float(shouldUseMinMax);\\n  vec4 color = mix(rangeColor, minMaxColor, rangeMinMax);\\n  vColor = vec4(color.rgb, color.a * opacity);\\n  picking_setPickingColor(instancePickingColors);\\n\\n  gl_Position = vec4(instancePositions + positions * cellScale, 1.);\\n}\\n\");\n//# sourceMappingURL=screen-grid-layer-vertex-webgl1.glsl.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQGRlY2suZ2wvYWdncmVnYXRpb24tbGF5ZXJzL2Rpc3QvZXNtL3NjcmVlbi1ncmlkLWxheWVyL3NjcmVlbi1ncmlkLWxheWVyLXZlcnRleC13ZWJnbDEuZ2xzbC5qcy5qcyIsInNvdXJjZXMiOlsid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9AZGVjay5nbC9hZ2dyZWdhdGlvbi1sYXllcnMvZGlzdC9lc20vc2NyZWVuLWdyaWQtbGF5ZXIvc2NyZWVuLWdyaWQtbGF5ZXItdmVydGV4LXdlYmdsMS5nbHNsLmpzP2U2YTgiXSwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IGRlZmF1bHQgXCIjZGVmaW5lIFNIQURFUl9OQU1FIHNjcmVlbi1ncmlkLWxheWVyLXZlcnRleC1zaGFkZXItd2ViZ2wxXFxuI2RlZmluZSBSQU5HRV9DT1VOVCA2XFxuXFxuYXR0cmlidXRlIHZlYzMgcG9zaXRpb25zO1xcbmF0dHJpYnV0ZSB2ZWMzIGluc3RhbmNlUG9zaXRpb25zO1xcbmF0dHJpYnV0ZSB2ZWM0IGluc3RhbmNlQ291bnRzO1xcbmF0dHJpYnV0ZSB2ZWMzIGluc3RhbmNlUGlja2luZ0NvbG9ycztcXG5cXG51bmlmb3JtIGZsb2F0IG9wYWNpdHk7XFxudW5pZm9ybSB2ZWMzIGNlbGxTY2FsZTtcXG51bmlmb3JtIHZlYzQgbWluQ29sb3I7XFxudW5pZm9ybSB2ZWM0IG1heENvbG9yO1xcbnVuaWZvcm0gZmxvYXQgbWF4V2VpZ2h0O1xcbnVuaWZvcm0gdmVjNCBjb2xvclJhbmdlW1JBTkdFX0NPVU5UXTtcXG51bmlmb3JtIHZlYzIgY29sb3JEb21haW47XFxudW5pZm9ybSBib29sIHNob3VsZFVzZU1pbk1heDtcXG5cXG52YXJ5aW5nIHZlYzQgdkNvbG9yO1xcbnZhcnlpbmcgZmxvYXQgdlNhbXBsZUNvdW50O1xcblxcbnZlYzQgcXVhbnRpemVTY2FsZSh2ZWMyIGRvbWFpbiwgdmVjNCByYW5nZVtSQU5HRV9DT1VOVF0sIGZsb2F0IHZhbHVlKSB7XFxuICB2ZWM0IG91dENvbG9yID0gdmVjNCgwLiwgMC4sIDAuLCAwLik7XFxuICBpZiAodmFsdWUgPj0gZG9tYWluLnggJiYgdmFsdWUgPD0gZG9tYWluLnkpIHtcXG4gICAgZmxvYXQgZG9tYWluUmFuZ2UgPSBkb21haW4ueSAtIGRvbWFpbi54O1xcbiAgICBpZiAoZG9tYWluUmFuZ2UgPD0gMC4pIHtcXG4gICAgICBvdXRDb2xvciA9IGNvbG9yUmFuZ2VbMF07XFxuICAgIH0gZWxzZSB7XFxuICAgICAgZmxvYXQgcmFuZ2VDb3VudCA9IGZsb2F0KFJBTkdFX0NPVU5UKTtcXG4gICAgICBmbG9hdCByYW5nZVN0ZXAgPSBkb21haW5SYW5nZSAvIHJhbmdlQ291bnQ7XFxuICAgICAgZmxvYXQgaWR4ID0gZmxvb3IoKHZhbHVlIC0gZG9tYWluLngpIC8gcmFuZ2VTdGVwKTtcXG4gICAgICBpZHggPSBjbGFtcChpZHgsIDAuLCByYW5nZUNvdW50IC0gMS4pO1xcbiAgICAgIGludCBpbnRJZHggPSBpbnQoaWR4KTtcXG4gICAgICBvdXRDb2xvciA9IGNvbG9yUmFuZ2VbaW50SWR4XTtcXG4gICAgfVxcbiAgfVxcbiAgb3V0Q29sb3IgPSBvdXRDb2xvciAvIDI1NS47XFxuICByZXR1cm4gb3V0Q29sb3I7XFxufVxcblxcbnZvaWQgbWFpbih2b2lkKSB7XFxuICB2U2FtcGxlQ291bnQgPSBpbnN0YW5jZUNvdW50cy5hO1xcblxcbiAgZmxvYXQgd2VpZ2h0ID0gaW5zdGFuY2VDb3VudHMucjtcXG4gIGZsb2F0IHN0ZXAgPSB3ZWlnaHQgLyBtYXhXZWlnaHQ7XFxuICB2ZWM0IG1pbk1heENvbG9yID0gbWl4KG1pbkNvbG9yLCBtYXhDb2xvciwgc3RlcCkgLyAyNTUuO1xcblxcbiAgdmVjMiBkb21haW4gPSBjb2xvckRvbWFpbjtcXG4gIGZsb2F0IGRvbWFpbk1heFZhbGlkID0gZmxvYXQoY29sb3JEb21haW4ueSAhPSAwLik7XFxuICBkb21haW4ueSA9IG1peChtYXhXZWlnaHQsIGNvbG9yRG9tYWluLnksIGRvbWFpbk1heFZhbGlkKTtcXG4gIHZlYzQgcmFuZ2VDb2xvciA9IHF1YW50aXplU2NhbGUoZG9tYWluLCBjb2xvclJhbmdlLCB3ZWlnaHQpO1xcblxcbiAgZmxvYXQgcmFuZ2VNaW5NYXggPSBmbG9hdChzaG91bGRVc2VNaW5NYXgpO1xcbiAgdmVjNCBjb2xvciA9IG1peChyYW5nZUNvbG9yLCBtaW5NYXhDb2xvciwgcmFuZ2VNaW5NYXgpO1xcbiAgdkNvbG9yID0gdmVjNChjb2xvci5yZ2IsIGNvbG9yLmEgKiBvcGFjaXR5KTtcXG4gIHBpY2tpbmdfc2V0UGlja2luZ0NvbG9yKGluc3RhbmNlUGlja2luZ0NvbG9ycyk7XFxuXFxuICBnbF9Qb3NpdGlvbiA9IHZlYzQoaW5zdGFuY2VQb3NpdGlvbnMgKyBwb3NpdGlvbnMgKiBjZWxsU2NhbGUsIDEuKTtcXG59XFxuXCI7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1zY3JlZW4tZ3JpZC1sYXllci12ZXJ0ZXgtd2ViZ2wxLmdsc2wuanMubWFwIl0sIm1hcHBpbmdzIjoiQUFBQTtBQUFBO0FBQ0EiLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/@deck.gl/aggregation-layers/dist/esm/screen-grid-layer/screen-grid-layer-vertex-webgl1.glsl.js\n");

/***/ }),

/***/ "./node_modules/@deck.gl/aggregation-layers/dist/esm/screen-grid-layer/screen-grid-layer-vertex.glsl.js":
/*!**************************************************************************************************************!*\
  !*** ./node_modules/@deck.gl/aggregation-layers/dist/esm/screen-grid-layer/screen-grid-layer-vertex.glsl.js ***!
  \**************************************************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony default export */ __webpack_exports__[\"default\"] = (\"#version 300 es\\n#define SHADER_NAME screen-grid-layer-vertex-shader\\n#define RANGE_COUNT 6\\n\\nin vec3 positions;\\nin vec3 instancePositions;\\nin vec4 instanceCounts;\\nin vec3 instancePickingColors;\\n\\nlayout(std140) uniform;\\nuniform float opacity;\\nuniform vec3 cellScale;\\nuniform vec4 minColor;\\nuniform vec4 maxColor;\\nuniform AggregationData\\n{\\n  vec4 maxCount;\\n} aggregationData;\\n\\nuniform vec4 colorRange[RANGE_COUNT];\\nuniform vec2 colorDomain;\\nuniform bool shouldUseMinMax;\\n\\nout vec4 vColor;\\nout float vSampleCount;\\n\\nvec4 quantizeScale(vec2 domain, vec4 range[RANGE_COUNT], float value) {\\n  vec4 outColor = vec4(0., 0., 0., 0.);\\n  if (value >= domain.x && value <= domain.y) {\\n    float domainRange = domain.y - domain.x;\\n    if (domainRange <= 0.) {\\n      outColor = colorRange[0];\\n    } else {\\n      float rangeCount = float(RANGE_COUNT);\\n      float rangeStep = domainRange / rangeCount;\\n      float idx = floor((value - domain.x) / rangeStep);\\n      idx = clamp(idx, 0., rangeCount - 1.);\\n      int intIdx = int(idx);\\n      outColor = colorRange[intIdx];\\n    }\\n  }\\n  outColor = outColor / 255.;\\n  return outColor;\\n}\\n\\nvoid main(void) {\\n  vSampleCount = instanceCounts.a;\\n\\n  float weight = instanceCounts.r ;\\n  float maxWeight = aggregationData.maxCount.r;\\n  float step = weight / maxWeight;\\n  vec4 minMaxColor = mix(minColor, maxColor, step) / 255.;\\n\\n  vec2 domain = colorDomain;\\n  float domainMaxValid = float(colorDomain.y != 0.);\\n  domain.y = mix(maxWeight, colorDomain.y, domainMaxValid);\\n  vec4 rangeColor = quantizeScale(domain, colorRange, weight);\\n\\n  float rangeMinMax = float(shouldUseMinMax);\\n  vec4 color = mix(rangeColor, minMaxColor, rangeMinMax);\\n  vColor = vec4(color.rgb, color.a * opacity);\\n  picking_setPickingColor(instancePickingColors);\\n\\n  gl_Position = vec4(instancePositions + positions * cellScale, 1.);\\n}\\n\");\n//# sourceMappingURL=screen-grid-layer-vertex.glsl.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQGRlY2suZ2wvYWdncmVnYXRpb24tbGF5ZXJzL2Rpc3QvZXNtL3NjcmVlbi1ncmlkLWxheWVyL3NjcmVlbi1ncmlkLWxheWVyLXZlcnRleC5nbHNsLmpzLmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL0BkZWNrLmdsL2FnZ3JlZ2F0aW9uLWxheWVycy9kaXN0L2VzbS9zY3JlZW4tZ3JpZC1sYXllci9zY3JlZW4tZ3JpZC1sYXllci12ZXJ0ZXguZ2xzbC5qcz80Mjc0Il0sInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCBkZWZhdWx0IFwiI3ZlcnNpb24gMzAwIGVzXFxuI2RlZmluZSBTSEFERVJfTkFNRSBzY3JlZW4tZ3JpZC1sYXllci12ZXJ0ZXgtc2hhZGVyXFxuI2RlZmluZSBSQU5HRV9DT1VOVCA2XFxuXFxuaW4gdmVjMyBwb3NpdGlvbnM7XFxuaW4gdmVjMyBpbnN0YW5jZVBvc2l0aW9ucztcXG5pbiB2ZWM0IGluc3RhbmNlQ291bnRzO1xcbmluIHZlYzMgaW5zdGFuY2VQaWNraW5nQ29sb3JzO1xcblxcbmxheW91dChzdGQxNDApIHVuaWZvcm07XFxudW5pZm9ybSBmbG9hdCBvcGFjaXR5O1xcbnVuaWZvcm0gdmVjMyBjZWxsU2NhbGU7XFxudW5pZm9ybSB2ZWM0IG1pbkNvbG9yO1xcbnVuaWZvcm0gdmVjNCBtYXhDb2xvcjtcXG51bmlmb3JtIEFnZ3JlZ2F0aW9uRGF0YVxcbntcXG4gIHZlYzQgbWF4Q291bnQ7XFxufSBhZ2dyZWdhdGlvbkRhdGE7XFxuXFxudW5pZm9ybSB2ZWM0IGNvbG9yUmFuZ2VbUkFOR0VfQ09VTlRdO1xcbnVuaWZvcm0gdmVjMiBjb2xvckRvbWFpbjtcXG51bmlmb3JtIGJvb2wgc2hvdWxkVXNlTWluTWF4O1xcblxcbm91dCB2ZWM0IHZDb2xvcjtcXG5vdXQgZmxvYXQgdlNhbXBsZUNvdW50O1xcblxcbnZlYzQgcXVhbnRpemVTY2FsZSh2ZWMyIGRvbWFpbiwgdmVjNCByYW5nZVtSQU5HRV9DT1VOVF0sIGZsb2F0IHZhbHVlKSB7XFxuICB2ZWM0IG91dENvbG9yID0gdmVjNCgwLiwgMC4sIDAuLCAwLik7XFxuICBpZiAodmFsdWUgPj0gZG9tYWluLnggJiYgdmFsdWUgPD0gZG9tYWluLnkpIHtcXG4gICAgZmxvYXQgZG9tYWluUmFuZ2UgPSBkb21haW4ueSAtIGRvbWFpbi54O1xcbiAgICBpZiAoZG9tYWluUmFuZ2UgPD0gMC4pIHtcXG4gICAgICBvdXRDb2xvciA9IGNvbG9yUmFuZ2VbMF07XFxuICAgIH0gZWxzZSB7XFxuICAgICAgZmxvYXQgcmFuZ2VDb3VudCA9IGZsb2F0KFJBTkdFX0NPVU5UKTtcXG4gICAgICBmbG9hdCByYW5nZVN0ZXAgPSBkb21haW5SYW5nZSAvIHJhbmdlQ291bnQ7XFxuICAgICAgZmxvYXQgaWR4ID0gZmxvb3IoKHZhbHVlIC0gZG9tYWluLngpIC8gcmFuZ2VTdGVwKTtcXG4gICAgICBpZHggPSBjbGFtcChpZHgsIDAuLCByYW5nZUNvdW50IC0gMS4pO1xcbiAgICAgIGludCBpbnRJZHggPSBpbnQoaWR4KTtcXG4gICAgICBvdXRDb2xvciA9IGNvbG9yUmFuZ2VbaW50SWR4XTtcXG4gICAgfVxcbiAgfVxcbiAgb3V0Q29sb3IgPSBvdXRDb2xvciAvIDI1NS47XFxuICByZXR1cm4gb3V0Q29sb3I7XFxufVxcblxcbnZvaWQgbWFpbih2b2lkKSB7XFxuICB2U2FtcGxlQ291bnQgPSBpbnN0YW5jZUNvdW50cy5hO1xcblxcbiAgZmxvYXQgd2VpZ2h0ID0gaW5zdGFuY2VDb3VudHMuciA7XFxuICBmbG9hdCBtYXhXZWlnaHQgPSBhZ2dyZWdhdGlvbkRhdGEubWF4Q291bnQucjtcXG4gIGZsb2F0IHN0ZXAgPSB3ZWlnaHQgLyBtYXhXZWlnaHQ7XFxuICB2ZWM0IG1pbk1heENvbG9yID0gbWl4KG1pbkNvbG9yLCBtYXhDb2xvciwgc3RlcCkgLyAyNTUuO1xcblxcbiAgdmVjMiBkb21haW4gPSBjb2xvckRvbWFpbjtcXG4gIGZsb2F0IGRvbWFpbk1heFZhbGlkID0gZmxvYXQoY29sb3JEb21haW4ueSAhPSAwLik7XFxuICBkb21haW4ueSA9IG1peChtYXhXZWlnaHQsIGNvbG9yRG9tYWluLnksIGRvbWFpbk1heFZhbGlkKTtcXG4gIHZlYzQgcmFuZ2VDb2xvciA9IHF1YW50aXplU2NhbGUoZG9tYWluLCBjb2xvclJhbmdlLCB3ZWlnaHQpO1xcblxcbiAgZmxvYXQgcmFuZ2VNaW5NYXggPSBmbG9hdChzaG91bGRVc2VNaW5NYXgpO1xcbiAgdmVjNCBjb2xvciA9IG1peChyYW5nZUNvbG9yLCBtaW5NYXhDb2xvciwgcmFuZ2VNaW5NYXgpO1xcbiAgdkNvbG9yID0gdmVjNChjb2xvci5yZ2IsIGNvbG9yLmEgKiBvcGFjaXR5KTtcXG4gIHBpY2tpbmdfc2V0UGlja2luZ0NvbG9yKGluc3RhbmNlUGlja2luZ0NvbG9ycyk7XFxuXFxuICBnbF9Qb3NpdGlvbiA9IHZlYzQoaW5zdGFuY2VQb3NpdGlvbnMgKyBwb3NpdGlvbnMgKiBjZWxsU2NhbGUsIDEuKTtcXG59XFxuXCI7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1zY3JlZW4tZ3JpZC1sYXllci12ZXJ0ZXguZ2xzbC5qcy5tYXAiXSwibWFwcGluZ3MiOiJBQUFBO0FBQUE7QUFDQSIsInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/@deck.gl/aggregation-layers/dist/esm/screen-grid-layer/screen-grid-layer-vertex.glsl.js\n");

/***/ }),

/***/ "./node_modules/@deck.gl/aggregation-layers/dist/esm/screen-grid-layer/screen-grid-layer.js":
/*!**************************************************************************************************!*\
  !*** ./node_modules/@deck.gl/aggregation-layers/dist/esm/screen-grid-layer/screen-grid-layer.js ***!
  \**************************************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"default\", function() { return ScreenGridLayer; });\n/* harmony import */ var _babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/esm/classCallCheck */ \"./node_modules/@babel/runtime/helpers/esm/classCallCheck.js\");\n/* harmony import */ var _babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @babel/runtime/helpers/esm/createClass */ \"./node_modules/@babel/runtime/helpers/esm/createClass.js\");\n/* harmony import */ var _babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @babel/runtime/helpers/esm/possibleConstructorReturn */ \"./node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn.js\");\n/* harmony import */ var _babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @babel/runtime/helpers/esm/getPrototypeOf */ \"./node_modules/@babel/runtime/helpers/esm/getPrototypeOf.js\");\n/* harmony import */ var _babel_runtime_helpers_esm_get__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @babel/runtime/helpers/esm/get */ \"./node_modules/@babel/runtime/helpers/esm/get.js\");\n/* harmony import */ var _babel_runtime_helpers_esm_inherits__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @babel/runtime/helpers/esm/inherits */ \"./node_modules/@babel/runtime/helpers/esm/inherits.js\");\n/* harmony import */ var _deck_gl_core__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @deck.gl/core */ \"./node_modules/@deck.gl/core/dist/esm/index.js\");\n/* harmony import */ var _deck_gl_core__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @deck.gl/core */ \"./node_modules/@deck.gl/core/dist/esm/utils/iterable-utils.js\");\n/* harmony import */ var _deck_gl_core__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! @deck.gl/core */ \"./node_modules/@deck.gl/core/dist/esm/utils/log.js\");\n/* harmony import */ var _deck_gl_core__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! @deck.gl/core */ \"./node_modules/@deck.gl/core/dist/esm/viewports/web-mercator-viewport.js\");\n/* harmony import */ var _deck_gl_core__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! @deck.gl/core */ \"./node_modules/@deck.gl/core/dist/esm/lib/layer.js\");\n/* harmony import */ var _utils_color_utils__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ../utils/color-utils */ \"./node_modules/@deck.gl/aggregation-layers/dist/esm/utils/color-utils.js\");\n/* harmony import */ var _utils_gpu_grid_aggregation_gpu_grid_aggregator__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ../utils/gpu-grid-aggregation/gpu-grid-aggregator */ \"./node_modules/@deck.gl/aggregation-layers/dist/esm/utils/gpu-grid-aggregation/gpu-grid-aggregator.js\");\n/* harmony import */ var _utils_aggregation_operation_utils__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ../utils/aggregation-operation-utils */ \"./node_modules/@deck.gl/aggregation-layers/dist/esm/utils/aggregation-operation-utils.js\");\n/* harmony import */ var _luma_gl_core__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! @luma.gl/core */ \"./node_modules/@luma.gl/webgl/dist/esm/webgl-utils/webgl-checks.js\");\n/* harmony import */ var _luma_gl_core__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! @luma.gl/core */ \"./node_modules/@luma.gl/core/dist/esm/lib/model.js\");\n/* harmony import */ var _luma_gl_core__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! @luma.gl/core */ \"./node_modules/@luma.gl/core/dist/esm/geometry/geometry.js\");\n/* harmony import */ var _luma_gl_core__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! @luma.gl/core */ \"./node_modules/@luma.gl/webgl/dist/esm/classes/buffer.js\");\n/* harmony import */ var _screen_grid_layer_vertex_glsl__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(/*! ./screen-grid-layer-vertex.glsl */ \"./node_modules/@deck.gl/aggregation-layers/dist/esm/screen-grid-layer/screen-grid-layer-vertex.glsl.js\");\n/* harmony import */ var _screen_grid_layer_vertex_webgl1_glsl__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__(/*! ./screen-grid-layer-vertex-webgl1.glsl */ \"./node_modules/@deck.gl/aggregation-layers/dist/esm/screen-grid-layer/screen-grid-layer-vertex-webgl1.glsl.js\");\n/* harmony import */ var _screen_grid_layer_fragment_glsl__WEBPACK_IMPORTED_MODULE_20__ = __webpack_require__(/*! ./screen-grid-layer-fragment.glsl */ \"./node_modules/@deck.gl/aggregation-layers/dist/esm/screen-grid-layer/screen-grid-layer-fragment.glsl.js\");\n/* harmony import */ var _screen_grid_layer_fragment_webgl1_glsl__WEBPACK_IMPORTED_MODULE_21__ = __webpack_require__(/*! ./screen-grid-layer-fragment-webgl1.glsl */ \"./node_modules/@deck.gl/aggregation-layers/dist/esm/screen-grid-layer/screen-grid-layer-fragment-webgl1.glsl.js\");\n\n\n\n\n\n\n\nvar count = _deck_gl_core__WEBPACK_IMPORTED_MODULE_6__[\"experimental\"].count;\n\n\n\n\n\n\n\n\nvar DEFAULT_MINCOLOR = [0, 0, 0, 0];\nvar DEFAULT_MAXCOLOR = [0, 255, 0, 255];\nvar AGGREGATION_DATA_UBO_INDEX = 0;\nvar COLOR_PROPS = [\"minColor\", \"maxColor\", \"colorRange\", \"colorDomain\"];\nvar defaultProps = {\n  cellSizePixels: {\n    value: 100,\n    min: 1\n  },\n  cellMarginPixels: {\n    value: 2,\n    min: 0,\n    max: 5\n  },\n  colorDomain: null,\n  colorRange: _utils_color_utils__WEBPACK_IMPORTED_MODULE_11__[\"defaultColorRange\"],\n  getPosition: {\n    type: 'accessor',\n    value: function value(d) {\n      return d.position;\n    }\n  },\n  getWeight: {\n    type: 'accessor',\n    value: function value(d) {\n      return [1, 0, 0];\n    }\n  },\n  gpuAggregation: true,\n  aggregation: 'SUM'\n};\n\nvar ScreenGridLayer = function (_Layer) {\n  Object(_babel_runtime_helpers_esm_inherits__WEBPACK_IMPORTED_MODULE_5__[\"default\"])(ScreenGridLayer, _Layer);\n\n  function ScreenGridLayer() {\n    Object(_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(this, ScreenGridLayer);\n\n    return Object(_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_2__[\"default\"])(this, Object(_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_3__[\"default\"])(ScreenGridLayer).apply(this, arguments));\n  }\n\n  Object(_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_1__[\"default\"])(ScreenGridLayer, [{\n    key: \"getShaders\",\n    value: function getShaders() {\n      var shaders = Object(_luma_gl_core__WEBPACK_IMPORTED_MODULE_14__[\"isWebGL2\"])(this.context.gl) ? {\n        vs: _screen_grid_layer_vertex_glsl__WEBPACK_IMPORTED_MODULE_18__[\"default\"],\n        fs: _screen_grid_layer_fragment_glsl__WEBPACK_IMPORTED_MODULE_20__[\"default\"]\n      } : {\n        vs: _screen_grid_layer_vertex_webgl1_glsl__WEBPACK_IMPORTED_MODULE_19__[\"default\"],\n        fs: _screen_grid_layer_fragment_webgl1_glsl__WEBPACK_IMPORTED_MODULE_21__[\"default\"]\n      };\n      shaders.modules = ['picking'];\n      return shaders;\n    }\n  }, {\n    key: \"initializeState\",\n    value: function initializeState() {\n      var attributeManager = this.getAttributeManager();\n      var gl = this.context.gl;\n      attributeManager.addInstanced({\n        instancePositions: {\n          size: 3,\n          update: this.calculateInstancePositions\n        },\n        instanceCounts: {\n          size: 4,\n          transition: true,\n          accessor: ['getPosition', 'getWeight'],\n          update: this.calculateInstanceCounts,\n          noAlloc: true\n        }\n      });\n      var options = {\n        id: \"\".concat(this.id, \"-aggregator\"),\n        shaderCache: this.context.shaderCache\n      };\n\n      var maxBuffer = this._getMaxCountBuffer(gl);\n\n      var weights = {\n        color: {\n          size: 1,\n          operation: _utils_aggregation_operation_utils__WEBPACK_IMPORTED_MODULE_13__[\"AGGREGATION_OPERATION\"].SUM,\n          needMax: true,\n          maxBuffer: maxBuffer\n        }\n      };\n      this.setState({\n        model: this._getModel(gl),\n        gpuGridAggregator: new _utils_gpu_grid_aggregation_gpu_grid_aggregator__WEBPACK_IMPORTED_MODULE_12__[\"default\"](gl, options),\n        maxBuffer: maxBuffer,\n        weights: weights\n      });\n\n      this._setupUniformBuffer();\n    }\n  }, {\n    key: \"shouldUpdateState\",\n    value: function shouldUpdateState(_ref) {\n      var changeFlags = _ref.changeFlags;\n      return changeFlags.somethingChanged;\n    }\n  }, {\n    key: \"updateState\",\n    value: function updateState(opts) {\n      Object(_babel_runtime_helpers_esm_get__WEBPACK_IMPORTED_MODULE_4__[\"default\"])(Object(_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_3__[\"default\"])(ScreenGridLayer.prototype), \"updateState\", this).call(this, opts);\n\n      this._updateUniforms(opts);\n\n      if (opts.changeFlags.dataChanged) {\n        this._processData();\n      }\n\n      var changeFlags = this._getAggregationChangeFlags(opts);\n\n      if (changeFlags) {\n        this._updateAggregation(changeFlags);\n      }\n    }\n  }, {\n    key: \"finalizeState\",\n    value: function finalizeState() {\n      Object(_babel_runtime_helpers_esm_get__WEBPACK_IMPORTED_MODULE_4__[\"default\"])(Object(_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_3__[\"default\"])(ScreenGridLayer.prototype), \"finalizeState\", this).call(this);\n\n      var _this$state = this.state,\n          aggregationBuffer = _this$state.aggregationBuffer,\n          maxBuffer = _this$state.maxBuffer,\n          gpuGridAggregator = _this$state.gpuGridAggregator;\n      gpuGridAggregator.delete();\n\n      if (aggregationBuffer) {\n        aggregationBuffer.delete();\n      }\n\n      if (maxBuffer) {\n        maxBuffer.delete();\n      }\n    }\n  }, {\n    key: \"draw\",\n    value: function draw(_ref2) {\n      var uniforms = _ref2.uniforms;\n      var gl = this.context.gl;\n      var _this$props$parameter = this.props.parameters,\n          parameters = _this$props$parameter === void 0 ? {} : _this$props$parameter;\n      var minColor = this.props.minColor || DEFAULT_MINCOLOR;\n      var maxColor = this.props.maxColor || DEFAULT_MAXCOLOR;\n      var colorDomain = this.props.colorDomain || [1, 0];\n      var _this$state2 = this.state,\n          model = _this$state2.model,\n          maxBuffer = _this$state2.maxBuffer,\n          cellScale = _this$state2.cellScale,\n          shouldUseMinMax = _this$state2.shouldUseMinMax,\n          colorRange = _this$state2.colorRange,\n          maxWeight = _this$state2.maxWeight;\n      var layerUniforms = {\n        minColor: minColor,\n        maxColor: maxColor,\n        cellScale: cellScale,\n        colorRange: colorRange,\n        colorDomain: colorDomain,\n        shouldUseMinMax: shouldUseMinMax\n      };\n\n      if (Object(_luma_gl_core__WEBPACK_IMPORTED_MODULE_14__[\"isWebGL2\"])(gl)) {\n        maxBuffer.bind({\n          target: 35345\n        });\n      } else {\n        layerUniforms.maxWeight = maxWeight;\n      }\n\n      uniforms = Object.assign(layerUniforms, uniforms);\n      model.draw({\n        uniforms: uniforms,\n        parameters: Object.assign({\n          depthTest: false,\n          depthMask: false\n        }, parameters)\n      });\n\n      if (Object(_luma_gl_core__WEBPACK_IMPORTED_MODULE_14__[\"isWebGL2\"])(gl)) {\n        maxBuffer.unbind();\n      }\n    }\n  }, {\n    key: \"calculateInstancePositions\",\n    value: function calculateInstancePositions(attribute, _ref3) {\n      var numInstances = _ref3.numInstances;\n      var _this$context$viewpor = this.context.viewport,\n          width = _this$context$viewpor.width,\n          height = _this$context$viewpor.height;\n      var cellSizePixels = this.props.cellSizePixels;\n      var numCol = this.state.numCol;\n      var value = attribute.value,\n          size = attribute.size;\n\n      for (var i = 0; i < numInstances; i++) {\n        var x = i % numCol;\n        var y = Math.floor(i / numCol);\n        value[i * size + 0] = x * cellSizePixels / width * 2 - 1;\n        value[i * size + 1] = 1 - y * cellSizePixels / height * 2;\n        value[i * size + 2] = 0;\n      }\n    }\n  }, {\n    key: \"calculateInstanceCounts\",\n    value: function calculateInstanceCounts(attribute, _ref4) {\n      var numInstances = _ref4.numInstances;\n      var aggregationBuffer = this.state.aggregationBuffer;\n      attribute.update({\n        buffer: aggregationBuffer\n      });\n    }\n  }, {\n    key: \"getPickingInfo\",\n    value: function getPickingInfo(_ref5) {\n      var info = _ref5.info,\n          mode = _ref5.mode;\n      var index = info.index;\n\n      if (index >= 0) {\n        var gpuGridAggregator = this.state.gpuGridAggregator;\n        var aggregationResults = gpuGridAggregator.getData('color');\n        info.object = _utils_gpu_grid_aggregation_gpu_grid_aggregator__WEBPACK_IMPORTED_MODULE_12__[\"default\"].getAggregationData(Object.assign({\n          pixelIndex: index\n        }, aggregationResults));\n      }\n\n      return info;\n    }\n  }, {\n    key: \"_getAggregationChangeFlags\",\n    value: function _getAggregationChangeFlags(_ref6) {\n      var oldProps = _ref6.oldProps,\n          props = _ref6.props,\n          changeFlags = _ref6.changeFlags;\n      var cellSizeChanged = props.cellSizePixels !== oldProps.cellSizePixels || props.cellMarginPixels !== oldProps.cellMarginPixels;\n      var dataChanged = changeFlags.dataChanged || props.aggregation !== oldProps.aggregation;\n      var viewportChanged = changeFlags.viewportChanged;\n\n      if (cellSizeChanged || dataChanged || viewportChanged) {\n        return {\n          cellSizeChanged: cellSizeChanged,\n          dataChanged: dataChanged,\n          viewportChanged: viewportChanged\n        };\n      }\n\n      return null;\n    }\n  }, {\n    key: \"_getModel\",\n    value: function _getModel(gl) {\n      return new _luma_gl_core__WEBPACK_IMPORTED_MODULE_15__[\"default\"](gl, Object.assign({}, this.getShaders(), {\n        id: this.props.id,\n        geometry: new _luma_gl_core__WEBPACK_IMPORTED_MODULE_16__[\"default\"]({\n          drawMode: 6,\n          attributes: {\n            positions: new Float32Array([0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0])\n          }\n        }),\n        isInstanced: true,\n        shaderCache: this.context.shaderCache\n      }));\n    }\n  }, {\n    key: \"_getMaxCountBuffer\",\n    value: function _getMaxCountBuffer(gl) {\n      return new _luma_gl_core__WEBPACK_IMPORTED_MODULE_17__[\"default\"](gl, {\n        byteLength: 4 * 4,\n        index: AGGREGATION_DATA_UBO_INDEX,\n        accessor: {\n          size: 4\n        }\n      });\n    }\n  }, {\n    key: \"_processData\",\n    value: function _processData() {\n      var _this$props = this.props,\n          data = _this$props.data,\n          getPosition = _this$props.getPosition,\n          getWeight = _this$props.getWeight;\n      var pointCount = count(data);\n      var positions = new Float64Array(pointCount * 2);\n      var colorWeights = new Float32Array(pointCount * 3);\n      var weights = this.state.weights;\n\n      var _createIterable = Object(_deck_gl_core__WEBPACK_IMPORTED_MODULE_7__[\"createIterable\"])(data),\n          iterable = _createIterable.iterable,\n          objectInfo = _createIterable.objectInfo;\n\n      var _iteratorNormalCompletion = true;\n      var _didIteratorError = false;\n      var _iteratorError = undefined;\n\n      try {\n        for (var _iterator = iterable[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n          var object = _step.value;\n          objectInfo.index++;\n          var position = getPosition(object, objectInfo);\n          var weight = getWeight(object, objectInfo);\n          var index = objectInfo.index;\n          positions[index * 2] = position[0];\n          positions[index * 2 + 1] = position[1];\n\n          if (Array.isArray(weight)) {\n            colorWeights[index * 3] = weight[0];\n            colorWeights[index * 3 + 1] = weight[1];\n            colorWeights[index * 3 + 2] = weight[2];\n          } else {\n            colorWeights[index * 3] = weight;\n          }\n        }\n      } catch (err) {\n        _didIteratorError = true;\n        _iteratorError = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion && _iterator.return != null) {\n            _iterator.return();\n          }\n        } finally {\n          if (_didIteratorError) {\n            throw _iteratorError;\n          }\n        }\n      }\n\n      weights.color.values = colorWeights;\n      this.setState({\n        positions: positions\n      });\n    }\n  }, {\n    key: \"_setupUniformBuffer\",\n    value: function _setupUniformBuffer() {\n      var gl = this.context.gl;\n\n      if (!Object(_luma_gl_core__WEBPACK_IMPORTED_MODULE_14__[\"isWebGL2\"])(gl)) {\n        return;\n      }\n\n      var programHandle = this.state.model.program.handle;\n      var uniformBlockIndex = gl.getUniformBlockIndex(programHandle, 'AggregationData');\n      gl.uniformBlockBinding(programHandle, uniformBlockIndex, AGGREGATION_DATA_UBO_INDEX);\n    }\n  }, {\n    key: \"_shouldUseMinMax\",\n    value: function _shouldUseMinMax() {\n      var _this$props2 = this.props,\n          minColor = _this$props2.minColor,\n          maxColor = _this$props2.maxColor,\n          colorDomain = _this$props2.colorDomain,\n          colorRange = _this$props2.colorRange;\n\n      if (minColor || maxColor) {\n        _deck_gl_core__WEBPACK_IMPORTED_MODULE_8__[\"default\"].deprecated('ScreenGridLayer props: minColor and maxColor', 'colorRange, colorDomain')();\n        return true;\n      }\n\n      if (colorDomain || colorRange) {\n        return false;\n      }\n\n      return true;\n    }\n  }, {\n    key: \"_updateAggregation\",\n    value: function _updateAggregation(changeFlags) {\n      var attributeManager = this.getAttributeManager();\n\n      if (changeFlags.cellSizeChanged || changeFlags.viewportChanged) {\n        this._updateGridParams();\n\n        attributeManager.invalidateAll();\n      }\n\n      var _this$props3 = this.props,\n          cellSizePixels = _this$props3.cellSizePixels,\n          gpuAggregation = _this$props3.gpuAggregation;\n      var _this$state3 = this.state,\n          positions = _this$state3.positions,\n          weights = _this$state3.weights;\n      var viewport = this.context.viewport;\n      weights.color.operation = _utils_aggregation_operation_utils__WEBPACK_IMPORTED_MODULE_13__[\"AGGREGATION_OPERATION\"][this.props.aggregation.toUpperCase()] || _utils_aggregation_operation_utils__WEBPACK_IMPORTED_MODULE_13__[\"AGGREGATION_OPERATION\"].SUM;\n      var projectPoints = false;\n      var gridTransformMatrix = null;\n\n      if (this.context.viewport instanceof _deck_gl_core__WEBPACK_IMPORTED_MODULE_9__[\"default\"]) {\n        projectPoints = true;\n      } else {\n        projectPoints = false;\n        gridTransformMatrix = viewport.pixelProjectionMatrix;\n      }\n\n      var results = this.state.gpuGridAggregator.run({\n        positions: positions,\n        weights: weights,\n        cellSize: [cellSizePixels, cellSizePixels],\n        viewport: viewport,\n        changeFlags: changeFlags,\n        useGPU: gpuAggregation,\n        projectPoints: projectPoints,\n        gridTransformMatrix: gridTransformMatrix\n      });\n      var maxWeight = results.color.maxData && Number.isFinite(results.color.maxData[0]) ? results.color.maxData[0] : 0;\n      this.setState({\n        maxWeight: maxWeight\n      });\n      attributeManager.invalidate('instanceCounts');\n    }\n  }, {\n    key: \"_updateUniforms\",\n    value: function _updateUniforms(_ref7) {\n      var oldProps = _ref7.oldProps,\n          props = _ref7.props,\n          changeFlags = _ref7.changeFlags;\n      var newState = {};\n\n      if (COLOR_PROPS.some(function (key) {\n        return oldProps[key] !== props[key];\n      })) {\n        newState.shouldUseMinMax = this._shouldUseMinMax();\n      }\n\n      if (oldProps.colorRange !== props.colorRange) {\n        newState.colorRange = Object(_utils_color_utils__WEBPACK_IMPORTED_MODULE_11__[\"colorRangeToFlatArray\"])(props.colorRange, Float32Array, 255);\n      }\n\n      if (oldProps.cellMarginPixels !== props.cellMarginPixels || oldProps.cellSizePixels !== props.cellSizePixels || changeFlags.viewportChanged) {\n        var _this$context$viewpor2 = this.context.viewport,\n            width = _this$context$viewpor2.width,\n            height = _this$context$viewpor2.height;\n        var _this$props4 = this.props,\n            cellSizePixels = _this$props4.cellSizePixels,\n            cellMarginPixels = _this$props4.cellMarginPixels;\n        var margin = cellSizePixels > cellMarginPixels ? cellMarginPixels : 0;\n        newState.cellScale = new Float32Array([(cellSizePixels - margin) / width * 2, -(cellSizePixels - margin) / height * 2, 1]);\n      }\n\n      this.setState(newState);\n    }\n  }, {\n    key: \"_updateGridParams\",\n    value: function _updateGridParams() {\n      var _this$context$viewpor3 = this.context.viewport,\n          width = _this$context$viewpor3.width,\n          height = _this$context$viewpor3.height;\n      var cellSizePixels = this.props.cellSizePixels;\n      var gl = this.context.gl;\n      var numCol = Math.ceil(width / cellSizePixels);\n      var numRow = Math.ceil(height / cellSizePixels);\n      var numInstances = numCol * numRow;\n      var dataBytes = numInstances * 4 * 4;\n      var aggregationBuffer = this.state.aggregationBuffer;\n\n      if (aggregationBuffer) {\n        aggregationBuffer.delete();\n      }\n\n      aggregationBuffer = new _luma_gl_core__WEBPACK_IMPORTED_MODULE_17__[\"default\"](gl, {\n        byteLength: dataBytes,\n        accessor: {\n          size: 4,\n          type: 5126,\n          divisor: 1\n        }\n      });\n      this.state.weights.color.aggregationBuffer = aggregationBuffer;\n      this.setState({\n        numCol: numCol,\n        numRow: numRow,\n        numInstances: numInstances,\n        aggregationBuffer: aggregationBuffer\n      });\n    }\n  }]);\n\n  return ScreenGridLayer;\n}(_deck_gl_core__WEBPACK_IMPORTED_MODULE_10__[\"default\"]);\n\n\nScreenGridLayer.layerName = 'ScreenGridLayer';\nScreenGridLayer.defaultProps = defaultProps;\n//# sourceMappingURL=screen-grid-layer.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/@deck.gl/aggregation-layers/dist/esm/screen-grid-layer/screen-grid-layer.js\n");

/***/ }),

/***/ "./node_modules/@superset-ui/legacy-preset-chart-deckgl/esm/layers/Screengrid/Screengrid.js":
/*!**************************************************************************************************!*\
  !*** ./node_modules/@superset-ui/legacy-preset-chart-deckgl/esm/layers/Screengrid/Screengrid.js ***!
  \**************************************************************************************************/
/*! exports provided: getLayer, default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"getLayer\", function() { return getLayer; });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"./node_modules/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var prop_types__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! prop-types */ \"./node_modules/prop-types/index.js\");\n/* harmony import */ var prop_types__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(prop_types__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var deck_gl__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! deck.gl */ \"./node_modules/@deck.gl/aggregation-layers/dist/esm/screen-grid-layer/screen-grid-layer.js\");\n/* harmony import */ var _superset_ui_translation__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @superset-ui/translation */ \"./node_modules/@superset-ui/translation/esm/index.js\");\n/* harmony import */ var _superset_ui_translation__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(_superset_ui_translation__WEBPACK_IMPORTED_MODULE_3__);\n/* harmony import */ var _AnimatableDeckGLContainer__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../AnimatableDeckGLContainer */ \"./node_modules/@superset-ui/legacy-preset-chart-deckgl/esm/AnimatableDeckGLContainer.js\");\n/* harmony import */ var _utils_time__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../utils/time */ \"./node_modules/@superset-ui/legacy-preset-chart-deckgl/esm/utils/time.js\");\n/* harmony import */ var _utils_sandbox__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../utils/sandbox */ \"./node_modules/@superset-ui/legacy-preset-chart-deckgl/esm/utils/sandbox.js\");\n/* harmony import */ var _common__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../common */ \"./node_modules/@superset-ui/legacy-preset-chart-deckgl/esm/layers/common.js\");\n/* harmony import */ var _TooltipRow__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../../TooltipRow */ \"./node_modules/@superset-ui/legacy-preset-chart-deckgl/esm/TooltipRow.js\");\n/* harmony import */ var _utils_fitViewport__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../../utils/fitViewport */ \"./node_modules/@superset-ui/legacy-preset-chart-deckgl/esm/utils/fitViewport.js\");\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\n/* eslint-disable react/sort-prop-types */\n\n/* eslint-disable react/jsx-handler-names */\n\n/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\n/* eslint no-underscore-dangle: [\"error\", { \"allow\": [\"\", \"__timestamp\"] }] */\n\n\n\n\n\n\n\n\n // eslint-disable-next-line import/extensions\n\n\n\nfunction getPoints(data) {\n  return data.map(d => d.position);\n}\n\nfunction setTooltipContent(o) {\n  return react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(\"div\", {\n    className: \"deckgl-tooltip\"\n  }, react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(_TooltipRow__WEBPACK_IMPORTED_MODULE_8__[\"default\"], {\n    label: Object(_superset_ui_translation__WEBPACK_IMPORTED_MODULE_3__[\"t\"])('Longitude and Latitude') + \": \",\n    value: o.coordinate[0] + \", \" + o.coordinate[1]\n  }), react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(_TooltipRow__WEBPACK_IMPORTED_MODULE_8__[\"default\"], {\n    label: Object(_superset_ui_translation__WEBPACK_IMPORTED_MODULE_3__[\"t\"])('Weight') + \": \",\n    value: \"\" + o.object.weight\n  }));\n}\n\nfunction getLayer(formData, payload, onAddFilter, setTooltip, selected, onSelect, filters) {\n  const fd = formData;\n  const c = fd.color_picker;\n  let data = payload.data.features.map(d => _extends({}, d, {\n    color: [c.r, c.g, c.b, 255 * c.a]\n  }));\n\n  if (fd.js_data_mutator) {\n    // Applying user defined data mutator if defined\n    const jsFnMutator = Object(_utils_sandbox__WEBPACK_IMPORTED_MODULE_6__[\"default\"])(fd.js_data_mutator);\n    data = jsFnMutator(data);\n  }\n\n  if (filters != null) {\n    filters.forEach(f => {\n      data = data.filter(x => f(x));\n    });\n  } // Passing a layer creator function instead of a layer since the\n  // layer needs to be regenerated at each render\n\n\n  return new deck_gl__WEBPACK_IMPORTED_MODULE_2__[\"default\"](_extends({\n    id: \"screengrid-layer-\" + fd.slice_id,\n    data,\n    pickable: true,\n    cellSizePixels: fd.grid_size,\n    minColor: [c.r, c.g, c.b, 0],\n    maxColor: [c.r, c.g, c.b, 255 * c.a],\n    outline: false,\n    getWeight: d => d.weight || 0\n  }, Object(_common__WEBPACK_IMPORTED_MODULE_7__[\"commonLayerProps\"])(fd, setTooltip, setTooltipContent)));\n}\nconst propTypes = {\n  formData: prop_types__WEBPACK_IMPORTED_MODULE_1___default.a.object.isRequired,\n  payload: prop_types__WEBPACK_IMPORTED_MODULE_1___default.a.object.isRequired,\n  setControlValue: prop_types__WEBPACK_IMPORTED_MODULE_1___default.a.func.isRequired,\n  viewport: prop_types__WEBPACK_IMPORTED_MODULE_1___default.a.object.isRequired,\n  onAddFilter: prop_types__WEBPACK_IMPORTED_MODULE_1___default.a.func,\n  width: prop_types__WEBPACK_IMPORTED_MODULE_1___default.a.number.isRequired,\n  height: prop_types__WEBPACK_IMPORTED_MODULE_1___default.a.number.isRequired\n};\nconst defaultProps = {\n  onAddFilter() {}\n\n};\n\nclass DeckGLScreenGrid extends react__WEBPACK_IMPORTED_MODULE_0___default.a.PureComponent {\n  constructor(props) {\n    super(props);\n\n    _defineProperty(this, \"containerRef\", react__WEBPACK_IMPORTED_MODULE_0___default.a.createRef());\n\n    _defineProperty(this, \"setTooltip\", tooltip => {\n      const {\n        current\n      } = this.containerRef;\n\n      if (current) {\n        current.setTooltip(tooltip);\n      }\n    });\n\n    this.state = DeckGLScreenGrid.getDerivedStateFromProps(props);\n    this.getLayers = this.getLayers.bind(this);\n    this.onValuesChange = this.onValuesChange.bind(this);\n  }\n\n  static getDerivedStateFromProps(props, state) {\n    // the state is computed only from the payload; if it hasn't changed, do\n    // not recompute state since this would reset selections and/or the play\n    // slider position due to changes in form controls\n    if (state && props.payload.form_data === state.formData) {\n      return null;\n    }\n\n    const features = props.payload.data.features || [];\n    const timestamps = features.map(f => f.__timestamp); // the granularity has to be read from the payload form_data, not the\n    // props formData which comes from the instantaneous controls state\n\n    const granularity = props.payload.form_data.time_grain_sqla || props.payload.form_data.granularity || 'P1D';\n    const {\n      start,\n      end,\n      getStep,\n      values,\n      disabled\n    } = Object(_utils_time__WEBPACK_IMPORTED_MODULE_5__[\"getPlaySliderParams\"])(timestamps, granularity);\n    const {\n      width,\n      height,\n      formData\n    } = props;\n    let {\n      viewport\n    } = props;\n\n    if (formData.autozoom) {\n      viewport = Object(_utils_fitViewport__WEBPACK_IMPORTED_MODULE_9__[\"default\"])(viewport, {\n        width,\n        height,\n        points: getPoints(features)\n      });\n    }\n\n    return {\n      start,\n      end,\n      getStep,\n      values,\n      disabled,\n      viewport,\n      selected: [],\n      lastClick: 0,\n      formData: props.payload.form_data\n    };\n  }\n\n  onValuesChange(values) {\n    this.setState({\n      // eslint-disable-next-line react/no-access-state-in-setstate\n      values: Array.isArray(values) ? values : [values, values + this.state.getStep(values)]\n    });\n  }\n\n  getLayers(values) {\n    const filters = []; // time filter\n\n    if (values[0] === values[1] || values[1] === this.end) {\n      filters.push(d => d.__timestamp >= values[0] && d.__timestamp <= values[1]);\n    } else {\n      filters.push(d => d.__timestamp >= values[0] && d.__timestamp < values[1]);\n    }\n\n    const layer = getLayer(this.props.formData, this.props.payload, this.props.onAddFilter, this.setTooltip, filters);\n    return [layer];\n  }\n\n  render() {\n    const {\n      formData,\n      payload,\n      setControlValue\n    } = this.props;\n    return react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(\"div\", null, react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(_AnimatableDeckGLContainer__WEBPACK_IMPORTED_MODULE_4__[\"default\"], {\n      ref: this.containerRef,\n      aggregation: true,\n      getLayers: this.getLayers,\n      start: this.state.start,\n      end: this.state.end,\n      getStep: this.state.getStep,\n      values: this.state.values,\n      disabled: this.state.disabled,\n      viewport: this.state.viewport,\n      width: this.props.width,\n      height: this.props.height,\n      mapboxApiAccessToken: payload.data.mapboxApiKey,\n      mapStyle: formData.mapbox_style,\n      setControlValue: setControlValue,\n      onValuesChange: this.onValuesChange,\n      onViewportChange: this.onViewportChange\n    }));\n  }\n\n}\n\nDeckGLScreenGrid.propTypes = propTypes;\nDeckGLScreenGrid.defaultProps = defaultProps;\n/* harmony default export */ __webpack_exports__[\"default\"] = (DeckGLScreenGrid);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/@superset-ui/legacy-preset-chart-deckgl/esm/layers/Screengrid/Screengrid.js\n");

/***/ })

}]);