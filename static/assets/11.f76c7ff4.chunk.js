(window["webpackJsonp"] = window["webpackJsonp"] || []).push([[11],{

/***/ "./node_modules/@deck.gl/aggregation-layers/dist/esm/utils/aggregation-operation-utils.js":
/*!************************************************************************************************!*\
  !*** ./node_modules/@deck.gl/aggregation-layers/dist/esm/utils/aggregation-operation-utils.js ***!
  \************************************************************************************************/
/*! exports provided: AGGREGATION_OPERATION, getMean, getSum, getMax, getMin, getValueFunc */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"AGGREGATION_OPERATION\", function() { return AGGREGATION_OPERATION; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"getMean\", function() { return getMean; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"getSum\", function() { return getSum; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"getMax\", function() { return getMax; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"getMin\", function() { return getMin; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"getValueFunc\", function() { return getValueFunc; });\nvar AGGREGATION_OPERATION = {\n  SUM: 1,\n  MEAN: 2,\n  MIN: 3,\n  MAX: 4\n};\n\nfunction sumReducer(accu, cur) {\n  return accu + cur;\n}\n\nfunction maxReducer(accu, cur) {\n  return cur > accu ? cur : accu;\n}\n\nfunction minReducer(accu, cur) {\n  return cur < accu ? cur : accu;\n}\n\nfunction getMean(pts, accessor) {\n  var filtered = pts.map(accessor).filter(Number.isFinite);\n  return filtered.length ? filtered.reduce(sumReducer, 0) / filtered.length : null;\n}\nfunction getSum(pts, accessor) {\n  var filtered = pts.map(accessor).filter(Number.isFinite);\n  return filtered.length ? filtered.reduce(sumReducer, 0) : null;\n}\nfunction getMax(pts, accessor) {\n  var filtered = pts.map(accessor).filter(Number.isFinite);\n  return filtered.length ? filtered.reduce(maxReducer, -Infinity) : null;\n}\nfunction getMin(pts, accessor) {\n  var filtered = pts.map(accessor).filter(Number.isFinite);\n  return filtered.length ? filtered.reduce(minReducer, Infinity) : null;\n}\nfunction getValueFunc(aggregation, accessor) {\n  var op = AGGREGATION_OPERATION[aggregation.toUpperCase()] || AGGREGATION_OPERATION.SUM;\n\n  switch (op) {\n    case AGGREGATION_OPERATION.MIN:\n      return function (pts) {\n        return getMin(pts, accessor);\n      };\n\n    case AGGREGATION_OPERATION.SUM:\n      return function (pts) {\n        return getSum(pts, accessor);\n      };\n\n    case AGGREGATION_OPERATION.MEAN:\n      return function (pts) {\n        return getMean(pts, accessor);\n      };\n\n    case AGGREGATION_OPERATION.MAX:\n      return function (pts) {\n        return getMax(pts, accessor);\n      };\n\n    default:\n      return null;\n  }\n}\n//# sourceMappingURL=aggregation-operation-utils.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQGRlY2suZ2wvYWdncmVnYXRpb24tbGF5ZXJzL2Rpc3QvZXNtL3V0aWxzL2FnZ3JlZ2F0aW9uLW9wZXJhdGlvbi11dGlscy5qcy5qcyIsInNvdXJjZXMiOlsid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9AZGVjay5nbC9hZ2dyZWdhdGlvbi1sYXllcnMvZGlzdC9lc20vdXRpbHMvYWdncmVnYXRpb24tb3BlcmF0aW9uLXV0aWxzLmpzPzc5MmYiXSwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IHZhciBBR0dSRUdBVElPTl9PUEVSQVRJT04gPSB7XG4gIFNVTTogMSxcbiAgTUVBTjogMixcbiAgTUlOOiAzLFxuICBNQVg6IDRcbn07XG5cbmZ1bmN0aW9uIHN1bVJlZHVjZXIoYWNjdSwgY3VyKSB7XG4gIHJldHVybiBhY2N1ICsgY3VyO1xufVxuXG5mdW5jdGlvbiBtYXhSZWR1Y2VyKGFjY3UsIGN1cikge1xuICByZXR1cm4gY3VyID4gYWNjdSA/IGN1ciA6IGFjY3U7XG59XG5cbmZ1bmN0aW9uIG1pblJlZHVjZXIoYWNjdSwgY3VyKSB7XG4gIHJldHVybiBjdXIgPCBhY2N1ID8gY3VyIDogYWNjdTtcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIGdldE1lYW4ocHRzLCBhY2Nlc3Nvcikge1xuICB2YXIgZmlsdGVyZWQgPSBwdHMubWFwKGFjY2Vzc29yKS5maWx0ZXIoTnVtYmVyLmlzRmluaXRlKTtcbiAgcmV0dXJuIGZpbHRlcmVkLmxlbmd0aCA/IGZpbHRlcmVkLnJlZHVjZShzdW1SZWR1Y2VyLCAwKSAvIGZpbHRlcmVkLmxlbmd0aCA6IG51bGw7XG59XG5leHBvcnQgZnVuY3Rpb24gZ2V0U3VtKHB0cywgYWNjZXNzb3IpIHtcbiAgdmFyIGZpbHRlcmVkID0gcHRzLm1hcChhY2Nlc3NvcikuZmlsdGVyKE51bWJlci5pc0Zpbml0ZSk7XG4gIHJldHVybiBmaWx0ZXJlZC5sZW5ndGggPyBmaWx0ZXJlZC5yZWR1Y2Uoc3VtUmVkdWNlciwgMCkgOiBudWxsO1xufVxuZXhwb3J0IGZ1bmN0aW9uIGdldE1heChwdHMsIGFjY2Vzc29yKSB7XG4gIHZhciBmaWx0ZXJlZCA9IHB0cy5tYXAoYWNjZXNzb3IpLmZpbHRlcihOdW1iZXIuaXNGaW5pdGUpO1xuICByZXR1cm4gZmlsdGVyZWQubGVuZ3RoID8gZmlsdGVyZWQucmVkdWNlKG1heFJlZHVjZXIsIC1JbmZpbml0eSkgOiBudWxsO1xufVxuZXhwb3J0IGZ1bmN0aW9uIGdldE1pbihwdHMsIGFjY2Vzc29yKSB7XG4gIHZhciBmaWx0ZXJlZCA9IHB0cy5tYXAoYWNjZXNzb3IpLmZpbHRlcihOdW1iZXIuaXNGaW5pdGUpO1xuICByZXR1cm4gZmlsdGVyZWQubGVuZ3RoID8gZmlsdGVyZWQucmVkdWNlKG1pblJlZHVjZXIsIEluZmluaXR5KSA6IG51bGw7XG59XG5leHBvcnQgZnVuY3Rpb24gZ2V0VmFsdWVGdW5jKGFnZ3JlZ2F0aW9uLCBhY2Nlc3Nvcikge1xuICB2YXIgb3AgPSBBR0dSRUdBVElPTl9PUEVSQVRJT05bYWdncmVnYXRpb24udG9VcHBlckNhc2UoKV0gfHwgQUdHUkVHQVRJT05fT1BFUkFUSU9OLlNVTTtcblxuICBzd2l0Y2ggKG9wKSB7XG4gICAgY2FzZSBBR0dSRUdBVElPTl9PUEVSQVRJT04uTUlOOlxuICAgICAgcmV0dXJuIGZ1bmN0aW9uIChwdHMpIHtcbiAgICAgICAgcmV0dXJuIGdldE1pbihwdHMsIGFjY2Vzc29yKTtcbiAgICAgIH07XG5cbiAgICBjYXNlIEFHR1JFR0FUSU9OX09QRVJBVElPTi5TVU06XG4gICAgICByZXR1cm4gZnVuY3Rpb24gKHB0cykge1xuICAgICAgICByZXR1cm4gZ2V0U3VtKHB0cywgYWNjZXNzb3IpO1xuICAgICAgfTtcblxuICAgIGNhc2UgQUdHUkVHQVRJT05fT1BFUkFUSU9OLk1FQU46XG4gICAgICByZXR1cm4gZnVuY3Rpb24gKHB0cykge1xuICAgICAgICByZXR1cm4gZ2V0TWVhbihwdHMsIGFjY2Vzc29yKTtcbiAgICAgIH07XG5cbiAgICBjYXNlIEFHR1JFR0FUSU9OX09QRVJBVElPTi5NQVg6XG4gICAgICByZXR1cm4gZnVuY3Rpb24gKHB0cykge1xuICAgICAgICByZXR1cm4gZ2V0TWF4KHB0cywgYWNjZXNzb3IpO1xuICAgICAgfTtcblxuICAgIGRlZmF1bHQ6XG4gICAgICByZXR1cm4gbnVsbDtcbiAgfVxufVxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9YWdncmVnYXRpb24tb3BlcmF0aW9uLXV0aWxzLmpzLm1hcCJdLCJtYXBwaW5ncyI6IkFBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/@deck.gl/aggregation-layers/dist/esm/utils/aggregation-operation-utils.js\n");

/***/ }),

/***/ "./node_modules/@deck.gl/aggregation-layers/dist/esm/utils/color-utils.js":
/*!********************************************************************************!*\
  !*** ./node_modules/@deck.gl/aggregation-layers/dist/esm/utils/color-utils.js ***!
  \********************************************************************************/
/*! exports provided: defaultColorRange, colorRangeToFlatArray */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"defaultColorRange\", function() { return defaultColorRange; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"colorRangeToFlatArray\", function() { return colorRangeToFlatArray; });\nvar defaultColorRange = [[255, 255, 178], [254, 217, 118], [254, 178, 76], [253, 141, 60], [240, 59, 32], [189, 0, 38]];\nfunction colorRangeToFlatArray(colorRange, ArrayType, defaultValue) {\n  var flatArray = new ArrayType(colorRange.length * 4);\n  colorRange.forEach(function (color, index) {\n    var flatArrayIdnex = index * 4;\n    flatArray[flatArrayIdnex] = color[0];\n    flatArray[flatArrayIdnex + 1] = color[1];\n    flatArray[flatArrayIdnex + 2] = color[2];\n    flatArray[flatArrayIdnex + 3] = Number.isFinite(color[3]) ? color[3] : defaultValue;\n  });\n  return flatArray;\n}\n//# sourceMappingURL=color-utils.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQGRlY2suZ2wvYWdncmVnYXRpb24tbGF5ZXJzL2Rpc3QvZXNtL3V0aWxzL2NvbG9yLXV0aWxzLmpzLmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL0BkZWNrLmdsL2FnZ3JlZ2F0aW9uLWxheWVycy9kaXN0L2VzbS91dGlscy9jb2xvci11dGlscy5qcz8yMmQwIl0sInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCB2YXIgZGVmYXVsdENvbG9yUmFuZ2UgPSBbWzI1NSwgMjU1LCAxNzhdLCBbMjU0LCAyMTcsIDExOF0sIFsyNTQsIDE3OCwgNzZdLCBbMjUzLCAxNDEsIDYwXSwgWzI0MCwgNTksIDMyXSwgWzE4OSwgMCwgMzhdXTtcbmV4cG9ydCBmdW5jdGlvbiBjb2xvclJhbmdlVG9GbGF0QXJyYXkoY29sb3JSYW5nZSwgQXJyYXlUeXBlLCBkZWZhdWx0VmFsdWUpIHtcbiAgdmFyIGZsYXRBcnJheSA9IG5ldyBBcnJheVR5cGUoY29sb3JSYW5nZS5sZW5ndGggKiA0KTtcbiAgY29sb3JSYW5nZS5mb3JFYWNoKGZ1bmN0aW9uIChjb2xvciwgaW5kZXgpIHtcbiAgICB2YXIgZmxhdEFycmF5SWRuZXggPSBpbmRleCAqIDQ7XG4gICAgZmxhdEFycmF5W2ZsYXRBcnJheUlkbmV4XSA9IGNvbG9yWzBdO1xuICAgIGZsYXRBcnJheVtmbGF0QXJyYXlJZG5leCArIDFdID0gY29sb3JbMV07XG4gICAgZmxhdEFycmF5W2ZsYXRBcnJheUlkbmV4ICsgMl0gPSBjb2xvclsyXTtcbiAgICBmbGF0QXJyYXlbZmxhdEFycmF5SWRuZXggKyAzXSA9IE51bWJlci5pc0Zpbml0ZShjb2xvclszXSkgPyBjb2xvclszXSA6IGRlZmF1bHRWYWx1ZTtcbiAgfSk7XG4gIHJldHVybiBmbGF0QXJyYXk7XG59XG4vLyMgc291cmNlTWFwcGluZ1VSTD1jb2xvci11dGlscy5qcy5tYXAiXSwibWFwcGluZ3MiOiJBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/@deck.gl/aggregation-layers/dist/esm/utils/color-utils.js\n");

/***/ }),

/***/ "./node_modules/@deck.gl/aggregation-layers/dist/esm/utils/gpu-grid-aggregation/aggregate-all-fs.glsl.js":
/*!***************************************************************************************************************!*\
  !*** ./node_modules/@deck.gl/aggregation-layers/dist/esm/utils/gpu-grid-aggregation/aggregate-all-fs.glsl.js ***!
  \***************************************************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony default export */ __webpack_exports__[\"default\"] = (\"#version 300 es\\n#define SHADER_NAME gpu-aggregation-all-fs\\n\\nprecision highp float;\\n\\nin vec2 vTextureCoord;\\nuniform sampler2D uSampler;\\nuniform bool combineMaxMin;\\nout vec4 fragColor;\\nvoid main(void) {\\n  vec4 textureColor = texture(uSampler, vec2(vTextureCoord.s, vTextureCoord.t));\\n  if (textureColor.a == 0.) {\\n    discard;\\n  }\\n  fragColor.rgb = textureColor.rgb;\\n  fragColor.a = combineMaxMin ? textureColor.r : textureColor.a;\\n}\\n\");\n//# sourceMappingURL=aggregate-all-fs.glsl.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQGRlY2suZ2wvYWdncmVnYXRpb24tbGF5ZXJzL2Rpc3QvZXNtL3V0aWxzL2dwdS1ncmlkLWFnZ3JlZ2F0aW9uL2FnZ3JlZ2F0ZS1hbGwtZnMuZ2xzbC5qcy5qcyIsInNvdXJjZXMiOlsid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9AZGVjay5nbC9hZ2dyZWdhdGlvbi1sYXllcnMvZGlzdC9lc20vdXRpbHMvZ3B1LWdyaWQtYWdncmVnYXRpb24vYWdncmVnYXRlLWFsbC1mcy5nbHNsLmpzP2VkM2YiXSwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IGRlZmF1bHQgXCIjdmVyc2lvbiAzMDAgZXNcXG4jZGVmaW5lIFNIQURFUl9OQU1FIGdwdS1hZ2dyZWdhdGlvbi1hbGwtZnNcXG5cXG5wcmVjaXNpb24gaGlnaHAgZmxvYXQ7XFxuXFxuaW4gdmVjMiB2VGV4dHVyZUNvb3JkO1xcbnVuaWZvcm0gc2FtcGxlcjJEIHVTYW1wbGVyO1xcbnVuaWZvcm0gYm9vbCBjb21iaW5lTWF4TWluO1xcbm91dCB2ZWM0IGZyYWdDb2xvcjtcXG52b2lkIG1haW4odm9pZCkge1xcbiAgdmVjNCB0ZXh0dXJlQ29sb3IgPSB0ZXh0dXJlKHVTYW1wbGVyLCB2ZWMyKHZUZXh0dXJlQ29vcmQucywgdlRleHR1cmVDb29yZC50KSk7XFxuICBpZiAodGV4dHVyZUNvbG9yLmEgPT0gMC4pIHtcXG4gICAgZGlzY2FyZDtcXG4gIH1cXG4gIGZyYWdDb2xvci5yZ2IgPSB0ZXh0dXJlQ29sb3IucmdiO1xcbiAgZnJhZ0NvbG9yLmEgPSBjb21iaW5lTWF4TWluID8gdGV4dHVyZUNvbG9yLnIgOiB0ZXh0dXJlQ29sb3IuYTtcXG59XFxuXCI7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1hZ2dyZWdhdGUtYWxsLWZzLmdsc2wuanMubWFwIl0sIm1hcHBpbmdzIjoiQUFBQTtBQUFBO0FBQ0EiLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/@deck.gl/aggregation-layers/dist/esm/utils/gpu-grid-aggregation/aggregate-all-fs.glsl.js\n");

/***/ }),

/***/ "./node_modules/@deck.gl/aggregation-layers/dist/esm/utils/gpu-grid-aggregation/aggregate-all-vs-64.glsl.js":
/*!******************************************************************************************************************!*\
  !*** ./node_modules/@deck.gl/aggregation-layers/dist/esm/utils/gpu-grid-aggregation/aggregate-all-vs-64.glsl.js ***!
  \******************************************************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony default export */ __webpack_exports__[\"default\"] = (\"#version 300 es\\n#define SHADER_NAME gpu-aggregation-all-vs-64\\n\\nin vec2 position;\\nuniform ivec2 gridSize;\\nout vec2 vTextureCoord;\\n\\nvoid main(void) {\\n  vec2 pos = vec2(-1.0, -1.0);\\n  vec2 offset = 1.0 / vec2(gridSize);\\n  pos = pos + offset;\\n\\n  gl_Position = vec4(pos, 0.0, 1.0);\\n\\n  int yIndex = gl_InstanceID / gridSize[0];\\n  int xIndex = gl_InstanceID - (yIndex * gridSize[0]);\\n\\n  vec2 yIndexFP64 = vec2(float(yIndex), 0.);\\n  vec2 xIndexFP64 = vec2(float(xIndex), 0.);\\n  vec2 gridSizeYFP64 = vec2(gridSize[1], 0.);\\n  vec2 gridSizeXFP64 = vec2(gridSize[0], 0.);\\n\\n  vec2 texCoordXFP64 = div_fp64(yIndexFP64, gridSizeYFP64);\\n  vec2 texCoordYFP64 = div_fp64(xIndexFP64, gridSizeXFP64);\\n\\n  vTextureCoord = vec2(texCoordYFP64.x, texCoordXFP64.x);\\n}\\n\");\n//# sourceMappingURL=aggregate-all-vs-64.glsl.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQGRlY2suZ2wvYWdncmVnYXRpb24tbGF5ZXJzL2Rpc3QvZXNtL3V0aWxzL2dwdS1ncmlkLWFnZ3JlZ2F0aW9uL2FnZ3JlZ2F0ZS1hbGwtdnMtNjQuZ2xzbC5qcy5qcyIsInNvdXJjZXMiOlsid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9AZGVjay5nbC9hZ2dyZWdhdGlvbi1sYXllcnMvZGlzdC9lc20vdXRpbHMvZ3B1LWdyaWQtYWdncmVnYXRpb24vYWdncmVnYXRlLWFsbC12cy02NC5nbHNsLmpzP2JjNWYiXSwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IGRlZmF1bHQgXCIjdmVyc2lvbiAzMDAgZXNcXG4jZGVmaW5lIFNIQURFUl9OQU1FIGdwdS1hZ2dyZWdhdGlvbi1hbGwtdnMtNjRcXG5cXG5pbiB2ZWMyIHBvc2l0aW9uO1xcbnVuaWZvcm0gaXZlYzIgZ3JpZFNpemU7XFxub3V0IHZlYzIgdlRleHR1cmVDb29yZDtcXG5cXG52b2lkIG1haW4odm9pZCkge1xcbiAgdmVjMiBwb3MgPSB2ZWMyKC0xLjAsIC0xLjApO1xcbiAgdmVjMiBvZmZzZXQgPSAxLjAgLyB2ZWMyKGdyaWRTaXplKTtcXG4gIHBvcyA9IHBvcyArIG9mZnNldDtcXG5cXG4gIGdsX1Bvc2l0aW9uID0gdmVjNChwb3MsIDAuMCwgMS4wKTtcXG5cXG4gIGludCB5SW5kZXggPSBnbF9JbnN0YW5jZUlEIC8gZ3JpZFNpemVbMF07XFxuICBpbnQgeEluZGV4ID0gZ2xfSW5zdGFuY2VJRCAtICh5SW5kZXggKiBncmlkU2l6ZVswXSk7XFxuXFxuICB2ZWMyIHlJbmRleEZQNjQgPSB2ZWMyKGZsb2F0KHlJbmRleCksIDAuKTtcXG4gIHZlYzIgeEluZGV4RlA2NCA9IHZlYzIoZmxvYXQoeEluZGV4KSwgMC4pO1xcbiAgdmVjMiBncmlkU2l6ZVlGUDY0ID0gdmVjMihncmlkU2l6ZVsxXSwgMC4pO1xcbiAgdmVjMiBncmlkU2l6ZVhGUDY0ID0gdmVjMihncmlkU2l6ZVswXSwgMC4pO1xcblxcbiAgdmVjMiB0ZXhDb29yZFhGUDY0ID0gZGl2X2ZwNjQoeUluZGV4RlA2NCwgZ3JpZFNpemVZRlA2NCk7XFxuICB2ZWMyIHRleENvb3JkWUZQNjQgPSBkaXZfZnA2NCh4SW5kZXhGUDY0LCBncmlkU2l6ZVhGUDY0KTtcXG5cXG4gIHZUZXh0dXJlQ29vcmQgPSB2ZWMyKHRleENvb3JkWUZQNjQueCwgdGV4Q29vcmRYRlA2NC54KTtcXG59XFxuXCI7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1hZ2dyZWdhdGUtYWxsLXZzLTY0Lmdsc2wuanMubWFwIl0sIm1hcHBpbmdzIjoiQUFBQTtBQUFBO0FBQ0EiLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/@deck.gl/aggregation-layers/dist/esm/utils/gpu-grid-aggregation/aggregate-all-vs-64.glsl.js\n");

/***/ }),

/***/ "./node_modules/@deck.gl/aggregation-layers/dist/esm/utils/gpu-grid-aggregation/aggregate-to-grid-fs.glsl.js":
/*!*******************************************************************************************************************!*\
  !*** ./node_modules/@deck.gl/aggregation-layers/dist/esm/utils/gpu-grid-aggregation/aggregate-to-grid-fs.glsl.js ***!
  \*******************************************************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony default export */ __webpack_exports__[\"default\"] = (\"#define SHADER_NAME gpu-aggregation-to-grid-fs\\n\\nprecision highp float;\\n\\nvarying vec3 vWeights;\\n\\nvoid main(void) {\\n  gl_FragColor = vec4(vWeights, 1.0);\\n}\\n\");\n//# sourceMappingURL=aggregate-to-grid-fs.glsl.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQGRlY2suZ2wvYWdncmVnYXRpb24tbGF5ZXJzL2Rpc3QvZXNtL3V0aWxzL2dwdS1ncmlkLWFnZ3JlZ2F0aW9uL2FnZ3JlZ2F0ZS10by1ncmlkLWZzLmdsc2wuanMuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvQGRlY2suZ2wvYWdncmVnYXRpb24tbGF5ZXJzL2Rpc3QvZXNtL3V0aWxzL2dwdS1ncmlkLWFnZ3JlZ2F0aW9uL2FnZ3JlZ2F0ZS10by1ncmlkLWZzLmdsc2wuanM/OTM0YyJdLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgZGVmYXVsdCBcIiNkZWZpbmUgU0hBREVSX05BTUUgZ3B1LWFnZ3JlZ2F0aW9uLXRvLWdyaWQtZnNcXG5cXG5wcmVjaXNpb24gaGlnaHAgZmxvYXQ7XFxuXFxudmFyeWluZyB2ZWMzIHZXZWlnaHRzO1xcblxcbnZvaWQgbWFpbih2b2lkKSB7XFxuICBnbF9GcmFnQ29sb3IgPSB2ZWM0KHZXZWlnaHRzLCAxLjApO1xcbn1cXG5cIjtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWFnZ3JlZ2F0ZS10by1ncmlkLWZzLmdsc2wuanMubWFwIl0sIm1hcHBpbmdzIjoiQUFBQTtBQUFBO0FBQ0EiLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/@deck.gl/aggregation-layers/dist/esm/utils/gpu-grid-aggregation/aggregate-to-grid-fs.glsl.js\n");

/***/ }),

/***/ "./node_modules/@deck.gl/aggregation-layers/dist/esm/utils/gpu-grid-aggregation/aggregate-to-grid-vs-64.glsl.js":
/*!**********************************************************************************************************************!*\
  !*** ./node_modules/@deck.gl/aggregation-layers/dist/esm/utils/gpu-grid-aggregation/aggregate-to-grid-vs-64.glsl.js ***!
  \**********************************************************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony default export */ __webpack_exports__[\"default\"] = (\"#define SHADER_NAME gpu-aggregation-to-grid-vs-64\\n\\nattribute vec2 positions;\\nattribute vec2 positions64xyLow;\\nattribute vec3 weights;\\nuniform vec2 windowSize;\\nuniform vec2 cellSize;\\nuniform vec2 gridSize;\\nuniform vec2 uProjectionMatrixFP64[16];\\nuniform bool projectPoints;\\n\\nvarying vec3 vWeights;\\n\\nvoid project_to_pixel(vec2 pos, vec2 pos64xyLow, out vec2 pixelXY64[2]) {\\n\\n  vec2 result64[4];\\n  vec2 position64[4];\\n  position64[0] = vec2(pos.x, pos64xyLow.x);\\n  position64[1] = vec2(pos.y, pos64xyLow.y);\\n  position64[2] = vec2(0., 0.);\\n  position64[3] = vec2(1., 0.);\\n  mat4_vec4_mul_fp64(uProjectionMatrixFP64, position64,\\n  result64);\\n\\n  pixelXY64[0] = div_fp64(result64[0], result64[3]);\\n  pixelXY64[1] = div_fp64(result64[1], result64[3]);\\n}\\n\\nvoid main(void) {\\n\\n  vWeights = weights;\\n\\n  vec2 windowPos = positions;\\n  vec2 windowPos64xyLow = positions64xyLow;\\n  if (projectPoints) {\\n    vec2 projectedXY[2];\\n    project_position_fp64(windowPos, windowPos64xyLow, projectedXY);\\n    windowPos.x = projectedXY[0].x;\\n    windowPos.y = projectedXY[1].x;\\n    windowPos64xyLow.x = projectedXY[0].y;\\n    windowPos64xyLow.y = projectedXY[1].y;\\n  }\\n\\n  vec2 pixelXY64[2];\\n  project_to_pixel(windowPos, windowPos64xyLow, pixelXY64);\\n  vec2 gridXY64[2];\\n  gridXY64[0] = div_fp64(pixelXY64[0], vec2(cellSize.x, 0));\\n  gridXY64[1] = div_fp64(pixelXY64[1], vec2(cellSize.y, 0));\\n  float x = floor(gridXY64[0].x);\\n  float y = floor(gridXY64[1].x);\\n  vec2 pos = vec2(x, y);\\n  pos = (pos * (2., 2.) / (gridSize)) - (1., 1.);\\n  vec2 offset = 1.0 / gridSize;\\n  pos = pos + offset;\\n\\n  gl_Position = vec4(pos, 0.0, 1.0);\\n}\\n\");\n//# sourceMappingURL=aggregate-to-grid-vs-64.glsl.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQGRlY2suZ2wvYWdncmVnYXRpb24tbGF5ZXJzL2Rpc3QvZXNtL3V0aWxzL2dwdS1ncmlkLWFnZ3JlZ2F0aW9uL2FnZ3JlZ2F0ZS10by1ncmlkLXZzLTY0Lmdsc2wuanMuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvQGRlY2suZ2wvYWdncmVnYXRpb24tbGF5ZXJzL2Rpc3QvZXNtL3V0aWxzL2dwdS1ncmlkLWFnZ3JlZ2F0aW9uL2FnZ3JlZ2F0ZS10by1ncmlkLXZzLTY0Lmdsc2wuanM/NWYyMiJdLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgZGVmYXVsdCBcIiNkZWZpbmUgU0hBREVSX05BTUUgZ3B1LWFnZ3JlZ2F0aW9uLXRvLWdyaWQtdnMtNjRcXG5cXG5hdHRyaWJ1dGUgdmVjMiBwb3NpdGlvbnM7XFxuYXR0cmlidXRlIHZlYzIgcG9zaXRpb25zNjR4eUxvdztcXG5hdHRyaWJ1dGUgdmVjMyB3ZWlnaHRzO1xcbnVuaWZvcm0gdmVjMiB3aW5kb3dTaXplO1xcbnVuaWZvcm0gdmVjMiBjZWxsU2l6ZTtcXG51bmlmb3JtIHZlYzIgZ3JpZFNpemU7XFxudW5pZm9ybSB2ZWMyIHVQcm9qZWN0aW9uTWF0cml4RlA2NFsxNl07XFxudW5pZm9ybSBib29sIHByb2plY3RQb2ludHM7XFxuXFxudmFyeWluZyB2ZWMzIHZXZWlnaHRzO1xcblxcbnZvaWQgcHJvamVjdF90b19waXhlbCh2ZWMyIHBvcywgdmVjMiBwb3M2NHh5TG93LCBvdXQgdmVjMiBwaXhlbFhZNjRbMl0pIHtcXG5cXG4gIHZlYzIgcmVzdWx0NjRbNF07XFxuICB2ZWMyIHBvc2l0aW9uNjRbNF07XFxuICBwb3NpdGlvbjY0WzBdID0gdmVjMihwb3MueCwgcG9zNjR4eUxvdy54KTtcXG4gIHBvc2l0aW9uNjRbMV0gPSB2ZWMyKHBvcy55LCBwb3M2NHh5TG93LnkpO1xcbiAgcG9zaXRpb242NFsyXSA9IHZlYzIoMC4sIDAuKTtcXG4gIHBvc2l0aW9uNjRbM10gPSB2ZWMyKDEuLCAwLik7XFxuICBtYXQ0X3ZlYzRfbXVsX2ZwNjQodVByb2plY3Rpb25NYXRyaXhGUDY0LCBwb3NpdGlvbjY0LFxcbiAgcmVzdWx0NjQpO1xcblxcbiAgcGl4ZWxYWTY0WzBdID0gZGl2X2ZwNjQocmVzdWx0NjRbMF0sIHJlc3VsdDY0WzNdKTtcXG4gIHBpeGVsWFk2NFsxXSA9IGRpdl9mcDY0KHJlc3VsdDY0WzFdLCByZXN1bHQ2NFszXSk7XFxufVxcblxcbnZvaWQgbWFpbih2b2lkKSB7XFxuXFxuICB2V2VpZ2h0cyA9IHdlaWdodHM7XFxuXFxuICB2ZWMyIHdpbmRvd1BvcyA9IHBvc2l0aW9ucztcXG4gIHZlYzIgd2luZG93UG9zNjR4eUxvdyA9IHBvc2l0aW9uczY0eHlMb3c7XFxuICBpZiAocHJvamVjdFBvaW50cykge1xcbiAgICB2ZWMyIHByb2plY3RlZFhZWzJdO1xcbiAgICBwcm9qZWN0X3Bvc2l0aW9uX2ZwNjQod2luZG93UG9zLCB3aW5kb3dQb3M2NHh5TG93LCBwcm9qZWN0ZWRYWSk7XFxuICAgIHdpbmRvd1Bvcy54ID0gcHJvamVjdGVkWFlbMF0ueDtcXG4gICAgd2luZG93UG9zLnkgPSBwcm9qZWN0ZWRYWVsxXS54O1xcbiAgICB3aW5kb3dQb3M2NHh5TG93LnggPSBwcm9qZWN0ZWRYWVswXS55O1xcbiAgICB3aW5kb3dQb3M2NHh5TG93LnkgPSBwcm9qZWN0ZWRYWVsxXS55O1xcbiAgfVxcblxcbiAgdmVjMiBwaXhlbFhZNjRbMl07XFxuICBwcm9qZWN0X3RvX3BpeGVsKHdpbmRvd1Bvcywgd2luZG93UG9zNjR4eUxvdywgcGl4ZWxYWTY0KTtcXG4gIHZlYzIgZ3JpZFhZNjRbMl07XFxuICBncmlkWFk2NFswXSA9IGRpdl9mcDY0KHBpeGVsWFk2NFswXSwgdmVjMihjZWxsU2l6ZS54LCAwKSk7XFxuICBncmlkWFk2NFsxXSA9IGRpdl9mcDY0KHBpeGVsWFk2NFsxXSwgdmVjMihjZWxsU2l6ZS55LCAwKSk7XFxuICBmbG9hdCB4ID0gZmxvb3IoZ3JpZFhZNjRbMF0ueCk7XFxuICBmbG9hdCB5ID0gZmxvb3IoZ3JpZFhZNjRbMV0ueCk7XFxuICB2ZWMyIHBvcyA9IHZlYzIoeCwgeSk7XFxuICBwb3MgPSAocG9zICogKDIuLCAyLikgLyAoZ3JpZFNpemUpKSAtICgxLiwgMS4pO1xcbiAgdmVjMiBvZmZzZXQgPSAxLjAgLyBncmlkU2l6ZTtcXG4gIHBvcyA9IHBvcyArIG9mZnNldDtcXG5cXG4gIGdsX1Bvc2l0aW9uID0gdmVjNChwb3MsIDAuMCwgMS4wKTtcXG59XFxuXCI7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1hZ2dyZWdhdGUtdG8tZ3JpZC12cy02NC5nbHNsLmpzLm1hcCJdLCJtYXBwaW5ncyI6IkFBQUE7QUFBQTtBQUNBIiwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/@deck.gl/aggregation-layers/dist/esm/utils/gpu-grid-aggregation/aggregate-to-grid-vs-64.glsl.js\n");

/***/ }),

/***/ "./node_modules/@deck.gl/aggregation-layers/dist/esm/utils/gpu-grid-aggregation/aggregate-to-grid-vs.glsl.js":
/*!*******************************************************************************************************************!*\
  !*** ./node_modules/@deck.gl/aggregation-layers/dist/esm/utils/gpu-grid-aggregation/aggregate-to-grid-vs.glsl.js ***!
  \*******************************************************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony default export */ __webpack_exports__[\"default\"] = (\"#define SHADER_NAME gpu-aggregation-to-grid-vs\\n\\nattribute vec2 positions;\\nattribute vec3 weights;\\nuniform vec2 windowSize;\\nuniform vec2 cellSize;\\nuniform vec2 gridSize;\\nuniform mat4 uProjectionMatrix;\\nuniform bool projectPoints;\\n\\nvarying vec3 vWeights;\\n\\nvec2 project_to_pixel(vec4 pos) {\\n  vec4 result =  uProjectionMatrix * pos;\\n  return result.xy/result.w;\\n}\\n\\nvoid main(void) {\\n\\n  vWeights = weights;\\n\\n  vec4 windowPos = vec4(positions, 0, 1.);\\n  if (projectPoints) {\\n    windowPos = project_position_to_clipspace(vec3(positions, 0), vec2(0, 0), vec3(0, 0, 0));\\n  }\\n\\n  vec2 pos = project_to_pixel(windowPos);\\n  pos = floor(pos / cellSize);\\n  pos = (pos * (2., 2.) / (gridSize)) - (1., 1.);\\n  vec2 offset = 1.0 / gridSize;\\n  pos = pos + offset;\\n\\n  gl_Position = vec4(pos, 0.0, 1.0);\\n}\\n\");\n//# sourceMappingURL=aggregate-to-grid-vs.glsl.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQGRlY2suZ2wvYWdncmVnYXRpb24tbGF5ZXJzL2Rpc3QvZXNtL3V0aWxzL2dwdS1ncmlkLWFnZ3JlZ2F0aW9uL2FnZ3JlZ2F0ZS10by1ncmlkLXZzLmdsc2wuanMuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvQGRlY2suZ2wvYWdncmVnYXRpb24tbGF5ZXJzL2Rpc3QvZXNtL3V0aWxzL2dwdS1ncmlkLWFnZ3JlZ2F0aW9uL2FnZ3JlZ2F0ZS10by1ncmlkLXZzLmdsc2wuanM/ZDYwMSJdLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgZGVmYXVsdCBcIiNkZWZpbmUgU0hBREVSX05BTUUgZ3B1LWFnZ3JlZ2F0aW9uLXRvLWdyaWQtdnNcXG5cXG5hdHRyaWJ1dGUgdmVjMiBwb3NpdGlvbnM7XFxuYXR0cmlidXRlIHZlYzMgd2VpZ2h0cztcXG51bmlmb3JtIHZlYzIgd2luZG93U2l6ZTtcXG51bmlmb3JtIHZlYzIgY2VsbFNpemU7XFxudW5pZm9ybSB2ZWMyIGdyaWRTaXplO1xcbnVuaWZvcm0gbWF0NCB1UHJvamVjdGlvbk1hdHJpeDtcXG51bmlmb3JtIGJvb2wgcHJvamVjdFBvaW50cztcXG5cXG52YXJ5aW5nIHZlYzMgdldlaWdodHM7XFxuXFxudmVjMiBwcm9qZWN0X3RvX3BpeGVsKHZlYzQgcG9zKSB7XFxuICB2ZWM0IHJlc3VsdCA9ICB1UHJvamVjdGlvbk1hdHJpeCAqIHBvcztcXG4gIHJldHVybiByZXN1bHQueHkvcmVzdWx0Lnc7XFxufVxcblxcbnZvaWQgbWFpbih2b2lkKSB7XFxuXFxuICB2V2VpZ2h0cyA9IHdlaWdodHM7XFxuXFxuICB2ZWM0IHdpbmRvd1BvcyA9IHZlYzQocG9zaXRpb25zLCAwLCAxLik7XFxuICBpZiAocHJvamVjdFBvaW50cykge1xcbiAgICB3aW5kb3dQb3MgPSBwcm9qZWN0X3Bvc2l0aW9uX3RvX2NsaXBzcGFjZSh2ZWMzKHBvc2l0aW9ucywgMCksIHZlYzIoMCwgMCksIHZlYzMoMCwgMCwgMCkpO1xcbiAgfVxcblxcbiAgdmVjMiBwb3MgPSBwcm9qZWN0X3RvX3BpeGVsKHdpbmRvd1Bvcyk7XFxuICBwb3MgPSBmbG9vcihwb3MgLyBjZWxsU2l6ZSk7XFxuICBwb3MgPSAocG9zICogKDIuLCAyLikgLyAoZ3JpZFNpemUpKSAtICgxLiwgMS4pO1xcbiAgdmVjMiBvZmZzZXQgPSAxLjAgLyBncmlkU2l6ZTtcXG4gIHBvcyA9IHBvcyArIG9mZnNldDtcXG5cXG4gIGdsX1Bvc2l0aW9uID0gdmVjNChwb3MsIDAuMCwgMS4wKTtcXG59XFxuXCI7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1hZ2dyZWdhdGUtdG8tZ3JpZC12cy5nbHNsLmpzLm1hcCJdLCJtYXBwaW5ncyI6IkFBQUE7QUFBQTtBQUNBIiwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/@deck.gl/aggregation-layers/dist/esm/utils/gpu-grid-aggregation/aggregate-to-grid-vs.glsl.js\n");

/***/ }),

/***/ "./node_modules/@deck.gl/aggregation-layers/dist/esm/utils/gpu-grid-aggregation/gpu-grid-aggregator-constants.js":
/*!***********************************************************************************************************************!*\
  !*** ./node_modules/@deck.gl/aggregation-layers/dist/esm/utils/gpu-grid-aggregation/gpu-grid-aggregator-constants.js ***!
  \***********************************************************************************************************************/
/*! exports provided: DEFAULT_CHANGE_FLAGS, DEFAULT_RUN_PARAMS, MAX_32_BIT_FLOAT, MIN_BLEND_EQUATION, MAX_BLEND_EQUATION, MAX_MIN_BLEND_EQUATION, EQUATION_MAP, ELEMENTCOUNT, DEFAULT_WEIGHT_PARAMS, IDENTITY_MATRIX, PIXEL_SIZE, WEIGHT_SIZE */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"DEFAULT_CHANGE_FLAGS\", function() { return DEFAULT_CHANGE_FLAGS; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"DEFAULT_RUN_PARAMS\", function() { return DEFAULT_RUN_PARAMS; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"MAX_32_BIT_FLOAT\", function() { return MAX_32_BIT_FLOAT; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"MIN_BLEND_EQUATION\", function() { return MIN_BLEND_EQUATION; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"MAX_BLEND_EQUATION\", function() { return MAX_BLEND_EQUATION; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"MAX_MIN_BLEND_EQUATION\", function() { return MAX_MIN_BLEND_EQUATION; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"EQUATION_MAP\", function() { return EQUATION_MAP; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"ELEMENTCOUNT\", function() { return ELEMENTCOUNT; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"DEFAULT_WEIGHT_PARAMS\", function() { return DEFAULT_WEIGHT_PARAMS; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"IDENTITY_MATRIX\", function() { return IDENTITY_MATRIX; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"PIXEL_SIZE\", function() { return PIXEL_SIZE; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"WEIGHT_SIZE\", function() { return WEIGHT_SIZE; });\n/* harmony import */ var _babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/esm/defineProperty */ \"./node_modules/@babel/runtime/helpers/esm/defineProperty.js\");\n/* harmony import */ var _aggregation_operation_utils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../aggregation-operation-utils */ \"./node_modules/@deck.gl/aggregation-layers/dist/esm/utils/aggregation-operation-utils.js\");\n\n\nvar _EQUATION_MAP;\n\n\nvar DEFAULT_CHANGE_FLAGS = {\n  dataChanged: true,\n  viewportChanged: true,\n  cellSizeChanged: true\n};\nvar DEFAULT_RUN_PARAMS = {\n  changeFlags: DEFAULT_CHANGE_FLAGS,\n  projectPoints: false,\n  useGPU: true,\n  fp64: false,\n  viewport: null,\n  gridTransformMatrix: null,\n  createBufferObjects: true\n};\nvar MAX_32_BIT_FLOAT = 3.402823466e38;\nvar MIN_BLEND_EQUATION = [32775, 32774];\nvar MAX_BLEND_EQUATION = [32776, 32774];\nvar MAX_MIN_BLEND_EQUATION = [32776, 32775];\nvar EQUATION_MAP = (_EQUATION_MAP = {}, Object(_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(_EQUATION_MAP, _aggregation_operation_utils__WEBPACK_IMPORTED_MODULE_1__[\"AGGREGATION_OPERATION\"].SUM, 32774), Object(_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(_EQUATION_MAP, _aggregation_operation_utils__WEBPACK_IMPORTED_MODULE_1__[\"AGGREGATION_OPERATION\"].MEAN, 32774), Object(_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(_EQUATION_MAP, _aggregation_operation_utils__WEBPACK_IMPORTED_MODULE_1__[\"AGGREGATION_OPERATION\"].MIN, MIN_BLEND_EQUATION), Object(_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(_EQUATION_MAP, _aggregation_operation_utils__WEBPACK_IMPORTED_MODULE_1__[\"AGGREGATION_OPERATION\"].MAX, MAX_BLEND_EQUATION), _EQUATION_MAP);\nvar ELEMENTCOUNT = 4;\nvar DEFAULT_WEIGHT_PARAMS = {\n  size: 1,\n  operation: _aggregation_operation_utils__WEBPACK_IMPORTED_MODULE_1__[\"AGGREGATION_OPERATION\"].SUM,\n  needMin: false,\n  needMax: false,\n  combineMaxMin: false\n};\nvar IDENTITY_MATRIX = [1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1];\nvar PIXEL_SIZE = 4;\nvar WEIGHT_SIZE = 3;\n//# sourceMappingURL=gpu-grid-aggregator-constants.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQGRlY2suZ2wvYWdncmVnYXRpb24tbGF5ZXJzL2Rpc3QvZXNtL3V0aWxzL2dwdS1ncmlkLWFnZ3JlZ2F0aW9uL2dwdS1ncmlkLWFnZ3JlZ2F0b3ItY29uc3RhbnRzLmpzLmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL0BkZWNrLmdsL2FnZ3JlZ2F0aW9uLWxheWVycy9kaXN0L2VzbS91dGlscy9ncHUtZ3JpZC1hZ2dyZWdhdGlvbi9ncHUtZ3JpZC1hZ2dyZWdhdG9yLWNvbnN0YW50cy5qcz8zZWU2Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBfZGVmaW5lUHJvcGVydHkgZnJvbSBcIkBiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL2RlZmluZVByb3BlcnR5XCI7XG5cbnZhciBfRVFVQVRJT05fTUFQO1xuXG5pbXBvcnQgeyBBR0dSRUdBVElPTl9PUEVSQVRJT04gfSBmcm9tICcuLi9hZ2dyZWdhdGlvbi1vcGVyYXRpb24tdXRpbHMnO1xuZXhwb3J0IHZhciBERUZBVUxUX0NIQU5HRV9GTEFHUyA9IHtcbiAgZGF0YUNoYW5nZWQ6IHRydWUsXG4gIHZpZXdwb3J0Q2hhbmdlZDogdHJ1ZSxcbiAgY2VsbFNpemVDaGFuZ2VkOiB0cnVlXG59O1xuZXhwb3J0IHZhciBERUZBVUxUX1JVTl9QQVJBTVMgPSB7XG4gIGNoYW5nZUZsYWdzOiBERUZBVUxUX0NIQU5HRV9GTEFHUyxcbiAgcHJvamVjdFBvaW50czogZmFsc2UsXG4gIHVzZUdQVTogdHJ1ZSxcbiAgZnA2NDogZmFsc2UsXG4gIHZpZXdwb3J0OiBudWxsLFxuICBncmlkVHJhbnNmb3JtTWF0cml4OiBudWxsLFxuICBjcmVhdGVCdWZmZXJPYmplY3RzOiB0cnVlXG59O1xuZXhwb3J0IHZhciBNQVhfMzJfQklUX0ZMT0FUID0gMy40MDI4MjM0NjZlMzg7XG5leHBvcnQgdmFyIE1JTl9CTEVORF9FUVVBVElPTiA9IFszMjc3NSwgMzI3NzRdO1xuZXhwb3J0IHZhciBNQVhfQkxFTkRfRVFVQVRJT04gPSBbMzI3NzYsIDMyNzc0XTtcbmV4cG9ydCB2YXIgTUFYX01JTl9CTEVORF9FUVVBVElPTiA9IFszMjc3NiwgMzI3NzVdO1xuZXhwb3J0IHZhciBFUVVBVElPTl9NQVAgPSAoX0VRVUFUSU9OX01BUCA9IHt9LCBfZGVmaW5lUHJvcGVydHkoX0VRVUFUSU9OX01BUCwgQUdHUkVHQVRJT05fT1BFUkFUSU9OLlNVTSwgMzI3NzQpLCBfZGVmaW5lUHJvcGVydHkoX0VRVUFUSU9OX01BUCwgQUdHUkVHQVRJT05fT1BFUkFUSU9OLk1FQU4sIDMyNzc0KSwgX2RlZmluZVByb3BlcnR5KF9FUVVBVElPTl9NQVAsIEFHR1JFR0FUSU9OX09QRVJBVElPTi5NSU4sIE1JTl9CTEVORF9FUVVBVElPTiksIF9kZWZpbmVQcm9wZXJ0eShfRVFVQVRJT05fTUFQLCBBR0dSRUdBVElPTl9PUEVSQVRJT04uTUFYLCBNQVhfQkxFTkRfRVFVQVRJT04pLCBfRVFVQVRJT05fTUFQKTtcbmV4cG9ydCB2YXIgRUxFTUVOVENPVU5UID0gNDtcbmV4cG9ydCB2YXIgREVGQVVMVF9XRUlHSFRfUEFSQU1TID0ge1xuICBzaXplOiAxLFxuICBvcGVyYXRpb246IEFHR1JFR0FUSU9OX09QRVJBVElPTi5TVU0sXG4gIG5lZWRNaW46IGZhbHNlLFxuICBuZWVkTWF4OiBmYWxzZSxcbiAgY29tYmluZU1heE1pbjogZmFsc2Vcbn07XG5leHBvcnQgdmFyIElERU5USVRZX01BVFJJWCA9IFsxLCAwLCAwLCAwLCAwLCAxLCAwLCAwLCAwLCAwLCAxLCAwLCAwLCAwLCAwLCAxXTtcbmV4cG9ydCB2YXIgUElYRUxfU0laRSA9IDQ7XG5leHBvcnQgdmFyIFdFSUdIVF9TSVpFID0gMztcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWdwdS1ncmlkLWFnZ3JlZ2F0b3ItY29uc3RhbnRzLmpzLm1hcCJdLCJtYXBwaW5ncyI6IkFBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/@deck.gl/aggregation-layers/dist/esm/utils/gpu-grid-aggregation/gpu-grid-aggregator-constants.js\n");

/***/ }),

/***/ "./node_modules/@deck.gl/aggregation-layers/dist/esm/utils/gpu-grid-aggregation/gpu-grid-aggregator-utils.js":
/*!*******************************************************************************************************************!*\
  !*** ./node_modules/@deck.gl/aggregation-layers/dist/esm/utils/gpu-grid-aggregation/gpu-grid-aggregator-utils.js ***!
  \*******************************************************************************************************************/
/*! exports provided: getFloatTexture, getFramebuffer, getFloatArray */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"getFloatTexture\", function() { return getFloatTexture; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"getFramebuffer\", function() { return getFramebuffer; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"getFloatArray\", function() { return getFloatArray; });\n/* harmony import */ var _babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/esm/defineProperty */ \"./node_modules/@babel/runtime/helpers/esm/defineProperty.js\");\n/* harmony import */ var _luma_gl_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @luma.gl/core */ \"./node_modules/@luma.gl/webgl/dist/esm/classes/texture-2d.js\");\n/* harmony import */ var _luma_gl_core__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @luma.gl/core */ \"./node_modules/@luma.gl/webgl/dist/esm/classes/framebuffer.js\");\n\n\nfunction getFloatTexture(gl, opts) {\n  var _parameters;\n\n  var _opts$width = opts.width,\n      width = _opts$width === void 0 ? 1 : _opts$width,\n      _opts$height = opts.height,\n      height = _opts$height === void 0 ? 1 : _opts$height;\n  var texture = new _luma_gl_core__WEBPACK_IMPORTED_MODULE_1__[\"default\"](gl, {\n    data: null,\n    format: 34836,\n    type: 5126,\n    border: 0,\n    mipmaps: false,\n    parameters: (_parameters = {}, Object(_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(_parameters, 10240, 9728), Object(_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(_parameters, 10241, 9728), _parameters),\n    dataFormat: 6408,\n    width: width,\n    height: height\n  });\n  return texture;\n}\nfunction getFramebuffer(gl, opts) {\n  var id = opts.id,\n      _opts$width2 = opts.width,\n      width = _opts$width2 === void 0 ? 1 : _opts$width2,\n      _opts$height2 = opts.height,\n      height = _opts$height2 === void 0 ? 1 : _opts$height2,\n      texture = opts.texture;\n  var fb = new _luma_gl_core__WEBPACK_IMPORTED_MODULE_2__[\"default\"](gl, {\n    id: id,\n    width: width,\n    height: height,\n    attachments: Object(_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__[\"default\"])({}, 36064, texture)\n  });\n  return fb;\n}\nfunction getFloatArray(array, size) {\n  var fillValue = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 0;\n\n  if (!array || array.length < size) {\n    return new Float32Array(size).fill(fillValue);\n  }\n\n  return array;\n}\n//# sourceMappingURL=gpu-grid-aggregator-utils.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQGRlY2suZ2wvYWdncmVnYXRpb24tbGF5ZXJzL2Rpc3QvZXNtL3V0aWxzL2dwdS1ncmlkLWFnZ3JlZ2F0aW9uL2dwdS1ncmlkLWFnZ3JlZ2F0b3ItdXRpbHMuanMuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvQGRlY2suZ2wvYWdncmVnYXRpb24tbGF5ZXJzL2Rpc3QvZXNtL3V0aWxzL2dwdS1ncmlkLWFnZ3JlZ2F0aW9uL2dwdS1ncmlkLWFnZ3JlZ2F0b3ItdXRpbHMuanM/ZmQyOCJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgX2RlZmluZVByb3BlcnR5IGZyb20gXCJAYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9kZWZpbmVQcm9wZXJ0eVwiO1xuaW1wb3J0IHsgRnJhbWVidWZmZXIsIFRleHR1cmUyRCB9IGZyb20gJ0BsdW1hLmdsL2NvcmUnO1xuZXhwb3J0IGZ1bmN0aW9uIGdldEZsb2F0VGV4dHVyZShnbCwgb3B0cykge1xuICB2YXIgX3BhcmFtZXRlcnM7XG5cbiAgdmFyIF9vcHRzJHdpZHRoID0gb3B0cy53aWR0aCxcbiAgICAgIHdpZHRoID0gX29wdHMkd2lkdGggPT09IHZvaWQgMCA/IDEgOiBfb3B0cyR3aWR0aCxcbiAgICAgIF9vcHRzJGhlaWdodCA9IG9wdHMuaGVpZ2h0LFxuICAgICAgaGVpZ2h0ID0gX29wdHMkaGVpZ2h0ID09PSB2b2lkIDAgPyAxIDogX29wdHMkaGVpZ2h0O1xuICB2YXIgdGV4dHVyZSA9IG5ldyBUZXh0dXJlMkQoZ2wsIHtcbiAgICBkYXRhOiBudWxsLFxuICAgIGZvcm1hdDogMzQ4MzYsXG4gICAgdHlwZTogNTEyNixcbiAgICBib3JkZXI6IDAsXG4gICAgbWlwbWFwczogZmFsc2UsXG4gICAgcGFyYW1ldGVyczogKF9wYXJhbWV0ZXJzID0ge30sIF9kZWZpbmVQcm9wZXJ0eShfcGFyYW1ldGVycywgMTAyNDAsIDk3MjgpLCBfZGVmaW5lUHJvcGVydHkoX3BhcmFtZXRlcnMsIDEwMjQxLCA5NzI4KSwgX3BhcmFtZXRlcnMpLFxuICAgIGRhdGFGb3JtYXQ6IDY0MDgsXG4gICAgd2lkdGg6IHdpZHRoLFxuICAgIGhlaWdodDogaGVpZ2h0XG4gIH0pO1xuICByZXR1cm4gdGV4dHVyZTtcbn1cbmV4cG9ydCBmdW5jdGlvbiBnZXRGcmFtZWJ1ZmZlcihnbCwgb3B0cykge1xuICB2YXIgaWQgPSBvcHRzLmlkLFxuICAgICAgX29wdHMkd2lkdGgyID0gb3B0cy53aWR0aCxcbiAgICAgIHdpZHRoID0gX29wdHMkd2lkdGgyID09PSB2b2lkIDAgPyAxIDogX29wdHMkd2lkdGgyLFxuICAgICAgX29wdHMkaGVpZ2h0MiA9IG9wdHMuaGVpZ2h0LFxuICAgICAgaGVpZ2h0ID0gX29wdHMkaGVpZ2h0MiA9PT0gdm9pZCAwID8gMSA6IF9vcHRzJGhlaWdodDIsXG4gICAgICB0ZXh0dXJlID0gb3B0cy50ZXh0dXJlO1xuICB2YXIgZmIgPSBuZXcgRnJhbWVidWZmZXIoZ2wsIHtcbiAgICBpZDogaWQsXG4gICAgd2lkdGg6IHdpZHRoLFxuICAgIGhlaWdodDogaGVpZ2h0LFxuICAgIGF0dGFjaG1lbnRzOiBfZGVmaW5lUHJvcGVydHkoe30sIDM2MDY0LCB0ZXh0dXJlKVxuICB9KTtcbiAgcmV0dXJuIGZiO1xufVxuZXhwb3J0IGZ1bmN0aW9uIGdldEZsb2F0QXJyYXkoYXJyYXksIHNpemUpIHtcbiAgdmFyIGZpbGxWYWx1ZSA9IGFyZ3VtZW50cy5sZW5ndGggPiAyICYmIGFyZ3VtZW50c1syXSAhPT0gdW5kZWZpbmVkID8gYXJndW1lbnRzWzJdIDogMDtcblxuICBpZiAoIWFycmF5IHx8IGFycmF5Lmxlbmd0aCA8IHNpemUpIHtcbiAgICByZXR1cm4gbmV3IEZsb2F0MzJBcnJheShzaXplKS5maWxsKGZpbGxWYWx1ZSk7XG4gIH1cblxuICByZXR1cm4gYXJyYXk7XG59XG4vLyMgc291cmNlTWFwcGluZ1VSTD1ncHUtZ3JpZC1hZ2dyZWdhdG9yLXV0aWxzLmpzLm1hcCJdLCJtYXBwaW5ncyI6IkFBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/@deck.gl/aggregation-layers/dist/esm/utils/gpu-grid-aggregation/gpu-grid-aggregator-utils.js\n");

/***/ }),

/***/ "./node_modules/@deck.gl/aggregation-layers/dist/esm/utils/gpu-grid-aggregation/gpu-grid-aggregator.js":
/*!*************************************************************************************************************!*\
  !*** ./node_modules/@deck.gl/aggregation-layers/dist/esm/utils/gpu-grid-aggregation/gpu-grid-aggregator.js ***!
  \*************************************************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"default\", function() { return GPUGridAggregator; });\n/* harmony import */ var _babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/esm/defineProperty */ \"./node_modules/@babel/runtime/helpers/esm/defineProperty.js\");\n/* harmony import */ var _babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @babel/runtime/helpers/esm/slicedToArray */ \"./node_modules/@babel/runtime/helpers/esm/slicedToArray.js\");\n/* harmony import */ var _babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @babel/runtime/helpers/esm/classCallCheck */ \"./node_modules/@babel/runtime/helpers/esm/classCallCheck.js\");\n/* harmony import */ var _babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @babel/runtime/helpers/esm/createClass */ \"./node_modules/@babel/runtime/helpers/esm/createClass.js\");\n/* harmony import */ var _luma_gl_core__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @luma.gl/core */ \"./node_modules/@luma.gl/shadertools/dist/esm/modules/fp64/fp64.js\");\n/* harmony import */ var _luma_gl_core__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @luma.gl/core */ \"./node_modules/@luma.gl/webgl/dist/esm/webgl-utils/webgl-checks.js\");\n/* harmony import */ var _luma_gl_core__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @luma.gl/core */ \"./node_modules/@luma.gl/webgl/dist/esm/features/features.js\");\n/* harmony import */ var _luma_gl_core__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @luma.gl/core */ \"./node_modules/@luma.gl/webgl/dist/esm/features/webgl-features-table.js\");\n/* harmony import */ var _luma_gl_core__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! @luma.gl/core */ \"./node_modules/@luma.gl/webgl/dist/esm/classes/buffer.js\");\n/* harmony import */ var _luma_gl_core__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! @luma.gl/core */ \"./node_modules/@luma.gl/webgl/dist/esm/classes/copy-and-blit.js\");\n/* harmony import */ var _luma_gl_core__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! @luma.gl/core */ \"./node_modules/@luma.gl/core/dist/esm/lib/model.js\");\n/* harmony import */ var _luma_gl_core__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! @luma.gl/core */ \"./node_modules/@luma.gl/core/dist/esm/lib/transform/transform.js\");\n/* harmony import */ var _luma_gl_core__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! @luma.gl/core */ \"./node_modules/@luma.gl/webgl-state-tracker/dist/esm/state-tracking/with-parameters.js\");\n/* harmony import */ var _deck_gl_core__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! @deck.gl/core */ \"./node_modules/@deck.gl/core/dist/esm/utils/log.js\");\n/* harmony import */ var viewport_mercator_project__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! viewport-mercator-project */ \"./node_modules/viewport-mercator-project/dist/esm/web-mercator-utils.js\");\n/* harmony import */ var _gpu_grid_aggregator_constants__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! ./gpu-grid-aggregator-constants */ \"./node_modules/@deck.gl/aggregation-layers/dist/esm/utils/gpu-grid-aggregation/gpu-grid-aggregator-constants.js\");\n/* harmony import */ var _aggregation_operation_utils__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! ../aggregation-operation-utils */ \"./node_modules/@deck.gl/aggregation-layers/dist/esm/utils/aggregation-operation-utils.js\");\n/* harmony import */ var _aggregate_to_grid_vs_glsl__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! ./aggregate-to-grid-vs.glsl */ \"./node_modules/@deck.gl/aggregation-layers/dist/esm/utils/gpu-grid-aggregation/aggregate-to-grid-vs.glsl.js\");\n/* harmony import */ var _aggregate_to_grid_vs_64_glsl__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(/*! ./aggregate-to-grid-vs-64.glsl */ \"./node_modules/@deck.gl/aggregation-layers/dist/esm/utils/gpu-grid-aggregation/aggregate-to-grid-vs-64.glsl.js\");\n/* harmony import */ var _aggregate_to_grid_fs_glsl__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__(/*! ./aggregate-to-grid-fs.glsl */ \"./node_modules/@deck.gl/aggregation-layers/dist/esm/utils/gpu-grid-aggregation/aggregate-to-grid-fs.glsl.js\");\n/* harmony import */ var _aggregate_all_vs_64_glsl__WEBPACK_IMPORTED_MODULE_20__ = __webpack_require__(/*! ./aggregate-all-vs-64.glsl */ \"./node_modules/@deck.gl/aggregation-layers/dist/esm/utils/gpu-grid-aggregation/aggregate-all-vs-64.glsl.js\");\n/* harmony import */ var _aggregate_all_fs_glsl__WEBPACK_IMPORTED_MODULE_21__ = __webpack_require__(/*! ./aggregate-all-fs.glsl */ \"./node_modules/@deck.gl/aggregation-layers/dist/esm/utils/gpu-grid-aggregation/aggregate-all-fs.glsl.js\");\n/* harmony import */ var _transform_mean_vs_glsl__WEBPACK_IMPORTED_MODULE_22__ = __webpack_require__(/*! ./transform-mean-vs.glsl */ \"./node_modules/@deck.gl/aggregation-layers/dist/esm/utils/gpu-grid-aggregation/transform-mean-vs.glsl.js\");\n/* harmony import */ var _gpu_grid_aggregator_utils_js__WEBPACK_IMPORTED_MODULE_23__ = __webpack_require__(/*! ./gpu-grid-aggregator-utils.js */ \"./node_modules/@deck.gl/aggregation-layers/dist/esm/utils/gpu-grid-aggregation/gpu-grid-aggregator-utils.js\");\n\n\n\n\n\n\n\nvar fp64ifyMatrix4 = _luma_gl_core__WEBPACK_IMPORTED_MODULE_4__[\"default\"].fp64ifyMatrix4;\n\n\n\n\n\n\n\n\n\nvar BUFFER_NAMES = ['aggregationBuffer', 'maxMinBuffer', 'minBuffer', 'maxBuffer'];\nvar ARRAY_BUFFER_MAP = {\n  maxData: 'maxBuffer',\n  minData: 'minBuffer',\n  maxMinData: 'maxMinBuffer'\n};\n\nvar GPUGridAggregator = function () {\n  Object(_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_3__[\"default\"])(GPUGridAggregator, null, [{\n    key: \"getAggregationData\",\n    value: function getAggregationData(_ref) {\n      var aggregationData = _ref.aggregationData,\n          maxData = _ref.maxData,\n          minData = _ref.minData,\n          maxMinData = _ref.maxMinData,\n          pixelIndex = _ref.pixelIndex;\n      var index = pixelIndex * _gpu_grid_aggregator_constants__WEBPACK_IMPORTED_MODULE_15__[\"PIXEL_SIZE\"];\n      var results = {};\n\n      if (aggregationData) {\n        results.cellCount = aggregationData[index + 3];\n        results.cellWeight = aggregationData[index];\n      }\n\n      if (maxMinData) {\n        results.maxCellWieght = maxMinData[0];\n        results.minCellWeight = maxMinData[3];\n      } else {\n        if (maxData) {\n          results.maxCellWieght = maxData[0];\n          results.totalCount = maxData[3];\n        }\n\n        if (minData) {\n          results.minCellWeight = minData[0];\n          results.totalCount = maxData[3];\n        }\n      }\n\n      return results;\n    }\n  }, {\n    key: \"getCellData\",\n    value: function getCellData(_ref2) {\n      var countsData = _ref2.countsData,\n          _ref2$size = _ref2.size,\n          size = _ref2$size === void 0 ? 1 : _ref2$size;\n      var numCells = countsData.length / 4;\n      var cellWeights = new Float32Array(numCells * size);\n      var cellCounts = new Uint32Array(numCells);\n\n      for (var i = 0; i < numCells; i++) {\n        for (var sizeIndex = 0; sizeIndex < size; sizeIndex++) {\n          cellWeights[i * size + sizeIndex] = countsData[i * 4 + sizeIndex];\n        }\n\n        cellCounts[i] = countsData[i * 4 + 3];\n      }\n\n      return {\n        cellCounts: cellCounts,\n        cellWeights: cellWeights\n      };\n    }\n  }, {\n    key: \"isSupported\",\n    value: function isSupported(gl) {\n      return Object(_luma_gl_core__WEBPACK_IMPORTED_MODULE_5__[\"isWebGL2\"])(gl) && Object(_luma_gl_core__WEBPACK_IMPORTED_MODULE_6__[\"hasFeatures\"])(gl, _luma_gl_core__WEBPACK_IMPORTED_MODULE_7__[\"FEATURES\"].BLEND_EQUATION_MINMAX, _luma_gl_core__WEBPACK_IMPORTED_MODULE_7__[\"FEATURES\"].COLOR_ATTACHMENT_RGBA32F, _luma_gl_core__WEBPACK_IMPORTED_MODULE_7__[\"FEATURES\"].TEXTURE_FLOAT);\n    }\n  }]);\n\n  function GPUGridAggregator(gl) {\n    var opts = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n    Object(_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_2__[\"default\"])(this, GPUGridAggregator);\n\n    this.id = opts.id || 'gpu-grid-aggregator';\n    this.shaderCache = opts.shaderCache || null;\n    this.gl = gl;\n    this.state = {\n      weights: null,\n      gridPositions: null,\n      positionsBuffer: null,\n      positions64xyLowBuffer: null,\n      vertexCount: 0,\n      fp64: null,\n      useGPU: null,\n      numCol: 0,\n      numRow: 0,\n      windowSize: null,\n      cellSize: null,\n      weightAttributes: {},\n      textures: {},\n      meanTextures: {},\n      buffers: {},\n      framebuffers: {},\n      maxMinFramebuffers: {},\n      minFramebuffers: {},\n      maxFramebuffers: {},\n      equations: {},\n      resources: {},\n      results: {}\n    };\n    this._hasGPUSupport = Object(_luma_gl_core__WEBPACK_IMPORTED_MODULE_5__[\"isWebGL2\"])(gl) && Object(_luma_gl_core__WEBPACK_IMPORTED_MODULE_6__[\"hasFeatures\"])(this.gl, _luma_gl_core__WEBPACK_IMPORTED_MODULE_7__[\"FEATURES\"].BLEND_EQUATION_MINMAX, _luma_gl_core__WEBPACK_IMPORTED_MODULE_7__[\"FEATURES\"].COLOR_ATTACHMENT_RGBA32F, _luma_gl_core__WEBPACK_IMPORTED_MODULE_7__[\"FEATURES\"].TEXTURE_FLOAT);\n  }\n\n  Object(_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_3__[\"default\"])(GPUGridAggregator, [{\n    key: \"delete\",\n    value: function _delete() {\n      var gridAggregationModel = this.gridAggregationModel,\n          allAggregationModel = this.allAggregationModel,\n          meanTransform = this.meanTransform;\n      var _this$state = this.state,\n          positionsBuffer = _this$state.positionsBuffer,\n          positions64xyLowBuffer = _this$state.positions64xyLowBuffer,\n          textures = _this$state.textures,\n          framebuffers = _this$state.framebuffers,\n          maxMinFramebuffers = _this$state.maxMinFramebuffers,\n          minFramebuffers = _this$state.minFramebuffers,\n          maxFramebuffers = _this$state.maxFramebuffers,\n          meanTextures = _this$state.meanTextures,\n          resources = _this$state.resources;\n      gridAggregationModel && gridAggregationModel.delete();\n      allAggregationModel && allAggregationModel.delete();\n      meanTransform && meanTransform.delete();\n      positionsBuffer && positionsBuffer.delete();\n      positions64xyLowBuffer && positions64xyLowBuffer.delete();\n      this.deleteResources([framebuffers, textures, maxMinFramebuffers, minFramebuffers, maxFramebuffers, meanTextures, resources]);\n    }\n  }, {\n    key: \"run\",\n    value: function run() {\n      var opts = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n      this.setState({\n        results: {}\n      });\n      var aggregationParams = this.getAggregationParams(opts);\n      this.updateGridSize(aggregationParams);\n      var useGPU = aggregationParams.useGPU;\n\n      if (this._hasGPUSupport && useGPU) {\n        return this.runAggregationOnGPU(aggregationParams);\n      }\n\n      if (useGPU) {\n        _deck_gl_core__WEBPACK_IMPORTED_MODULE_13__[\"default\"].info('GPUGridAggregator: GPU Aggregation not supported, falling back to CPU')();\n      }\n\n      return this.runAggregationOnCPU(aggregationParams);\n    }\n  }, {\n    key: \"getData\",\n    value: function getData(weightId) {\n      var data = {};\n      var results = this.state.results;\n\n      if (!results[weightId].aggregationData) {\n        results[weightId].aggregationData = results[weightId].aggregationBuffer.getData();\n      }\n\n      data.aggregationData = results[weightId].aggregationData;\n\n      for (var arrayName in ARRAY_BUFFER_MAP) {\n        var bufferName = ARRAY_BUFFER_MAP[arrayName];\n\n        if (results[weightId][arrayName] || results[weightId][bufferName]) {\n          results[weightId][arrayName] = results[weightId][arrayName] || results[weightId][bufferName].getData();\n          data[arrayName] = results[weightId][arrayName];\n        }\n      }\n\n      return data;\n    }\n  }, {\n    key: \"deleteResources\",\n    value: function deleteResources(resources) {\n      resources = Array.isArray(resources) ? resources : [resources];\n      resources.forEach(function (obj) {\n        for (var name in obj) {\n          obj[name].delete();\n        }\n      });\n    }\n  }, {\n    key: \"getAggregationParams\",\n    value: function getAggregationParams(opts) {\n      var aggregationParams = Object.assign({}, _gpu_grid_aggregator_constants__WEBPACK_IMPORTED_MODULE_15__[\"DEFAULT_RUN_PARAMS\"], opts);\n      var useGPU = aggregationParams.useGPU,\n          gridTransformMatrix = aggregationParams.gridTransformMatrix,\n          viewport = aggregationParams.viewport,\n          weights = aggregationParams.weights,\n          projectPoints = aggregationParams.projectPoints,\n          cellSize = aggregationParams.cellSize;\n\n      if (this.state.useGPU !== useGPU) {\n        aggregationParams.changeFlags = Object.assign({}, aggregationParams.changeFlags, _gpu_grid_aggregator_constants__WEBPACK_IMPORTED_MODULE_15__[\"DEFAULT_CHANGE_FLAGS\"]);\n      }\n\n      if (cellSize && (!this.state.cellSize || this.state.cellSize[0] !== cellSize[0] || this.state.cellSize[1] !== cellSize[1])) {\n        aggregationParams.changeFlags.cellSizeChanged = true;\n        this.setState({\n          cellSize: cellSize\n        });\n      }\n\n      this.validateProps(aggregationParams, opts);\n      this.setState({\n        useGPU: useGPU\n      });\n      aggregationParams.gridTransformMatrix = (projectPoints ? viewport.viewportMatrix : gridTransformMatrix) || _gpu_grid_aggregator_constants__WEBPACK_IMPORTED_MODULE_15__[\"IDENTITY_MATRIX\"];\n\n      if (weights) {\n        aggregationParams.weights = this.normalizeWeightParams(weights);\n        this.setState({\n          weights: aggregationParams.weights\n        });\n      }\n\n      return aggregationParams;\n    }\n  }, {\n    key: \"normalizeWeightParams\",\n    value: function normalizeWeightParams(weights) {\n      var result = {};\n\n      for (var id in weights) {\n        result[id] = Object.assign({}, _gpu_grid_aggregator_constants__WEBPACK_IMPORTED_MODULE_15__[\"DEFAULT_WEIGHT_PARAMS\"], weights[id]);\n      }\n\n      return result;\n    }\n  }, {\n    key: \"setState\",\n    value: function setState(updateObject) {\n      Object.assign(this.state, updateObject);\n    }\n  }, {\n    key: \"shouldTransformToGrid\",\n    value: function shouldTransformToGrid(opts) {\n      var projectPoints = opts.projectPoints,\n          changeFlags = opts.changeFlags;\n\n      if (!this.state.gridPositions || changeFlags.dataChanged || projectPoints && changeFlags.viewportChanged) {\n          return true;\n        }\n\n      return false;\n    }\n  }, {\n    key: \"updateGridSize\",\n    value: function updateGridSize(opts) {\n      var viewport = opts.viewport,\n          cellSize = opts.cellSize;\n      var width = opts.width || viewport.width;\n      var height = opts.height || viewport.height;\n      var numCol = Math.ceil(width / cellSize[0]);\n      var numRow = Math.ceil(height / cellSize[1]);\n      this.setState({\n        numCol: numCol,\n        numRow: numRow,\n        windowSize: [width, height]\n      });\n    }\n  }, {\n    key: \"validateProps\",\n    value: function validateProps(aggregationParams, opts) {\n      var changeFlags = aggregationParams.changeFlags,\n          projectPoints = aggregationParams.projectPoints,\n          gridTransformMatrix = aggregationParams.gridTransformMatrix;\n      _deck_gl_core__WEBPACK_IMPORTED_MODULE_13__[\"default\"].assert(changeFlags.dataChanged || changeFlags.viewportChanged || changeFlags.cellSizeChanged);\n      _deck_gl_core__WEBPACK_IMPORTED_MODULE_13__[\"default\"].assert(!changeFlags.dataChanged || opts.positions && opts.weights && (!opts.projectPositions || opts.viewport) && opts.cellSize);\n      _deck_gl_core__WEBPACK_IMPORTED_MODULE_13__[\"default\"].assert(!changeFlags.cellSizeChanged || opts.cellSize);\n      _deck_gl_core__WEBPACK_IMPORTED_MODULE_13__[\"default\"].assert(!(changeFlags.viewportChanged && projectPoints) || opts.viewport);\n\n      if (projectPoints && gridTransformMatrix) {\n        _deck_gl_core__WEBPACK_IMPORTED_MODULE_13__[\"default\"].warn('projectPoints is true, gridTransformMatrix is ignored')();\n      }\n    }\n  }, {\n    key: \"calculateAggregationData\",\n    value: function calculateAggregationData(opts) {\n      var weights = opts.weights,\n          results = opts.results,\n          cellIndex = opts.cellIndex,\n          posIndex = opts.posIndex;\n\n      for (var id in weights) {\n        var _weights$id = weights[id],\n            values = _weights$id.values,\n            size = _weights$id.size,\n            operation = _weights$id.operation;\n        var aggregationData = results[id].aggregationData;\n\n        for (var sizeIndex = 0; sizeIndex < size; sizeIndex++) {\n          var cellElementIndex = cellIndex + sizeIndex;\n          var weightComponent = values[posIndex * _gpu_grid_aggregator_constants__WEBPACK_IMPORTED_MODULE_15__[\"WEIGHT_SIZE\"] + sizeIndex];\n\n          if (aggregationData[cellIndex + 3] === 0) {\n            aggregationData[cellElementIndex] = weightComponent;\n          } else {\n            switch (operation) {\n              case _aggregation_operation_utils__WEBPACK_IMPORTED_MODULE_16__[\"AGGREGATION_OPERATION\"].SUM:\n              case _aggregation_operation_utils__WEBPACK_IMPORTED_MODULE_16__[\"AGGREGATION_OPERATION\"].MEAN:\n                aggregationData[cellElementIndex] += weightComponent;\n                break;\n\n              case _aggregation_operation_utils__WEBPACK_IMPORTED_MODULE_16__[\"AGGREGATION_OPERATION\"].MIN:\n                aggregationData[cellElementIndex] = Math.min(aggregationData[cellElementIndex], weightComponent);\n                break;\n\n              case _aggregation_operation_utils__WEBPACK_IMPORTED_MODULE_16__[\"AGGREGATION_OPERATION\"].MAX:\n                aggregationData[cellElementIndex] = Math.max(aggregationData[cellElementIndex], weightComponent);\n                break;\n\n              default:\n                _deck_gl_core__WEBPACK_IMPORTED_MODULE_13__[\"default\"].assert(false);\n                break;\n            }\n          }\n        }\n\n        aggregationData[cellIndex + 3]++;\n      }\n    }\n  }, {\n    key: \"calculateMeanMaxMinData\",\n    value: function calculateMeanMaxMinData(opts) {\n      var validCellIndices = opts.validCellIndices,\n          results = opts.results,\n          weights = opts.weights;\n      validCellIndices.forEach(function (cellIndex) {\n        for (var id in results) {\n          var _weights$id2 = weights[id],\n              size = _weights$id2.size,\n              needMin = _weights$id2.needMin,\n              needMax = _weights$id2.needMax,\n              operation = _weights$id2.operation;\n          var _results$id = results[id],\n              aggregationData = _results$id.aggregationData,\n              minData = _results$id.minData,\n              maxData = _results$id.maxData,\n              maxMinData = _results$id.maxMinData;\n          var calculateMinMax = needMin || needMax;\n          var calculateMean = operation === _aggregation_operation_utils__WEBPACK_IMPORTED_MODULE_16__[\"AGGREGATION_OPERATION\"].MEAN;\n          var combineMaxMin = needMin && needMax && weights[id].combineMaxMin;\n          var count = aggregationData[cellIndex + _gpu_grid_aggregator_constants__WEBPACK_IMPORTED_MODULE_15__[\"ELEMENTCOUNT\"] - 1];\n\n          for (var sizeIndex = 0; sizeIndex < size && (calculateMinMax || calculateMean); sizeIndex++) {\n            var cellElementIndex = cellIndex + sizeIndex;\n            var weight = aggregationData[cellElementIndex];\n\n            if (calculateMean) {\n              aggregationData[cellElementIndex] /= count;\n              weight = aggregationData[cellElementIndex];\n            }\n\n            if (combineMaxMin) {\n              maxMinData[sizeIndex] = Math.max(maxMinData[sizeIndex], weight);\n            } else {\n              if (needMin) {\n                minData[sizeIndex] = Math.min(minData[sizeIndex], weight);\n              }\n\n              if (needMax) {\n                maxData[sizeIndex] = Math.max(maxData[sizeIndex], weight);\n              }\n            }\n          }\n\n          if (combineMaxMin) {\n            maxMinData[_gpu_grid_aggregator_constants__WEBPACK_IMPORTED_MODULE_15__[\"ELEMENTCOUNT\"] - 1] = Math.min(maxMinData[_gpu_grid_aggregator_constants__WEBPACK_IMPORTED_MODULE_15__[\"ELEMENTCOUNT\"] - 1], aggregationData[cellIndex + 0]);\n          } else {\n            if (needMin) {\n              minData[_gpu_grid_aggregator_constants__WEBPACK_IMPORTED_MODULE_15__[\"ELEMENTCOUNT\"] - 1] += count;\n            }\n\n            if (needMax) {\n              maxData[_gpu_grid_aggregator_constants__WEBPACK_IMPORTED_MODULE_15__[\"ELEMENTCOUNT\"] - 1] += count;\n            }\n          }\n        }\n      });\n    }\n  }, {\n    key: \"initCPUResults\",\n    value: function initCPUResults(opts) {\n      var weights = opts.weights || this.state.weights;\n      var _this$state2 = this.state,\n          numCol = _this$state2.numCol,\n          numRow = _this$state2.numRow;\n      var results = {};\n\n      for (var id in weights) {\n        var _weights$id3 = weights[id],\n            aggregationData = _weights$id3.aggregationData,\n            minData = _weights$id3.minData,\n            maxData = _weights$id3.maxData,\n            maxMinData = _weights$id3.maxMinData;\n        var _weights$id4 = weights[id],\n            needMin = _weights$id4.needMin,\n            needMax = _weights$id4.needMax;\n        var combineMaxMin = needMin && needMax && weights[id].combineMaxMin;\n        var aggregationSize = numCol * numRow * _gpu_grid_aggregator_constants__WEBPACK_IMPORTED_MODULE_15__[\"ELEMENTCOUNT\"];\n        aggregationData = Object(_gpu_grid_aggregator_utils_js__WEBPACK_IMPORTED_MODULE_23__[\"getFloatArray\"])(aggregationData, aggregationSize);\n\n        if (combineMaxMin) {\n          maxMinData = Object(_gpu_grid_aggregator_utils_js__WEBPACK_IMPORTED_MODULE_23__[\"getFloatArray\"])(maxMinData, _gpu_grid_aggregator_constants__WEBPACK_IMPORTED_MODULE_15__[\"ELEMENTCOUNT\"]);\n          maxMinData.fill(-Infinity, 0, _gpu_grid_aggregator_constants__WEBPACK_IMPORTED_MODULE_15__[\"ELEMENTCOUNT\"] - 1);\n          maxMinData[_gpu_grid_aggregator_constants__WEBPACK_IMPORTED_MODULE_15__[\"ELEMENTCOUNT\"] - 1] = Infinity;\n        } else {\n          if (needMin) {\n            minData = Object(_gpu_grid_aggregator_utils_js__WEBPACK_IMPORTED_MODULE_23__[\"getFloatArray\"])(minData, _gpu_grid_aggregator_constants__WEBPACK_IMPORTED_MODULE_15__[\"ELEMENTCOUNT\"], Infinity);\n            minData[_gpu_grid_aggregator_constants__WEBPACK_IMPORTED_MODULE_15__[\"ELEMENTCOUNT\"] - 1] = 0;\n          }\n\n          if (needMax) {\n            maxData = Object(_gpu_grid_aggregator_utils_js__WEBPACK_IMPORTED_MODULE_23__[\"getFloatArray\"])(maxData, _gpu_grid_aggregator_constants__WEBPACK_IMPORTED_MODULE_15__[\"ELEMENTCOUNT\"], -Infinity);\n            maxData[_gpu_grid_aggregator_constants__WEBPACK_IMPORTED_MODULE_15__[\"ELEMENTCOUNT\"] - 1] = 0;\n          }\n        }\n\n        results[id] = Object.assign({}, weights[id], {\n          aggregationData: aggregationData,\n          minData: minData,\n          maxData: maxData,\n          maxMinData: maxMinData\n        });\n      }\n\n      return results;\n    }\n  }, {\n    key: \"runAggregationOnCPU\",\n    value: function runAggregationOnCPU(opts) {\n      var positions = opts.positions,\n          cellSize = opts.cellSize,\n          gridTransformMatrix = opts.gridTransformMatrix,\n          viewport = opts.viewport,\n          projectPoints = opts.projectPoints;\n      var weights = opts.weights;\n      var _this$state3 = this.state,\n          numCol = _this$state3.numCol,\n          numRow = _this$state3.numRow;\n      var results = this.initCPUResults(opts);\n      var gridTransformRequired = this.shouldTransformToGrid(opts);\n      var gridPositions;\n      var pos = [0, 0, 0];\n      _deck_gl_core__WEBPACK_IMPORTED_MODULE_13__[\"default\"].assert(gridTransformRequired || opts.changeFlags.cellSizeChanged);\n      var posCount;\n\n      if (gridTransformRequired) {\n        posCount = positions.length / 2;\n        gridPositions = new Float64Array(positions.length);\n        this.setState({\n          gridPositions: gridPositions\n        });\n      } else {\n        gridPositions = this.state.gridPositions;\n        weights = this.state.weights;\n        posCount = gridPositions.length / 2;\n      }\n\n      var validCellIndices = new Set();\n\n      for (var posIndex = 0; posIndex < posCount; posIndex++) {\n        var x = void 0;\n        var y = void 0;\n\n        if (gridTransformRequired) {\n          pos[0] = positions[posIndex * 2];\n          pos[1] = positions[posIndex * 2 + 1];\n\n          if (projectPoints) {\n            var _viewport$project = viewport.project(pos);\n\n            var _viewport$project2 = Object(_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_1__[\"default\"])(_viewport$project, 2);\n\n            x = _viewport$project2[0];\n            y = _viewport$project2[1];\n          } else {\n            var _worldToPixels = Object(viewport_mercator_project__WEBPACK_IMPORTED_MODULE_14__[\"worldToPixels\"])(pos, gridTransformMatrix);\n\n            var _worldToPixels2 = Object(_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_1__[\"default\"])(_worldToPixels, 2);\n\n            x = _worldToPixels2[0];\n            y = _worldToPixels2[1];\n          }\n\n          gridPositions[posIndex * 2] = x;\n          gridPositions[posIndex * 2 + 1] = y;\n        } else {\n          x = gridPositions[posIndex * 2];\n          y = gridPositions[posIndex * 2 + 1];\n        }\n\n        var colId = Math.floor(x / cellSize[0]);\n        var rowId = Math.floor(y / cellSize[1]);\n\n        if (colId >= 0 && colId < numCol && rowId >= 0 && rowId < numRow) {\n          var cellIndex = (colId + rowId * numCol) * _gpu_grid_aggregator_constants__WEBPACK_IMPORTED_MODULE_15__[\"ELEMENTCOUNT\"];\n          validCellIndices.add(cellIndex);\n          this.calculateAggregationData({\n            weights: weights,\n            results: results,\n            cellIndex: cellIndex,\n            posIndex: posIndex\n          });\n        }\n      }\n\n      this.calculateMeanMaxMinData({\n        validCellIndices: validCellIndices,\n        results: results,\n        weights: weights\n      });\n      this.updateAggregationBuffers(opts, results);\n      this.setState({\n        results: results\n      });\n      return results;\n    }\n  }, {\n    key: \"updateCPUResultBuffer\",\n    value: function updateCPUResultBuffer(_ref3) {\n      var gl = _ref3.gl,\n          bufferName = _ref3.bufferName,\n          id = _ref3.id,\n          data = _ref3.data,\n          result = _ref3.result;\n      var resources = this.state.resources;\n      var resourceName = \"cpu-result-\".concat(id, \"-\").concat(bufferName);\n      result[bufferName] = result[bufferName] || resources[resourceName];\n\n      if (result[bufferName]) {\n        result[bufferName].setData({\n          data: data\n        });\n      } else {\n        resources[resourceName] = new _luma_gl_core__WEBPACK_IMPORTED_MODULE_8__[\"default\"](gl, data);\n        result[bufferName] = resources[resourceName];\n      }\n    }\n  }, {\n    key: \"updateAggregationBuffers\",\n    value: function updateAggregationBuffers(opts, results) {\n      if (!opts.createBufferObjects) {\n        return;\n      }\n\n      var weights = opts.weights || this.state.weights;\n\n      for (var id in results) {\n        var _results$id2 = results[id],\n            aggregationData = _results$id2.aggregationData,\n            minData = _results$id2.minData,\n            maxData = _results$id2.maxData,\n            maxMinData = _results$id2.maxMinData;\n        var _weights$id5 = weights[id],\n            needMin = _weights$id5.needMin,\n            needMax = _weights$id5.needMax;\n        var combineMaxMin = needMin && needMax && weights[id].combineMaxMin;\n        this.updateCPUResultBuffer({\n          gl: this.gl,\n          bufferName: 'aggregationBuffer',\n          id: id,\n          data: aggregationData,\n          result: results[id]\n        });\n\n        if (combineMaxMin) {\n          this.updateCPUResultBuffer({\n            gl: this.gl,\n            bufferName: 'maxMinBuffer',\n            id: id,\n            data: maxMinData,\n            result: results[id]\n          });\n        } else {\n          if (needMin) {\n            this.updateCPUResultBuffer({\n              gl: this.gl,\n              bufferName: 'minBuffer',\n              id: id,\n              data: minData,\n              result: results[id]\n            });\n          }\n\n          if (needMax) {\n            this.updateCPUResultBuffer({\n              gl: this.gl,\n              bufferName: 'maxBuffer',\n              id: id,\n              data: maxData,\n              result: results[id]\n            });\n          }\n        }\n      }\n    }\n  }, {\n    key: \"getAggregateData\",\n    value: function getAggregateData(opts) {\n      var results = {};\n      var _this$state4 = this.state,\n          textures = _this$state4.textures,\n          framebuffers = _this$state4.framebuffers,\n          maxMinFramebuffers = _this$state4.maxMinFramebuffers,\n          minFramebuffers = _this$state4.minFramebuffers,\n          maxFramebuffers = _this$state4.maxFramebuffers,\n          weights = _this$state4.weights;\n\n      for (var id in weights) {\n        results[id] = {};\n        var _weights$id6 = weights[id],\n            needMin = _weights$id6.needMin,\n            needMax = _weights$id6.needMax,\n            combineMaxMin = _weights$id6.combineMaxMin;\n        results[id].aggregationTexture = textures[id];\n        results[id].aggregationBuffer = Object(_luma_gl_core__WEBPACK_IMPORTED_MODULE_9__[\"readPixelsToBuffer\"])(framebuffers[id], {\n          target: weights[id].aggregationBuffer,\n          sourceType: 5126\n        });\n\n        if (needMin && needMax && combineMaxMin) {\n          results[id].maxMinBuffer = Object(_luma_gl_core__WEBPACK_IMPORTED_MODULE_9__[\"readPixelsToBuffer\"])(maxMinFramebuffers[id], {\n            target: weights[id].maxMinBuffer,\n            sourceType: 5126\n          });\n        } else {\n          if (needMin) {\n            results[id].minBuffer = Object(_luma_gl_core__WEBPACK_IMPORTED_MODULE_9__[\"readPixelsToBuffer\"])(minFramebuffers[id], {\n              target: weights[id].minBuffer,\n              sourceType: 5126\n            });\n          }\n\n          if (needMax) {\n            results[id].maxBuffer = Object(_luma_gl_core__WEBPACK_IMPORTED_MODULE_9__[\"readPixelsToBuffer\"])(maxFramebuffers[id], {\n              target: weights[id].maxBuffer,\n              sourceType: 5126\n            });\n          }\n        }\n      }\n\n      this.trackGPUResultBuffers(results, weights);\n      return results;\n    }\n  }, {\n    key: \"getAggregationModel\",\n    value: function getAggregationModel() {\n      var fp64 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n      var gl = this.gl,\n          shaderCache = this.shaderCache;\n      return new _luma_gl_core__WEBPACK_IMPORTED_MODULE_10__[\"default\"](gl, {\n        id: 'Gird-Aggregation-Model',\n        vs: fp64 ? _aggregate_to_grid_vs_64_glsl__WEBPACK_IMPORTED_MODULE_18__[\"default\"] : _aggregate_to_grid_vs_glsl__WEBPACK_IMPORTED_MODULE_17__[\"default\"],\n        fs: _aggregate_to_grid_fs_glsl__WEBPACK_IMPORTED_MODULE_19__[\"default\"],\n        modules: fp64 ? ['fp64', 'project64'] : ['project32'],\n        shaderCache: shaderCache,\n        vertexCount: 0,\n        drawMode: 0\n      });\n    }\n  }, {\n    key: \"getAllAggregationModel\",\n    value: function getAllAggregationModel() {\n      var gl = this.gl,\n          shaderCache = this.shaderCache;\n      var _this$state5 = this.state,\n          numCol = _this$state5.numCol,\n          numRow = _this$state5.numRow;\n      return new _luma_gl_core__WEBPACK_IMPORTED_MODULE_10__[\"default\"](gl, {\n        id: 'All-Aggregation-Model',\n        vs: _aggregate_all_vs_64_glsl__WEBPACK_IMPORTED_MODULE_20__[\"default\"],\n        fs: _aggregate_all_fs_glsl__WEBPACK_IMPORTED_MODULE_21__[\"default\"],\n        modules: ['fp64'],\n        shaderCache: shaderCache,\n        vertexCount: 1,\n        drawMode: 0,\n        isInstanced: true,\n        instanceCount: numCol * numRow,\n        attributes: {\n          position: [0, 0]\n        }\n      });\n    }\n  }, {\n    key: \"getMeanTransform\",\n    value: function getMeanTransform(opts) {\n      if (this.meanTransform) {\n        this.meanTransform.update(opts);\n      } else {\n        this.meanTransform = new _luma_gl_core__WEBPACK_IMPORTED_MODULE_11__[\"default\"](this.gl, Object.assign({}, {\n          vs: _transform_mean_vs_glsl__WEBPACK_IMPORTED_MODULE_22__[\"default\"],\n          _targetTextureVarying: 'meanValues'\n        }, opts));\n      }\n\n      return this.meanTransform;\n    }\n  }, {\n    key: \"renderAggregateData\",\n    value: function renderAggregateData(opts) {\n      var cellSize = opts.cellSize,\n          viewport = opts.viewport,\n          gridTransformMatrix = opts.gridTransformMatrix,\n          projectPoints = opts.projectPoints;\n      var _this$state6 = this.state,\n          numCol = _this$state6.numCol,\n          numRow = _this$state6.numRow,\n          windowSize = _this$state6.windowSize,\n          maxMinFramebuffers = _this$state6.maxMinFramebuffers,\n          minFramebuffers = _this$state6.minFramebuffers,\n          maxFramebuffers = _this$state6.maxFramebuffers,\n          weights = _this$state6.weights;\n      var uProjectionMatrixFP64 = fp64ifyMatrix4(gridTransformMatrix);\n      var gridSize = [numCol, numRow];\n      var parameters = {\n        blend: true,\n        depthTest: false,\n        blendFunc: [1, 1]\n      };\n      var moduleSettings = {\n        viewport: viewport\n      };\n      var uniforms = {\n        windowSize: windowSize,\n        cellSize: cellSize,\n        gridSize: gridSize,\n        uProjectionMatrix: gridTransformMatrix,\n        uProjectionMatrixFP64: uProjectionMatrixFP64,\n        projectPoints: projectPoints\n      };\n\n      for (var id in weights) {\n        var _weights$id7 = weights[id],\n            needMin = _weights$id7.needMin,\n            needMax = _weights$id7.needMax;\n        var combineMaxMin = needMin && needMax && weights[id].combineMaxMin;\n        this.renderToWeightsTexture({\n          id: id,\n          parameters: parameters,\n          moduleSettings: moduleSettings,\n          uniforms: uniforms,\n          gridSize: gridSize\n        });\n\n        if (combineMaxMin) {\n          this.renderToMaxMinTexture({\n            id: id,\n            parameters: Object.assign({}, parameters, {\n              blendEquation: _gpu_grid_aggregator_constants__WEBPACK_IMPORTED_MODULE_15__[\"MAX_MIN_BLEND_EQUATION\"]\n            }),\n            gridSize: gridSize,\n            minOrMaxFb: maxMinFramebuffers[id],\n            clearParams: {\n              clearColor: [0, 0, 0, _gpu_grid_aggregator_constants__WEBPACK_IMPORTED_MODULE_15__[\"MAX_32_BIT_FLOAT\"]]\n            },\n            combineMaxMin: combineMaxMin\n          });\n        } else {\n          if (needMin) {\n            this.renderToMaxMinTexture({\n              id: id,\n              parameters: Object.assign({}, parameters, {\n                blendEquation: _gpu_grid_aggregator_constants__WEBPACK_IMPORTED_MODULE_15__[\"MIN_BLEND_EQUATION\"]\n              }),\n              gridSize: gridSize,\n              minOrMaxFb: minFramebuffers[id],\n              clearParams: {\n                clearColor: [_gpu_grid_aggregator_constants__WEBPACK_IMPORTED_MODULE_15__[\"MAX_32_BIT_FLOAT\"], _gpu_grid_aggregator_constants__WEBPACK_IMPORTED_MODULE_15__[\"MAX_32_BIT_FLOAT\"], _gpu_grid_aggregator_constants__WEBPACK_IMPORTED_MODULE_15__[\"MAX_32_BIT_FLOAT\"], 0]\n              },\n              combineMaxMin: combineMaxMin\n            });\n          }\n\n          if (needMax) {\n            this.renderToMaxMinTexture({\n              id: id,\n              parameters: Object.assign({}, parameters, {\n                blendEquation: _gpu_grid_aggregator_constants__WEBPACK_IMPORTED_MODULE_15__[\"MAX_BLEND_EQUATION\"]\n              }),\n              gridSize: gridSize,\n              minOrMaxFb: maxFramebuffers[id],\n              combineMaxMin: combineMaxMin\n            });\n          }\n        }\n      }\n    }\n  }, {\n    key: \"renderToMaxMinTexture\",\n    value: function renderToMaxMinTexture(opts) {\n      var id = opts.id,\n          parameters = opts.parameters,\n          gridSize = opts.gridSize,\n          minOrMaxFb = opts.minOrMaxFb,\n          combineMaxMin = opts.combineMaxMin,\n          _opts$clearParams = opts.clearParams,\n          clearParams = _opts$clearParams === void 0 ? {} : _opts$clearParams;\n      var framebuffers = this.state.framebuffers;\n      var gl = this.gl,\n          allAggregationModel = this.allAggregationModel;\n      minOrMaxFb.bind();\n      gl.viewport(0, 0, gridSize[0], gridSize[1]);\n      Object(_luma_gl_core__WEBPACK_IMPORTED_MODULE_12__[\"withParameters\"])(gl, clearParams, function () {\n        gl.clear(16384);\n      });\n      allAggregationModel.draw({\n        parameters: parameters,\n        uniforms: {\n          uSampler: framebuffers[id].texture,\n          gridSize: gridSize,\n          combineMaxMin: combineMaxMin\n        }\n      });\n      minOrMaxFb.unbind();\n    }\n  }, {\n    key: \"renderToWeightsTexture\",\n    value: function renderToWeightsTexture(opts) {\n      var id = opts.id,\n          parameters = opts.parameters,\n          moduleSettings = opts.moduleSettings,\n          uniforms = opts.uniforms,\n          gridSize = opts.gridSize;\n      var _this$state7 = this.state,\n          framebuffers = _this$state7.framebuffers,\n          equations = _this$state7.equations,\n          weightAttributes = _this$state7.weightAttributes,\n          weights = _this$state7.weights;\n      var gl = this.gl,\n          gridAggregationModel = this.gridAggregationModel;\n      var operation = weights[id].operation;\n      framebuffers[id].bind();\n      gl.viewport(0, 0, gridSize[0], gridSize[1]);\n      var clearColor = operation === _aggregation_operation_utils__WEBPACK_IMPORTED_MODULE_16__[\"AGGREGATION_OPERATION\"].MIN ? [_gpu_grid_aggregator_constants__WEBPACK_IMPORTED_MODULE_15__[\"MAX_32_BIT_FLOAT\"], _gpu_grid_aggregator_constants__WEBPACK_IMPORTED_MODULE_15__[\"MAX_32_BIT_FLOAT\"], _gpu_grid_aggregator_constants__WEBPACK_IMPORTED_MODULE_15__[\"MAX_32_BIT_FLOAT\"], 0] : [0, 0, 0, 0];\n      Object(_luma_gl_core__WEBPACK_IMPORTED_MODULE_12__[\"withParameters\"])(gl, {\n        clearColor: clearColor\n      }, function () {\n        gl.clear(16384);\n      });\n      var attributes = {\n        weights: weightAttributes[id]\n      };\n      gridAggregationModel.draw({\n        parameters: Object.assign({}, parameters, {\n          blendEquation: equations[id]\n        }),\n        moduleSettings: moduleSettings,\n        uniforms: uniforms,\n        attributes: attributes\n      });\n      framebuffers[id].unbind();\n\n      if (operation === _aggregation_operation_utils__WEBPACK_IMPORTED_MODULE_16__[\"AGGREGATION_OPERATION\"].MEAN) {\n        var _this$state8 = this.state,\n            meanTextures = _this$state8.meanTextures,\n            textures = _this$state8.textures;\n        var transformOptions = {\n          _sourceTextures: {\n            aggregationValues: meanTextures[id]\n          },\n          _targetTexture: textures[id],\n          elementCount: textures[id].width * textures[id].height\n        };\n        var meanTransform = this.getMeanTransform(transformOptions);\n        meanTransform.run({\n          parameters: {\n            blend: false,\n            depthTest: false\n          }\n        });\n        framebuffers[id].attach(Object(_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__[\"default\"])({}, 36064, textures[id]));\n      }\n    }\n  }, {\n    key: \"runAggregationOnGPU\",\n    value: function runAggregationOnGPU(opts) {\n      this.updateModels(opts);\n      this.setupFramebuffers(opts);\n      this.renderAggregateData(opts);\n      var results = this.getAggregateData(opts);\n      this.setState({\n        results: results\n      });\n      return results;\n    }\n  }, {\n    key: \"setupFramebuffers\",\n    value: function setupFramebuffers(opts) {\n      var _this$state9 = this.state,\n          numCol = _this$state9.numCol,\n          numRow = _this$state9.numRow,\n          textures = _this$state9.textures,\n          framebuffers = _this$state9.framebuffers,\n          maxMinFramebuffers = _this$state9.maxMinFramebuffers,\n          minFramebuffers = _this$state9.minFramebuffers,\n          maxFramebuffers = _this$state9.maxFramebuffers,\n          resources = _this$state9.resources,\n          meanTextures = _this$state9.meanTextures,\n          equations = _this$state9.equations,\n          weights = _this$state9.weights;\n      var framebufferSize = {\n        width: numCol,\n        height: numRow\n      };\n\n      for (var id in weights) {\n        var _weights$id8 = weights[id],\n            needMin = _weights$id8.needMin,\n            needMax = _weights$id8.needMax,\n            combineMaxMin = _weights$id8.combineMaxMin,\n            operation = _weights$id8.operation;\n        textures[id] = weights[id].aggregationTexture || textures[id] || Object(_gpu_grid_aggregator_utils_js__WEBPACK_IMPORTED_MODULE_23__[\"getFloatTexture\"])(this.gl, {\n          id: \"\".concat(id, \"-texture\"),\n          width: numCol,\n          height: numRow\n        });\n        textures[id].resize(framebufferSize);\n        var texture = textures[id];\n\n        if (operation === _aggregation_operation_utils__WEBPACK_IMPORTED_MODULE_16__[\"AGGREGATION_OPERATION\"].MEAN) {\n          meanTextures[id] = meanTextures[id] || Object(_gpu_grid_aggregator_utils_js__WEBPACK_IMPORTED_MODULE_23__[\"getFloatTexture\"])(this.gl, {\n            id: \"\".concat(id, \"-mean-texture\"),\n            width: numCol,\n            height: numRow\n          });\n          meanTextures[id].resize(framebufferSize);\n          texture = meanTextures[id];\n        }\n\n        if (framebuffers[id]) {\n          framebuffers[id].attach(Object(_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__[\"default\"])({}, 36064, texture));\n        } else {\n          framebuffers[id] = Object(_gpu_grid_aggregator_utils_js__WEBPACK_IMPORTED_MODULE_23__[\"getFramebuffer\"])(this.gl, {\n            id: \"\".concat(id, \"-fb\"),\n            width: numCol,\n            height: numRow,\n            texture: texture\n          });\n        }\n\n        framebuffers[id].resize(framebufferSize);\n        equations[id] = _gpu_grid_aggregator_constants__WEBPACK_IMPORTED_MODULE_15__[\"EQUATION_MAP\"][operation];\n\n        if (needMin || needMax) {\n          if (needMin && needMax && combineMaxMin) {\n            if (!maxMinFramebuffers[id]) {\n              resources[\"\".concat(id, \"-maxMin\")] = Object(_gpu_grid_aggregator_utils_js__WEBPACK_IMPORTED_MODULE_23__[\"getFloatTexture\"])(this.gl, {\n                id: \"\".concat(id, \"-maxMinTex\")\n              });\n              maxMinFramebuffers[id] = Object(_gpu_grid_aggregator_utils_js__WEBPACK_IMPORTED_MODULE_23__[\"getFramebuffer\"])(this.gl, {\n                id: \"\".concat(id, \"-maxMinFb\"),\n                texture: resources[\"\".concat(id, \"-maxMin\")]\n              });\n            }\n          } else {\n            if (needMin) {\n              if (!minFramebuffers[id]) {\n                resources[\"\".concat(id, \"-min\")] = Object(_gpu_grid_aggregator_utils_js__WEBPACK_IMPORTED_MODULE_23__[\"getFloatTexture\"])(this.gl, {\n                  id: \"\".concat(id, \"-minTex\")\n                });\n                minFramebuffers[id] = Object(_gpu_grid_aggregator_utils_js__WEBPACK_IMPORTED_MODULE_23__[\"getFramebuffer\"])(this.gl, {\n                  id: \"\".concat(id, \"-minFb\"),\n                  texture: resources[\"\".concat(id, \"-min\")]\n                });\n              }\n            }\n\n            if (needMax) {\n              if (!maxFramebuffers[id]) {\n                resources[\"\".concat(id, \"-max\")] = Object(_gpu_grid_aggregator_utils_js__WEBPACK_IMPORTED_MODULE_23__[\"getFloatTexture\"])(this.gl, {\n                  id: \"\".concat(id, \"-maxTex\")\n                });\n                maxFramebuffers[id] = Object(_gpu_grid_aggregator_utils_js__WEBPACK_IMPORTED_MODULE_23__[\"getFramebuffer\"])(this.gl, {\n                  id: \"\".concat(id, \"-maxFb\"),\n                  texture: resources[\"\".concat(id, \"-max\")]\n                });\n              }\n            }\n          }\n        }\n      }\n    }\n  }, {\n    key: \"setupModels\",\n    value: function setupModels() {\n      var fp64 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n\n      if (this.gridAggregationModel) {\n        this.gridAggregationModel.delete();\n      }\n\n      this.gridAggregationModel = this.getAggregationModel(fp64);\n\n      if (!this.allAggregationModel) {\n        this.allAggregationModel = this.getAllAggregationModel();\n      }\n    }\n  }, {\n    key: \"setupWeightAttributes\",\n    value: function setupWeightAttributes(opts) {\n      var _this$state10 = this.state,\n          weightAttributes = _this$state10.weightAttributes,\n          vertexCount = _this$state10.vertexCount,\n          weights = _this$state10.weights,\n          resources = _this$state10.resources;\n\n      for (var id in weights) {\n        var values = weights[id].values;\n\n        if (Array.isArray(values) || values.constructor === Float32Array) {\n          _deck_gl_core__WEBPACK_IMPORTED_MODULE_13__[\"default\"].assert(values.length / 3 === vertexCount);\n          var typedArray = Array.isArray(values) ? new Float32Array(values) : values;\n\n          if (weightAttributes[id] instanceof _luma_gl_core__WEBPACK_IMPORTED_MODULE_8__[\"default\"]) {\n            weightAttributes[id].setData(typedArray);\n          } else {\n            resources[\"\".concat(id, \"-buffer\")] = new _luma_gl_core__WEBPACK_IMPORTED_MODULE_8__[\"default\"](this.gl, typedArray);\n            weightAttributes[id] = resources[\"\".concat(id, \"-buffer\")];\n          }\n        } else {\n          _deck_gl_core__WEBPACK_IMPORTED_MODULE_13__[\"default\"].assert(values instanceof _luma_gl_core__WEBPACK_IMPORTED_MODULE_8__[\"default\"]);\n          weightAttributes[id] = values;\n        }\n      }\n    }\n  }, {\n    key: \"trackGPUResultBuffers\",\n    value: function trackGPUResultBuffers(results, weights) {\n      var resources = this.state.resources;\n\n      for (var id in results) {\n        if (results[id]) {\n          for (var _i = 0; _i < BUFFER_NAMES.length; _i++) {\n            var bufferName = BUFFER_NAMES[_i];\n\n            if (results[id][bufferName] && weights[id][bufferName] !== results[id][bufferName]) {\n              var name = \"gpu-result-\".concat(id, \"-\").concat(bufferName);\n\n              if (resources[name]) {\n                resources[name].delete();\n              }\n\n              resources[name] = results[id][bufferName];\n            }\n          }\n        }\n      }\n    }\n  }, {\n    key: \"updateModels\",\n    value: function updateModels(opts) {\n      var gl = this.gl;\n      var positions = opts.positions,\n          positions64xyLow = opts.positions64xyLow,\n          changeFlags = opts.changeFlags;\n      var _this$state11 = this.state,\n          numCol = _this$state11.numCol,\n          numRow = _this$state11.numRow;\n      var aggregationModelAttributes = {};\n      var modelDirty = false;\n\n      if (opts.fp64 !== this.state.fp64) {\n        this.setupModels(opts.fp64);\n        this.setState({\n          fp64: opts.fp64\n        });\n        modelDirty = true;\n      }\n\n      if (changeFlags.dataChanged || !this.state.positionsBuffer) {\n        var _this$state12 = this.state,\n            positionsBuffer = _this$state12.positionsBuffer,\n            positions64xyLowBuffer = _this$state12.positions64xyLowBuffer;\n\n        if (positionsBuffer) {\n          positionsBuffer.delete();\n        }\n\n        if (positions64xyLowBuffer) {\n          positions64xyLowBuffer.delete();\n        }\n\n        var vertexCount = positions.length / 2;\n        positionsBuffer = new _luma_gl_core__WEBPACK_IMPORTED_MODULE_8__[\"default\"](gl, new Float32Array(positions));\n        positions64xyLowBuffer = new _luma_gl_core__WEBPACK_IMPORTED_MODULE_8__[\"default\"](gl, {\n          data: new Float32Array(positions64xyLow),\n          accessor: {\n            size: 2\n          }\n        });\n        this.setState({\n          positionsBuffer: positionsBuffer,\n          positions64xyLowBuffer: positions64xyLowBuffer,\n          vertexCount: vertexCount\n        });\n        this.setupWeightAttributes(opts);\n        modelDirty = true;\n      }\n\n      if (modelDirty) {\n        var _this$state13 = this.state,\n            _vertexCount = _this$state13.vertexCount,\n            _positionsBuffer = _this$state13.positionsBuffer,\n            _positions64xyLowBuffer = _this$state13.positions64xyLowBuffer;\n        aggregationModelAttributes.positions = _positionsBuffer;\n\n        if (opts.fp64) {\n          aggregationModelAttributes.positions64xyLow = _positions64xyLowBuffer;\n        }\n\n        this.gridAggregationModel.setVertexCount(_vertexCount);\n        this.gridAggregationModel.setAttributes(aggregationModelAttributes);\n      }\n\n      if (changeFlags.cellSizeChanged || changeFlags.viewportChanged) {\n        this.allAggregationModel.setInstanceCount(numCol * numRow);\n      }\n    }\n  }]);\n\n  return GPUGridAggregator;\n}();\n\n\n//# sourceMappingURL=gpu-grid-aggregator.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/@deck.gl/aggregation-layers/dist/esm/utils/gpu-grid-aggregation/gpu-grid-aggregator.js\n");

/***/ }),

/***/ "./node_modules/@deck.gl/aggregation-layers/dist/esm/utils/gpu-grid-aggregation/transform-mean-vs.glsl.js":
/*!****************************************************************************************************************!*\
  !*** ./node_modules/@deck.gl/aggregation-layers/dist/esm/utils/gpu-grid-aggregation/transform-mean-vs.glsl.js ***!
  \****************************************************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony default export */ __webpack_exports__[\"default\"] = (\"#define SHADER_NAME gpu-aggregation-transform-mean-vs\\nattribute vec4 aggregationValues;\\nvarying vec4 meanValues;\\n\\nvoid main()\\n{\\n  bool isCellValid = bool(aggregationValues.w > 0.);\\n  meanValues.xyz = isCellValid ? aggregationValues.xyz/aggregationValues.w : vec3(0, 0, 0);\\n  meanValues.w = aggregationValues.w;\\n}\\n\");\n//# sourceMappingURL=transform-mean-vs.glsl.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQGRlY2suZ2wvYWdncmVnYXRpb24tbGF5ZXJzL2Rpc3QvZXNtL3V0aWxzL2dwdS1ncmlkLWFnZ3JlZ2F0aW9uL3RyYW5zZm9ybS1tZWFuLXZzLmdsc2wuanMuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvQGRlY2suZ2wvYWdncmVnYXRpb24tbGF5ZXJzL2Rpc3QvZXNtL3V0aWxzL2dwdS1ncmlkLWFnZ3JlZ2F0aW9uL3RyYW5zZm9ybS1tZWFuLXZzLmdsc2wuanM/ZmEyMiJdLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgZGVmYXVsdCBcIiNkZWZpbmUgU0hBREVSX05BTUUgZ3B1LWFnZ3JlZ2F0aW9uLXRyYW5zZm9ybS1tZWFuLXZzXFxuYXR0cmlidXRlIHZlYzQgYWdncmVnYXRpb25WYWx1ZXM7XFxudmFyeWluZyB2ZWM0IG1lYW5WYWx1ZXM7XFxuXFxudm9pZCBtYWluKClcXG57XFxuICBib29sIGlzQ2VsbFZhbGlkID0gYm9vbChhZ2dyZWdhdGlvblZhbHVlcy53ID4gMC4pO1xcbiAgbWVhblZhbHVlcy54eXogPSBpc0NlbGxWYWxpZCA/IGFnZ3JlZ2F0aW9uVmFsdWVzLnh5ei9hZ2dyZWdhdGlvblZhbHVlcy53IDogdmVjMygwLCAwLCAwKTtcXG4gIG1lYW5WYWx1ZXMudyA9IGFnZ3JlZ2F0aW9uVmFsdWVzLnc7XFxufVxcblwiO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9dHJhbnNmb3JtLW1lYW4tdnMuZ2xzbC5qcy5tYXAiXSwibWFwcGluZ3MiOiJBQUFBO0FBQUE7QUFDQSIsInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/@deck.gl/aggregation-layers/dist/esm/utils/gpu-grid-aggregation/transform-mean-vs.glsl.js\n");

/***/ })

}]);